!function(){var app=angular.module("myTestApp",["attunity.genFactories","myTestApp.controllers","attGlobalMessages","attGlobalLoader","jsonFormatter","AttFormValidation","attCommon.attCommonServices","attCommon.commonDirectives","attTokenInjector"]);app.filter("reqFilter",function(){return function(object,filterStr){if(void 0==filterStr||""==filterStr)return object;var res={};for(var prop in object)object[prop].toLowerCase().indexOf(filterStr.toLowerCase())>=0&&(res[prop]=object[prop]);return res}});var controllers=angular.module("myTestApp.controllers",[]);app.factory("testAppInterceptor",["$q",function($q){return{request:function(config){return config},requestError:function(rejection){return $q.reject(rejection)},response:function(response){{var appStatus=response.headers("Application-Status"),appMessage=response.headers("Application-Message");response.headers("Application-Session")}return null!=appStatus&&"200"!=appStatus?$q.reject({data:appMessage,status:appStatus}):response},responseError:function(rejection){return $q.reject(rejection)}}}]),app.config(["$httpProvider","$provide",function($httpProvider){$httpProvider.interceptors.push("testAppInterceptor"),$httpProvider.interceptors.push("tokenInjector")}]),controllers.controller("TestApiController",["$scope","$injector","MethodsRequiredRoles",function($scope,$injector,MethodsRequiredRoles){$scope.requestsDropDownSrc=window.requestsDropDownSrc,$scope.requestsDropDownSrcLength=Object.keys(window.requestsDropDownSrc).length,$scope.model={selectedReq:"",response:null,fromStorage:"",urlTemplate:null};var modelFactory=null;$scope.getType=function(val){return typeof val},$scope.selectReq=function(){var selectedReq=$scope.model.selectedReq;$scope.requestParams={},$scope.requestBody={},$scope.rawRequestBody="",$scope.dataFromRaw=!1,$scope.fileUpload=!1,$scope.paramsValidationObj=DO[requestModelsMap[selectedReq].ParamsObj+"_Validation"],$scope.rawRequestBody=JSON.stringify(Utils.mergeValuedObjToDefaultValuedObj({},requestModelsMap[selectedReq].DOName),null,"	"),null!=selectedReq&&""!=selectedReq&&(modelFactory=$injector.get(requestModelsMap[selectedReq].Factory),$scope.requestParams.keys=requestModelsMap[selectedReq].qsParams,$scope.model.urlTemplate=MethodsRequiredRoles[selectedReq.replace("Req","")].urlTemplate,("POST"==requestModelsMap[selectedReq].RequestType||"PUT"==requestModelsMap[selectedReq].RequestType)&&(null!=requestModelsMap[selectedReq].DOName?($scope.requestBody=getDataObjectRef(requestModelsMap[selectedReq].DOName),$scope.requestBody.keys=DO[requestModelsMap[selectedReq].DOName]):"STREAM"==requestModelsMap[selectedReq].RequestFormat&&($scope.fileUpload=!0,$scope.fileUploadReq={},$scope.fileUploadReq.targetFile=null,$scope.requestBody=null)),$scope.requestParams=angular.extend($scope.requestParams,getDataObjectRef(requestModelsMap[selectedReq].ParamsObj)),$scope.requestParamsCpy=angular.copy($scope.requestParams),$scope.requestBodyCpy=angular.copy($scope.requestBody),$scope.model.error=null,$scope.model.response=null,sessionStorage.setItem("lastSelectedReq",selectedReq))},$scope.keyDownHandler=function($event){($event.ctrlKey||$event.metaKey)&&71===$event.keyCode&&($scope.requestParams[$($event.currentTarget).attr("rel")]="00000000-0000-0000-0000-000000000000",$event.preventDefault())},$scope.submitReq=function(){if($scope.model.error=null,$scope.model.response=null,null!=modelFactory){var selectedReq=requestModelsMap[$scope.model.selectedReq].Request,actualRequsetName=selectedReq.substring(0,selectedReq.length-3),requestBody=null,requestType=requestModelsMap[$scope.model.selectedReq].RequestType;if(""!=$scope.rawRequestBody&&$scope.dataFromRaw)requestBody=JSON.parse($scope.rawRequestBody);else for(var rbkey in $scope.requestBody)"keys"!=rbkey&&(null==requestBody&&(requestBody={}),requestBody[rbkey]=$scope.requestBody[rbkey]);var args=[];"GET"!=requestType&&"DELETE"!=requestType&&($scope.fileUpload?args.push($scope.fileUploadReq.targetFile):null!=requestBody&&args.push(requestBody));for(var i=0;i<$scope.requestParams.keys.length;i++)void 0===$scope.requestParams[$scope.requestParams.keys[i]]&&($scope.requestParams[$scope.requestParams.keys[i]]=""),args.push($scope.requestParams[$scope.requestParams.keys[i]]);var success=function(data){$scope.model.response=data},error=function(){};args.push(success),args.push(error),modelFactory[actualRequsetName].apply(modelFactory,args).catch(function(error){$scope.model.error=error})}}}]);var getDataObjectRef=function(doName){var original=DO[doName+"_Defaults"];return $.extend(!0,{},original)};angular.element(function(){angular.bootstrap(document,["myTestApp"])})}(this);