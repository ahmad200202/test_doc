"use strict";function parseStateRef(ref){var paramsOnly=ref.match(/^\s*({[^}]*})\s*$/);paramsOnly&&(ref="("+paramsOnly[1]+")");var parsed=ref.replace(/\n/g," ").match(/^\s*([^(]*?)\s*(\((.*)\))?\s*$/);if(!parsed||4!==parsed.length)throw new Error("Invalid state ref '"+ref+"'");return{state:parsed[1]||null,paramExpr:parsed[3]||null}}function stateContext(el){var $uiView=el.parent().inheritedData("$uiView"),path=core_1.parse("$cfg.path")($uiView);return path?core_1.tail(path).state.name:void 0}function processedDef($state,$element,def){var uiState=def.uiState||$state.current.name,uiStateOpts=core_1.extend(defaultOpts($element,$state),def.uiStateOpts||{}),href=$state.href(uiState,def.uiStateParams,uiStateOpts);return{uiState:uiState,uiStateParams:def.uiStateParams,uiStateOpts:uiStateOpts,href:href}}function getTypeInfo(el){var isSvg="[object SVGAnimatedString]"===Object.prototype.toString.call(el.prop("href")),isForm="FORM"===el[0].nodeName;return{attr:isForm?"action":isSvg?"xlink:href":"href",isAnchor:"A"===el.prop("tagName").toUpperCase(),clickable:!isForm}}function clickHook(el,$state,$timeout,type,getDef){return function(e){var button=e.which||e.button,target=getDef();if(!(button>1||e.ctrlKey||e.metaKey||e.shiftKey||e.altKey||el.attr("target"))){var transition_1=$timeout(function(){el.attr("disabled")||$state.go(target.uiState,target.uiStateParams,target.uiStateOpts)});e.preventDefault();var ignorePreventDefaultCount_1=type.isAnchor&&!target.href?1:0;e.preventDefault=function(){ignorePreventDefaultCount_1--<=0&&$timeout.cancel(transition_1)}}}}function defaultOpts(el,$state){return{relative:stateContext(el)||$state.$current,inherit:!0,source:"sref"}}function bindEvents(element,scope,hookFn,uiStateOpts){var events;uiStateOpts&&(events=uiStateOpts.events),core_1.isArray(events)||(events=["click"]);for(var on=element.on?"on":"bind",_i=0,events_1=events;_i<events_1.length;_i++){var event_1=events_1[_i];element[on](event_1,hookFn)}scope.$on("$destroy",function(){for(var off=element.off?"off":"unbind",_i=0,events_2=events;_i<events_2.length;_i++){var event_2=events_2[_i];element[off](event_2,hookFn)}})}Object.defineProperty(exports,"__esModule",{value:!0});var angular_1=require("../angular"),core_1=require("@uirouter/core"),uiSrefDirective;uiSrefDirective=["$uiRouter","$timeout",function($uiRouter,$timeout){var $state=$uiRouter.stateService;return{restrict:"A",require:["?^uiSrefActive","?^uiSrefActiveEq"],link:function(scope,element,attrs,uiSrefActive){function update(){var def=getDef();unlinkInfoFn&&unlinkInfoFn(),active&&(unlinkInfoFn=active.$$addStateInfo(def.uiState,def.uiStateParams)),null!=def.href&&attrs.$set(type.attr,def.href)}var type=getTypeInfo(element),active=uiSrefActive[1]||uiSrefActive[0],unlinkInfoFn=null,rawDef={},getDef=function(){return processedDef($state,element,rawDef)},ref=parseStateRef(attrs.uiSref);if(rawDef.uiState=ref.state,rawDef.uiStateOpts=attrs.uiSrefOpts?scope.$eval(attrs.uiSrefOpts):{},ref.paramExpr&&(scope.$watch(ref.paramExpr,function(val){rawDef.uiStateParams=core_1.extend({},val),update()},!0),rawDef.uiStateParams=core_1.extend({},scope.$eval(ref.paramExpr))),update(),scope.$on("$destroy",$uiRouter.stateRegistry.onStatesChanged(update)),scope.$on("$destroy",$uiRouter.transitionService.onSuccess({},update)),type.clickable){var hookFn=clickHook(element,$state,$timeout,type,getDef);bindEvents(element,scope,hookFn,rawDef.uiStateOpts)}}}}];var uiStateDirective;uiStateDirective=["$uiRouter","$timeout",function($uiRouter,$timeout){var $state=$uiRouter.stateService;return{restrict:"A",require:["?^uiSrefActive","?^uiSrefActiveEq"],link:function(scope,element,attrs,uiSrefActive){function update(){var def=getDef();unlinkInfoFn&&unlinkInfoFn(),active&&(unlinkInfoFn=active.$$addStateInfo(def.uiState,def.uiStateParams)),null!=def.href&&attrs.$set(type.attr,def.href)}var hookFn,type=getTypeInfo(element),active=uiSrefActive[1]||uiSrefActive[0],unlinkInfoFn=null,rawDef={},getDef=function(){return processedDef($state,element,rawDef)},inputAttrs=["uiState","uiStateParams","uiStateOpts"],watchDeregFns=inputAttrs.reduce(function(acc,attr){return acc[attr]=core_1.noop,acc},{});inputAttrs.forEach(function(field){rawDef[field]=attrs[field]?scope.$eval(attrs[field]):null,attrs.$observe(field,function(expr){watchDeregFns[field](),watchDeregFns[field]=scope.$watch(expr,function(newval){rawDef[field]=newval,update()},!0)})}),update(),scope.$on("$destroy",$uiRouter.stateRegistry.onStatesChanged(update)),scope.$on("$destroy",$uiRouter.transitionService.onSuccess({},update)),type.clickable&&(hookFn=clickHook(element,$state,$timeout,type,getDef),bindEvents(element,scope,hookFn,rawDef.uiStateOpts))}}}];var uiSrefActiveDirective;uiSrefActiveDirective=["$state","$stateParams","$interpolate","$uiRouter",function($state,$stateParams,$interpolate,$uiRouter){return{restrict:"A",controller:["$scope","$element","$attrs",function($scope,$element,$attrs){function updateAfterTransition(trans){trans.promise.then(update,core_1.noop)}function setupEventListeners(){var deregisterStatesChangedListener=$uiRouter.stateRegistry.onStatesChanged(handleStatesChanged),deregisterOnStartListener=$uiRouter.transitionService.onStart({},updateAfterTransition),deregisterStateChangeSuccessListener=$scope.$on("$stateChangeSuccess",update);return function(){deregisterStatesChangedListener(),deregisterOnStartListener(),deregisterStateChangeSuccessListener()}}function handleStatesChanged(){setStatesFromDefinitionObject(uiSrefActive)}function setStatesFromDefinitionObject(statesDefinition){core_1.isObject(statesDefinition)&&(states=[],core_1.forEach(statesDefinition,function(stateOrName,activeClass){var addStateForClass=function(stateOrName,activeClass){var ref=parseStateRef(stateOrName);addState(ref.state,$scope.$eval(ref.paramExpr),activeClass)};core_1.isString(stateOrName)?addStateForClass(stateOrName,activeClass):core_1.isArray(stateOrName)&&core_1.forEach(stateOrName,function(stateOrName){addStateForClass(stateOrName,activeClass)})}))}function addState(stateName,stateParams,activeClass){var state=$state.get(stateName,stateContext($element)),stateInfo={state:state||{name:stateName},params:stateParams,activeClass:activeClass};return states.push(stateInfo),function(){core_1.removeFrom(states)(stateInfo)}}function update(){var splitClasses=function(str){return str.split(/\s/).filter(core_1.identity)},getClasses=function(stateList){return stateList.map(function(x){return x.activeClass}).map(splitClasses).reduce(core_1.unnestR,[])},allClasses=getClasses(states).concat(splitClasses(activeEqClass)).reduce(core_1.uniqR,[]),fuzzyClasses=getClasses(states.filter(function(x){return $state.includes(x.state.name,x.params)})),exactlyMatchesAny=!!states.filter(function(x){return $state.is(x.state.name,x.params)}).length,exactClasses=exactlyMatchesAny?splitClasses(activeEqClass):[],addClasses=fuzzyClasses.concat(exactClasses).reduce(core_1.uniqR,[]),removeClasses=allClasses.filter(function(cls){return!core_1.inArray(addClasses,cls)});$scope.$evalAsync(function(){addClasses.forEach(function(className){return $element.addClass(className)}),removeClasses.forEach(function(className){return $element.removeClass(className)})})}var activeEqClass,uiSrefActive,states=[];activeEqClass=$interpolate($attrs.uiSrefActiveEq||"",!1)($scope);try{uiSrefActive=$scope.$eval($attrs.uiSrefActive)}catch(e){}uiSrefActive=uiSrefActive||$interpolate($attrs.uiSrefActive||"",!1)($scope),setStatesFromDefinitionObject(uiSrefActive),this.$$addStateInfo=function(newState,newParams){if(!(core_1.isObject(uiSrefActive)&&states.length>0)){var deregister=addState(newState,newParams,uiSrefActive);return update(),deregister}},$scope.$on("$destroy",setupEventListeners()),$uiRouter.globals.transition&&updateAfterTransition($uiRouter.globals.transition),update()}]}}],angular_1.ng.module("ui.router.state").directive("uiSref",uiSrefDirective).directive("uiSrefActive",uiSrefActiveDirective).directive("uiSrefActiveEq",uiSrefActiveDirective).directive("uiState",uiStateDirective);