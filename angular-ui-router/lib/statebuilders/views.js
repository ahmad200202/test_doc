"use strict";function getNg1ViewConfigFactory(){var templateFactory=null;return function(path,view){return templateFactory=templateFactory||core_1.services.$injector.get("$templateFactory"),[new Ng1ViewConfig(path,view,templateFactory)]}}function ng1ViewsBuilder(state){if(!state.parent)return{};var tplKeys=["templateProvider","templateUrl","template","notify","async"],ctrlKeys=["controller","controllerProvider","controllerAs","resolveAs"],compKeys=["component","bindings","componentProvider"],nonCompKeys=tplKeys.concat(ctrlKeys),allViewKeys=compKeys.concat(nonCompKeys);if(core_1.isDefined(state.views)&&hasAnyKey(allViewKeys,state))throw new Error("State '"+state.name+"' has a 'views' object. It cannot also have \"view properties\" at the state level.  Move the following properties into a view (in the 'views' object):  "+allViewKeys.filter(function(key){return core_1.isDefined(state[key])}).join(", "));var views={},viewsObject=state.views||{$default:core_1.pick(state,allViewKeys)};return core_1.forEach(viewsObject,function(config,name){if(name=name||"$default",core_1.isString(config)&&(config={component:config}),config=core_1.extend({},config),hasAnyKey(compKeys,config)&&hasAnyKey(nonCompKeys,config))throw new Error("Cannot combine: "+compKeys.join("|")+" with: "+nonCompKeys.join("|")+" in stateview: '"+name+"@"+state.name+"'");config.resolveAs=config.resolveAs||"$resolve",config.$type="ng1",config.$context=state,config.$name=name;var normalized=core_1.ViewService.normalizeUIViewTarget(config.$context,config.$name);config.$uiViewName=normalized.uiViewName,config.$uiViewContextAnchor=normalized.uiViewContextAnchor,views[name]=config}),views}Object.defineProperty(exports,"__esModule",{value:!0}),exports.Ng1ViewConfig=exports.ng1ViewsBuilder=exports.getNg1ViewConfigFactory=void 0;var core_1=require("@uirouter/core");exports.getNg1ViewConfigFactory=getNg1ViewConfigFactory;var hasAnyKey=function(keys,obj){return keys.reduce(function(acc,key){return acc||core_1.isDefined(obj[key])},!1)};exports.ng1ViewsBuilder=ng1ViewsBuilder;var id=0,Ng1ViewConfig=function(){function Ng1ViewConfig(path,viewDecl,factory){var _this=this;this.path=path,this.viewDecl=viewDecl,this.factory=factory,this.$id=id++,this.loaded=!1,this.getTemplate=function(uiView,context){return _this.component?_this.factory.makeComponentTemplate(uiView,context,_this.component,_this.viewDecl.bindings):_this.template}}return Ng1ViewConfig.prototype.load=function(){var _this=this,$q=core_1.services.$q,context=new core_1.ResolveContext(this.path),params=this.path.reduce(function(acc,node){return core_1.extend(acc,node.paramValues)},{}),promises={template:$q.when(this.factory.fromConfig(this.viewDecl,params,context)),controller:$q.when(this.getController(context))};return $q.all(promises).then(function(results){return core_1.trace.traceViewServiceEvent("Loaded",_this),_this.controller=results.controller,core_1.extend(_this,results.template),_this})},Ng1ViewConfig.prototype.getController=function(context){var provider=this.viewDecl.controllerProvider;if(!core_1.isInjectable(provider))return this.viewDecl.controller;var deps=core_1.services.$injector.annotate(provider),providerFn=core_1.isArray(provider)?core_1.tail(provider):provider,resolvable=new core_1.Resolvable("",providerFn,deps);return resolvable.get(context)},Ng1ViewConfig}();exports.Ng1ViewConfig=Ng1ViewConfig;