"use strict";function getComponentBindings(name){var cmpDefs=core_1.services.$injector.get(name+"Directive");if(!cmpDefs||!cmpDefs.length)throw new Error("Unable to find component named '"+name+"'");return cmpDefs.map(getBindings).reduce(core_1.unnestR,[])}Object.defineProperty(exports,"__esModule",{value:!0}),exports.TemplateFactory=void 0;var angular_1=require("./angular"),core_1=require("@uirouter/core"),TemplateFactory=function(){function TemplateFactory(){var _this=this;this._useHttp=angular_1.ng.version.minor<3,this.$get=["$http","$templateCache","$injector",function($http,$templateCache,$injector){return _this.$templateRequest=$injector.has&&$injector.has("$templateRequest")&&$injector.get("$templateRequest"),_this.$http=$http,_this.$templateCache=$templateCache,_this}]}return TemplateFactory.prototype.useHttpService=function(value){this._useHttp=value},TemplateFactory.prototype.fromConfig=function(config,params,context){var defaultTemplate="<ui-view></ui-view>",asTemplate=function(result){return core_1.services.$q.when(result).then(function(str){return{template:str}})},asComponent=function(result){return core_1.services.$q.when(result).then(function(str){return{component:str}})};return core_1.isDefined(config.template)?asTemplate(this.fromString(config.template,params)):core_1.isDefined(config.templateUrl)?asTemplate(this.fromUrl(config.templateUrl,params)):core_1.isDefined(config.templateProvider)?asTemplate(this.fromProvider(config.templateProvider,params,context)):core_1.isDefined(config.component)?asComponent(config.component):core_1.isDefined(config.componentProvider)?asComponent(this.fromComponentProvider(config.componentProvider,params,context)):asTemplate(defaultTemplate)},TemplateFactory.prototype.fromString=function(template,params){return core_1.isFunction(template)?template(params):template},TemplateFactory.prototype.fromUrl=function(url,params){return core_1.isFunction(url)&&(url=url(params)),null==url?null:this._useHttp?this.$http.get(url,{cache:this.$templateCache,headers:{Accept:"text/html"}}).then(function(response){return response.data}):this.$templateRequest(url)},TemplateFactory.prototype.fromProvider=function(provider,params,context){var deps=core_1.services.$injector.annotate(provider),providerFn=core_1.isArray(provider)?core_1.tail(provider):provider,resolvable=new core_1.Resolvable("",providerFn,deps);return resolvable.get(context)},TemplateFactory.prototype.fromComponentProvider=function(provider,params,context){var deps=core_1.services.$injector.annotate(provider),providerFn=core_1.isArray(provider)?core_1.tail(provider):provider,resolvable=new core_1.Resolvable("",providerFn,deps);return resolvable.get(context)},TemplateFactory.prototype.makeComponentTemplate=function(uiView,context,component,bindings){bindings=bindings||{};var prefix=angular_1.ng.version.minor>=3?"::":"",kebob=function(camelCase){var kebobed=core_1.kebobString(camelCase);return/^(x|data)-/.exec(kebobed)?"x-"+kebobed:kebobed},attributeTpl=function(input){var name=input.name,type=input.type,attrName=kebob(name);if(uiView.attr(attrName)&&!bindings[name])return attrName+"='"+uiView.attr(attrName)+"'";var resolveName=bindings[name]||name;if("@"===type)return attrName+"='{{"+prefix+"$resolve."+resolveName+"}}'";if("&"===type){var res=context.getResolvable(resolveName),fn=res&&res.data,args=fn&&core_1.services.$injector.annotate(fn)||[],arrayIdxStr=core_1.isArray(fn)?"["+(fn.length-1)+"]":"";return attrName+"='$resolve."+resolveName+arrayIdxStr+"("+args.join(",")+")'"}return attrName+"='"+prefix+"$resolve."+resolveName+"'"},attrs=getComponentBindings(component).map(attributeTpl).join(" "),kebobName=kebob(component);return"<"+kebobName+" "+attrs+"></"+kebobName+">"},TemplateFactory}();exports.TemplateFactory=TemplateFactory;var getBindings=function(def){return scopeBindings(core_1.isObject(def.bindToController)?def.bindToController:def.scope)},scopeBindings=function(bindingsObj){return Object.keys(bindingsObj||{}).map(function(key){return[key,/^([=<@&])[?]?(.*)/.exec(bindingsObj[key])]}).filter(function(tuple){return core_1.isDefined(tuple)&&core_1.isArray(tuple[1])}).map(function(tuple){return{name:tuple[1][2]||tuple[0],type:tuple[1][1]}})};