!function(){"use strict";angular.module("ui.tree").directive("uiTree",["treeConfig","$window",function(treeConfig,$window){return{restrict:"A",scope:!0,controller:"TreeController",link:function(scope,element,attrs,ctrl){var tdElm,$trElm,emptyElmColspan,callbacks={accept:null,beforeDrag:null},config={};angular.extend(config,treeConfig),config.treeClass&&element.addClass(config.treeClass),"table"===element.prop("tagName").toLowerCase()?(scope.$emptyElm=angular.element($window.document.createElement("tr")),$trElm=element.find("tr"),emptyElmColspan=$trElm.length>0?angular.element($trElm).children().length:1e6,tdElm=angular.element($window.document.createElement("td")).attr("colspan",emptyElmColspan),scope.$emptyElm.append(tdElm)):(scope.$emptyElm=angular.element($window.document.createElement("div")),scope.$dropzoneElm=angular.element($window.document.createElement("div"))),config.emptyTreeClass&&scope.$emptyElm.addClass(config.emptyTreeClass),config.dropzoneClass&&scope.$dropzoneElm.addClass(config.dropzoneClass),scope.$watch("$nodesScope.$modelValue.length",function(val){angular.isNumber(val)&&(ctrl.resetEmptyElement(),ctrl.resetDropzoneElement())},!0),scope.$watch(attrs.dragEnabled,function(val){"boolean"==typeof val&&(scope.dragEnabled=val)}),scope.$watch(attrs.emptyPlaceholderEnabled,function(val){"boolean"==typeof val&&(scope.emptyPlaceholderEnabled=val,ctrl.resetEmptyElement())}),scope.$watch(attrs.nodropEnabled,function(val){"boolean"==typeof val&&(scope.nodropEnabled=val)}),scope.$watch(attrs.dropzoneEnabled,function(val){"boolean"==typeof val&&(scope.dropzoneEnabled=val,ctrl.resetDropzoneElement())}),scope.$watch(attrs.cloneEnabled,function(val){"boolean"==typeof val&&(scope.cloneEnabled=val)}),scope.$watch(attrs.maxDepth,function(val){"number"==typeof val&&(scope.maxDepth=val)}),scope.$watch(attrs.dragDelay,function(val){"number"==typeof val&&(scope.dragDelay=val)}),callbacks.accept=function(sourceNodeScope,destNodesScope){return!(destNodesScope.nodropEnabled||destNodesScope.$treeScope.nodropEnabled||destNodesScope.outOfDepth(sourceNodeScope))},callbacks.beforeDrag=function(){return!0},callbacks.expandTimeoutStart=function(){},callbacks.expandTimeoutCancel=function(){},callbacks.expandTimeoutEnd=function(){},callbacks.removed=function(){},callbacks.dropped=function(){},callbacks.dragStart=function(){},callbacks.dragMove=function(){},callbacks.dragStop=function(){},callbacks.beforeDrop=function(){},callbacks.toggle=function(){},scope.$watch(attrs.uiTree,function(newVal){angular.forEach(newVal,function(value,key){callbacks[key]&&"function"==typeof value&&(callbacks[key]=value)}),scope.$callbacks=callbacks},!0)}}}])}();