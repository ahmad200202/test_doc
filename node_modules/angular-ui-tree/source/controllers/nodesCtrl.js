!function(){"use strict";angular.module("ui.tree").controller("TreeNodesController",["$scope","$element","$timeout",function($scope,$element,$timeout){this.scope=$scope,$scope.$element=$element,$scope.$modelValue=null,$scope.$nodeScope=null,$scope.$treeScope=null,$scope.$type="uiTreeNodes",$scope.$nodesMap={},$scope.nodropEnabled=!1,$scope.maxDepth=0,$scope.cloneEnabled=!1,$scope.initSubNode=function(subNode){return subNode.$modelValue?void($scope.$nodesMap[subNode.$modelValue.$$hashKey]=subNode):null},$scope.destroySubNode=function(subNode){return subNode.$modelValue?void($scope.$nodesMap[subNode.$modelValue.$$hashKey]=null):null},$scope.accept=function(sourceNode,destIndex){return $scope.$treeScope.$callbacks.accept(sourceNode,$scope,destIndex)},$scope.beforeDrag=function(sourceNode){return $scope.$treeScope.$callbacks.beforeDrag(sourceNode)},$scope.isParent=function(node){return node.$parentNodesScope==$scope},$scope.hasChild=function(){return $scope.$modelValue.length>0},$scope.removeNode=function(node){var index=$scope.$modelValue.indexOf(node.$modelValue);return index>-1?($timeout(function(){$scope.$modelValue.splice(index,1)[0]}),$scope.$treeScope.$callbacks.removed(node)):null},$scope.insertNode=function(index,nodeData){$timeout(function(){$scope.$modelValue.splice(index,0,nodeData)})},$scope.childNodes=function(){var i,nodes=[];if($scope.$modelValue)for(i=0;i<$scope.$modelValue.length;i++)nodes.push($scope.$nodesMap[$scope.$modelValue[i].$$hashKey]);return nodes},$scope.depth=function(){return $scope.$nodeScope?$scope.$nodeScope.depth():0},$scope.outOfDepth=function(sourceNode){var maxDepth=$scope.maxDepth||$scope.$treeScope.maxDepth;return maxDepth>0?$scope.depth()+sourceNode.maxSubDepth()+1>maxDepth:!1}}])}();