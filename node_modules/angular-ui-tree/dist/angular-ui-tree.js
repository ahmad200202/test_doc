!function(){"use strict";angular.module("ui.tree",[]).constant("treeConfig",{treeClass:"angular-ui-tree",emptyTreeClass:"angular-ui-tree-empty",dropzoneClass:"angular-ui-tree-dropzone",hiddenClass:"angular-ui-tree-hidden",nodesClass:"angular-ui-tree-nodes",nodeClass:"angular-ui-tree-node",handleClass:"angular-ui-tree-handle",placeholderClass:"angular-ui-tree-placeholder",dragClass:"angular-ui-tree-drag",dragThreshold:3,defaultCollapsed:!1,appendChildOnHover:!0})}(),function(){"use strict";angular.module("ui.tree").controller("TreeHandleController",["$scope","$element",function($scope,$element){this.scope=$scope,$scope.$element=$element,$scope.$nodeScope=null,$scope.$type="uiTreeHandle"}])}(),function(){"use strict";angular.module("ui.tree").controller("TreeNodeController",["$scope","$element",function($scope,$element){function countSubTreeDepth(scope){if(!scope)return 0;var childNode,childDepth,i,thisLevelDepth=0,childNodes=scope.childNodes();if(!childNodes||0===childNodes.length)return 0;for(i=childNodes.length-1;i>=0;i--)childNode=childNodes[i],childDepth=1+countSubTreeDepth(childNode),thisLevelDepth=Math.max(thisLevelDepth,childDepth);return thisLevelDepth}this.scope=$scope,$scope.$element=$element,$scope.$modelValue=null,$scope.$parentNodeScope=null,$scope.$childNodesScope=null,$scope.$parentNodesScope=null,$scope.$treeScope=null,$scope.$handleScope=null,$scope.$type="uiTreeNode",$scope.$$allowNodeDrop=!1,$scope.collapsed=!1,$scope.expandOnHover=!1,$scope.init=function(controllersArr){var treeNodesCtrl=controllersArr[0];$scope.$treeScope=controllersArr[1]?controllersArr[1].scope:null,$scope.$parentNodeScope=treeNodesCtrl.scope.$nodeScope,$scope.$modelValue=treeNodesCtrl.scope.$modelValue[$scope.$index],$scope.$parentNodesScope=treeNodesCtrl.scope,treeNodesCtrl.scope.initSubNode($scope),$element.on("$destroy",function(){treeNodesCtrl.scope.destroySubNode($scope)})},$scope.index=function(){return $scope.$parentNodesScope.$modelValue.indexOf($scope.$modelValue)},$scope.dragEnabled=function(){return!($scope.$treeScope&&!$scope.$treeScope.dragEnabled)},$scope.isSibling=function(targetNode){return $scope.$parentNodesScope==targetNode.$parentNodesScope},$scope.isChild=function(targetNode){var nodes=$scope.childNodes();return nodes&&nodes.indexOf(targetNode)>-1},$scope.prev=function(){var index=$scope.index();return index>0?$scope.siblings()[index-1]:null},$scope.siblings=function(){return $scope.$parentNodesScope.childNodes()},$scope.childNodesCount=function(){return $scope.childNodes()?$scope.childNodes().length:0},$scope.hasChild=function(){return $scope.childNodesCount()>0},$scope.childNodes=function(){return $scope.$childNodesScope&&$scope.$childNodesScope.$modelValue?$scope.$childNodesScope.childNodes():null},$scope.accept=function(sourceNode,destIndex){return $scope.$childNodesScope&&$scope.$childNodesScope.$modelValue&&$scope.$childNodesScope.accept(sourceNode,destIndex)},$scope.remove=function(){return $scope.$parentNodesScope.removeNode($scope)},$scope.toggle=function(){$scope.collapsed=!$scope.collapsed,$scope.$treeScope.$callbacks.toggle($scope.collapsed,$scope)},$scope.collapse=function(){$scope.collapsed=!0},$scope.expand=function(){$scope.collapsed=!1},$scope.depth=function(){var parentNode=$scope.$parentNodeScope;return parentNode?parentNode.depth()+1:1},$scope.maxSubDepth=function(){return $scope.$childNodesScope?countSubTreeDepth($scope.$childNodesScope):0}}])}(),function(){"use strict";angular.module("ui.tree").controller("TreeNodesController",["$scope","$element","$timeout",function($scope,$element,$timeout){this.scope=$scope,$scope.$element=$element,$scope.$modelValue=null,$scope.$nodeScope=null,$scope.$treeScope=null,$scope.$type="uiTreeNodes",$scope.$nodesMap={},$scope.nodropEnabled=!1,$scope.maxDepth=0,$scope.cloneEnabled=!1,$scope.initSubNode=function(subNode){return subNode.$modelValue?void($scope.$nodesMap[subNode.$modelValue.$$hashKey]=subNode):null},$scope.destroySubNode=function(subNode){return subNode.$modelValue?void($scope.$nodesMap[subNode.$modelValue.$$hashKey]=null):null},$scope.accept=function(sourceNode,destIndex){return $scope.$treeScope.$callbacks.accept(sourceNode,$scope,destIndex)},$scope.beforeDrag=function(sourceNode){return $scope.$treeScope.$callbacks.beforeDrag(sourceNode)},$scope.isParent=function(node){return node.$parentNodesScope==$scope},$scope.hasChild=function(){return $scope.$modelValue.length>0},$scope.removeNode=function(node){var index=$scope.$modelValue.indexOf(node.$modelValue);return index>-1?($timeout(function(){$scope.$modelValue.splice(index,1)[0]}),$scope.$treeScope.$callbacks.removed(node)):null},$scope.insertNode=function(index,nodeData){$timeout(function(){$scope.$modelValue.splice(index,0,nodeData)})},$scope.childNodes=function(){var i,nodes=[];if($scope.$modelValue)for(i=0;i<$scope.$modelValue.length;i++)nodes.push($scope.$nodesMap[$scope.$modelValue[i].$$hashKey]);return nodes},$scope.depth=function(){return $scope.$nodeScope?$scope.$nodeScope.depth():0},$scope.outOfDepth=function(sourceNode){var maxDepth=$scope.maxDepth||$scope.$treeScope.maxDepth;return maxDepth>0?$scope.depth()+sourceNode.maxSubDepth()+1>maxDepth:!1}}])}(),function(){"use strict";angular.module("ui.tree").controller("TreeController",["$scope","$element",function($scope,$element){this.scope=$scope,$scope.$element=$element,$scope.$nodesScope=null,$scope.$type="uiTree",$scope.$emptyElm=null,$scope.$dropzoneElm=null,$scope.$callbacks=null,$scope.dragEnabled=!0,$scope.emptyPlaceholderEnabled=!0,$scope.maxDepth=0,$scope.dragDelay=0,$scope.cloneEnabled=!1,$scope.nodropEnabled=!1,$scope.dropzoneEnabled=!1,$scope.isEmpty=function(){return $scope.$nodesScope&&$scope.$nodesScope.$modelValue&&0===$scope.$nodesScope.$modelValue.length},$scope.place=function(placeElm){$scope.$nodesScope.$element.append(placeElm),$scope.$emptyElm.remove()},this.resetEmptyElement=function(){$scope.$nodesScope.$modelValue&&0!==$scope.$nodesScope.$modelValue.length||!$scope.emptyPlaceholderEnabled?$scope.$emptyElm.remove():$element.append($scope.$emptyElm)},this.resetDropzoneElement=function(){$scope.$nodesScope.$modelValue&&0===$scope.$nodesScope.$modelValue.length||!$scope.dropzoneEnabled?$scope.$dropzoneElm.remove():$element.append($scope.$dropzoneElm)},$scope.resetEmptyElement=this.resetEmptyElement,$scope.resetDropzoneElement=this.resetDropzoneElement}])}(),function(){"use strict";angular.module("ui.tree").directive("uiTree",["treeConfig","$window",function(treeConfig,$window){return{restrict:"A",scope:!0,controller:"TreeController",link:function(scope,element,attrs,ctrl){var tdElm,$trElm,emptyElmColspan,callbacks={accept:null,beforeDrag:null},config={};angular.extend(config,treeConfig),config.treeClass&&element.addClass(config.treeClass),"table"===element.prop("tagName").toLowerCase()?(scope.$emptyElm=angular.element($window.document.createElement("tr")),$trElm=element.find("tr"),emptyElmColspan=$trElm.length>0?angular.element($trElm).children().length:1e6,tdElm=angular.element($window.document.createElement("td")).attr("colspan",emptyElmColspan),scope.$emptyElm.append(tdElm)):(scope.$emptyElm=angular.element($window.document.createElement("div")),scope.$dropzoneElm=angular.element($window.document.createElement("div"))),config.emptyTreeClass&&scope.$emptyElm.addClass(config.emptyTreeClass),config.dropzoneClass&&scope.$dropzoneElm.addClass(config.dropzoneClass),scope.$watch("$nodesScope.$modelValue.length",function(val){angular.isNumber(val)&&(ctrl.resetEmptyElement(),ctrl.resetDropzoneElement())},!0),scope.$watch(attrs.dragEnabled,function(val){"boolean"==typeof val&&(scope.dragEnabled=val)}),scope.$watch(attrs.emptyPlaceholderEnabled,function(val){"boolean"==typeof val&&(scope.emptyPlaceholderEnabled=val,ctrl.resetEmptyElement())}),scope.$watch(attrs.nodropEnabled,function(val){"boolean"==typeof val&&(scope.nodropEnabled=val)}),scope.$watch(attrs.dropzoneEnabled,function(val){"boolean"==typeof val&&(scope.dropzoneEnabled=val,ctrl.resetDropzoneElement())}),scope.$watch(attrs.cloneEnabled,function(val){"boolean"==typeof val&&(scope.cloneEnabled=val)}),scope.$watch(attrs.maxDepth,function(val){"number"==typeof val&&(scope.maxDepth=val)}),scope.$watch(attrs.dragDelay,function(val){"number"==typeof val&&(scope.dragDelay=val)}),callbacks.accept=function(sourceNodeScope,destNodesScope){return!(destNodesScope.nodropEnabled||destNodesScope.$treeScope.nodropEnabled||destNodesScope.outOfDepth(sourceNodeScope))},callbacks.beforeDrag=function(){return!0},callbacks.expandTimeoutStart=function(){},callbacks.expandTimeoutCancel=function(){},callbacks.expandTimeoutEnd=function(){},callbacks.removed=function(){},callbacks.dropped=function(){},callbacks.dragStart=function(){},callbacks.dragMove=function(){},callbacks.dragStop=function(){},callbacks.beforeDrop=function(){},callbacks.toggle=function(){},scope.$watch(attrs.uiTree,function(newVal){angular.forEach(newVal,function(value,key){callbacks[key]&&"function"==typeof value&&(callbacks[key]=value)}),scope.$callbacks=callbacks},!0)}}}])}(),function(){"use strict";angular.module("ui.tree").directive("uiTreeHandle",["treeConfig",function(treeConfig){return{require:"^uiTreeNode",restrict:"A",scope:!0,controller:"TreeHandleController",link:function(scope,element,attrs,treeNodeCtrl){var config={};angular.extend(config,treeConfig),config.handleClass&&element.addClass(config.handleClass),scope!=treeNodeCtrl.scope&&(scope.$nodeScope=treeNodeCtrl.scope,treeNodeCtrl.scope.$handleScope=scope)}}}])}(),function(){"use strict";angular.module("ui.tree").directive("uiTreeNode",["treeConfig","UiTreeHelper","$window","$document","$timeout","$q",function(treeConfig,UiTreeHelper,$window,$document,$timeout,$q){return{require:["^uiTreeNodes","^uiTree"],restrict:"A",controller:"TreeNodeController",link:function(scope,element,attrs,controllersArr){var firstMoving,dragInfo,pos,placeElm,hiddenPlaceElm,dragElm,scrollContainerElm,unhover,elements,document_height,document_width,dragStart,dragMove,dragEnd,dragStartEvent,dragMoveEvent,dragEndEvent,dragCancelEvent,dragDelay,bindDragStartEvents,bindDragMoveEvents,unbindDragMoveEvents,keydownHandler,isHandleChild,el,isUiTreeRoot,treeOfOrigin,config={},hasTouch="ontouchstart"in window,treeScope=null,body=document.body,html=document.documentElement;angular.extend(config,treeConfig),config.nodeClass&&element.addClass(config.nodeClass),scope.init(controllersArr),scope.collapsed=!!UiTreeHelper.getNodeAttribute(scope,"collapsed")||treeConfig.defaultCollapsed,scope.expandOnHover=!!UiTreeHelper.getNodeAttribute(scope,"expandOnHover"),scope.scrollContainer=UiTreeHelper.getNodeAttribute(scope,"scrollContainer")||attrs.scrollContainer||null,scope.sourceOnly=scope.nodropEnabled||scope.$treeScope.nodropEnabled,scope.$watch(attrs.collapsed,function(val){"boolean"==typeof val&&(scope.collapsed=val)}),scope.$watch("collapsed",function(val){UiTreeHelper.setNodeAttribute(scope,"collapsed",val),attrs.$set("collapsed",val)}),scope.$watch(attrs.expandOnHover,function(val){("boolean"==typeof val||"number"==typeof val)&&(scope.expandOnHover=val)}),scope.$watch("expandOnHover",function(val){UiTreeHelper.setNodeAttribute(scope,"expandOnHover",val),attrs.$set("expandOnHover",val)}),attrs.$observe("scrollContainer",function(val){"string"==typeof val&&(scope.scrollContainer=val)}),scope.$watch("scrollContainer",function(val){UiTreeHelper.setNodeAttribute(scope,"scrollContainer",val),attrs.$set("scrollContainer",val),scrollContainerElm=document.querySelector(val)}),scope.$on("angular-ui-tree:collapse-all",function(){scope.collapsed=!0}),scope.$on("angular-ui-tree:expand-all",function(){scope.collapsed=!1}),dragStart=function(e){if((hasTouch||2!==e.button&&3!==e.which)&&!(e.uiTreeDragging||e.originalEvent&&e.originalEvent.uiTreeDragging)){var isHandleChild,cloneElm,eventElmTagName,tagName,eventObj,tdElm,hStyle,isTreeNode,isTreeNodeHandle,eventElm=angular.element(e.target);if(isHandleChild=UiTreeHelper.treeNodeHandlerContainerOfElement(eventElm),isHandleChild&&(eventElm=angular.element(isHandleChild)),cloneElm=element.clone(),isTreeNode=UiTreeHelper.elementIsTreeNode(eventElm),isTreeNodeHandle=UiTreeHelper.elementIsTreeNodeHandle(eventElm),(isTreeNode||isTreeNodeHandle)&&!(isTreeNode&&UiTreeHelper.elementContainsTreeNodeHandler(eventElm)||(eventElmTagName=eventElm.prop("tagName").toLowerCase(),"input"==eventElmTagName||"textarea"==eventElmTagName||"button"==eventElmTagName||"select"==eventElmTagName))){for(el=angular.element(e.target),isUiTreeRoot=el[0].attributes["ui-tree"];el&&el[0]&&el[0]!==element&&!isUiTreeRoot;){if(el[0].attributes&&(isUiTreeRoot=el[0].attributes["ui-tree"]),UiTreeHelper.nodrag(el))return;el=el.parent()}scope.beforeDrag(scope)&&(e.uiTreeDragging=!0,e.originalEvent&&(e.originalEvent.uiTreeDragging=!0),e.preventDefault(),eventObj=UiTreeHelper.eventObj(e),firstMoving=!0,dragInfo=UiTreeHelper.dragInfo(scope),treeOfOrigin=dragInfo.source.$treeScope.$id,tagName=element.prop("tagName"),"tr"===tagName.toLowerCase()?(placeElm=angular.element($window.document.createElement(tagName)),tdElm=angular.element($window.document.createElement("td")).addClass(config.placeholderClass).attr("colspan",element[0].children.length),placeElm.append(tdElm)):placeElm=angular.element($window.document.createElement(tagName)).addClass(config.placeholderClass),hiddenPlaceElm=angular.element($window.document.createElement(tagName)),config.hiddenClass&&hiddenPlaceElm.addClass(config.hiddenClass),pos=UiTreeHelper.positionStarted(eventObj,element),placeElm.css("height",element.prop("offsetHeight")+"px"),dragElm=angular.element($window.document.createElement(scope.$parentNodesScope.$element.prop("tagName"))).addClass(scope.$parentNodesScope.$element.attr("class")).addClass(config.dragClass),dragElm.css("width",UiTreeHelper.width(element)+"px"),dragElm.css("z-index",9999),hStyle=(element[0].querySelector(".angular-ui-tree-handle")||element[0]).currentStyle,hStyle&&(document.body.setAttribute("ui-tree-cursor",$document.find("body").css("cursor")||""),$document.find("body").css({cursor:hStyle.cursor+"!important"})),scope.sourceOnly&&placeElm.css("display","none"),element.after(placeElm),element.after(hiddenPlaceElm),dragElm.append(dragInfo.isClone()&&scope.sourceOnly?cloneElm:element),$document.find("body").append(dragElm),dragElm.css({left:eventObj.pageX-pos.offsetX+"px",top:eventObj.pageY-pos.offsetY+"px"}),elements={placeholder:placeElm,dragging:dragElm},bindDragMoveEvents(),scope.$apply(function(){scope.$treeScope.$callbacks.dragStart(dragInfo.eventArgs(elements,pos))}),document_height=Math.max(body.scrollHeight,body.offsetHeight,html.clientHeight,html.scrollHeight,html.offsetHeight),document_width=Math.max(body.scrollWidth,body.offsetWidth,html.clientWidth,html.scrollWidth,html.offsetWidth))}}},dragMove=function(e){var prev,next,leftElmPos,topElmPos,top_scroll,bottom_scroll,scrollContainerElmRect,target,targetX,targetY,displayElm,targetNode,targetElm,isEmpty,scrollDownBy,scrollUpBy,targetOffset,targetBefore,moveWithinTree,targetBeforeBuffer,targetHeight,targetChildElm,targetChildHeight,isDropzone,eventObj=UiTreeHelper.eventObj(e);if(dragElm){if(e.preventDefault(),$window.getSelection?$window.getSelection().removeAllRanges():$window.document.selection&&$window.document.selection.empty(),leftElmPos=eventObj.pageX-pos.offsetX,topElmPos=eventObj.pageY-pos.offsetY,0>leftElmPos&&(leftElmPos=0),0>topElmPos&&(topElmPos=0),topElmPos+10>document_height&&(topElmPos=document_height-10),leftElmPos+10>document_width&&(leftElmPos=document_width-10),dragElm.css({left:leftElmPos+"px",top:topElmPos+"px"}),scrollContainerElm?(scrollContainerElmRect=scrollContainerElm.getBoundingClientRect(),top_scroll=scrollContainerElm.scrollTop,bottom_scroll=top_scroll+scrollContainerElm.clientHeight,scrollContainerElmRect.bottom<eventObj.clientY&&bottom_scroll<scrollContainerElm.scrollHeight&&(scrollDownBy=Math.min(scrollContainerElm.scrollHeight-bottom_scroll,10),scrollContainerElm.scrollTop+=scrollDownBy),scrollContainerElmRect.top>eventObj.clientY&&top_scroll>0&&(scrollUpBy=Math.min(top_scroll,10),scrollContainerElm.scrollTop-=scrollUpBy)):(top_scroll=window.pageYOffset||$window.document.documentElement.scrollTop,bottom_scroll=top_scroll+(window.innerHeight||$window.document.clientHeight||$window.document.clientHeight),bottom_scroll<eventObj.pageY&&document_height>bottom_scroll&&(scrollDownBy=Math.min(document_height-bottom_scroll,10),window.scrollBy(0,scrollDownBy)),top_scroll>eventObj.pageY&&(scrollUpBy=Math.min(top_scroll,10),window.scrollBy(0,-scrollUpBy))),UiTreeHelper.positionMoved(e,pos,firstMoving),firstMoving)return void(firstMoving=!1);if(targetX=eventObj.pageX-($window.pageXOffset||$window.document.body.scrollLeft||$window.document.documentElement.scrollLeft)-($window.document.documentElement.clientLeft||0),targetY=eventObj.pageY-($window.pageYOffset||$window.document.body.scrollTop||$window.document.documentElement.scrollTop)-($window.document.documentElement.clientTop||0),angular.isFunction(dragElm.hide)?dragElm.hide():(displayElm=dragElm[0].style.display,dragElm[0].style.display="none"),$window.document.elementFromPoint(targetX,targetY),targetElm=angular.element($window.document.elementFromPoint(targetX,targetY)),isHandleChild=UiTreeHelper.treeNodeHandlerContainerOfElement(targetElm),isHandleChild&&(targetElm=angular.element(isHandleChild)),angular.isFunction(dragElm.show)?dragElm.show():dragElm[0].style.display=displayElm,UiTreeHelper.elementIsTree(targetElm)?targetNode=targetElm.controller("uiTree").scope:UiTreeHelper.elementIsTreeNodeHandle(targetElm)?targetNode=targetElm.controller("uiTreeHandle").scope:UiTreeHelper.elementIsTreeNode(targetElm)?targetNode=targetElm.controller("uiTreeNode").scope:UiTreeHelper.elementIsTreeNodes(targetElm)?targetNode=targetElm.controller("uiTreeNodes").scope:UiTreeHelper.elementIsPlaceholder(targetElm)?targetNode=targetElm.controller("uiTreeNodes").scope:UiTreeHelper.elementIsDropzone(targetElm)?(targetNode=targetElm.controller("uiTree").scope,isDropzone=!0):targetElm.controller("uiTreeNode")&&(targetNode=targetElm.controller("uiTreeNode").scope),moveWithinTree=targetNode&&targetNode.$treeScope&&targetNode.$treeScope.$id&&targetNode.$treeScope.$id===treeOfOrigin,moveWithinTree&&pos.dirAx)pos.distX>0&&(prev=dragInfo.prev(),prev&&!prev.collapsed&&prev.accept(scope,prev.childNodesCount())&&(prev.$childNodesScope.$element.append(placeElm),dragInfo.moveTo(prev.$childNodesScope,prev.childNodes(),prev.childNodesCount()))),pos.distX<0&&(next=dragInfo.next(),next||(target=dragInfo.parentNode(),target&&target.$parentNodesScope.accept(scope,target.index()+1)&&(target.$element.after(placeElm),dragInfo.moveTo(target.$parentNodesScope,target.siblings(),target.index()+1))));else{if(isEmpty=!1,!targetNode)return;if(!targetNode.$treeScope||targetNode.$parent.nodropEnabled||targetNode.$treeScope.nodropEnabled||placeElm.css("display",""),"uiTree"===targetNode.$type&&targetNode.dragEnabled&&(isEmpty=targetNode.isEmpty()),"uiTreeHandle"===targetNode.$type&&(targetNode=targetNode.$nodeScope),"uiTreeNode"!==targetNode.$type&&!isEmpty&&!isDropzone)return void(config.appendChildOnHover&&(next=dragInfo.next(),!next&&unhover&&(target=dragInfo.parentNode(),target.$element.after(placeElm),dragInfo.moveTo(target.$parentNodesScope,target.siblings(),target.index()+1),unhover=!1)));treeScope&&placeElm.parent()[0]!=treeScope.$element[0]&&(treeScope.resetEmptyElement(),treeScope.resetDropzoneElement(),treeScope=null),isEmpty?(treeScope=targetNode,targetNode.$nodesScope.accept(scope,0)&&dragInfo.moveTo(targetNode.$nodesScope,targetNode.$nodesScope.childNodes(),0)):isDropzone?(treeScope=targetNode,targetNode.$nodesScope.accept(scope,targetNode.$nodesScope.childNodes().length)&&dragInfo.moveTo(targetNode.$nodesScope,targetNode.$nodesScope.childNodes(),targetNode.$nodesScope.childNodes().length)):targetNode.dragEnabled()&&(angular.isDefined(scope.expandTimeoutOn)&&scope.expandTimeoutOn!==targetNode.id&&($timeout.cancel(scope.expandTimeout),delete scope.expandTimeout,delete scope.expandTimeoutOn,scope.$callbacks.expandTimeoutCancel()),targetNode.collapsed&&(scope.expandOnHover===!0||angular.isNumber(scope.expandOnHover)&&0===scope.expandOnHover?(targetNode.collapsed=!1,targetNode.$treeScope.$callbacks.toggle(!1,targetNode)):scope.expandOnHover!==!1&&angular.isNumber(scope.expandOnHover)&&scope.expandOnHover>0&&angular.isUndefined(scope.expandTimeoutOn)&&(scope.expandTimeoutOn=targetNode.$id,scope.$callbacks.expandTimeoutStart(),scope.expandTimeout=$timeout(function(){scope.$callbacks.expandTimeoutEnd(),targetNode.collapsed=!1,targetNode.$treeScope.$callbacks.toggle(!1,targetNode)},scope.expandOnHover))),targetElm=targetNode.$element,targetOffset=UiTreeHelper.offset(targetElm),targetHeight=UiTreeHelper.height(targetElm),targetChildElm=targetNode.$childNodesScope?targetNode.$childNodesScope.$element:null,targetChildHeight=targetChildElm?UiTreeHelper.height(targetChildElm):0,targetHeight-=targetChildHeight,targetBeforeBuffer=config.appendChildOnHover?.25*targetHeight:UiTreeHelper.height(targetElm)/2,targetBefore=eventObj.pageY<targetOffset.top+targetBeforeBuffer,targetNode.$parentNodesScope.accept(scope,targetNode.index())?targetBefore?(targetElm[0].parentNode.insertBefore(placeElm[0],targetElm[0]),dragInfo.moveTo(targetNode.$parentNodesScope,targetNode.siblings(),targetNode.index())):config.appendChildOnHover&&targetNode.accept(scope,targetNode.childNodesCount())?(targetNode.$childNodesScope.$element.prepend(placeElm),dragInfo.moveTo(targetNode.$childNodesScope,targetNode.childNodes(),0),unhover=!0):(targetElm.after(placeElm),dragInfo.moveTo(targetNode.$parentNodesScope,targetNode.siblings(),targetNode.index()+1)):!targetBefore&&targetNode.accept(scope,targetNode.childNodesCount())&&(targetNode.$childNodesScope.$element.append(placeElm),dragInfo.moveTo(targetNode.$childNodesScope,targetNode.childNodes(),targetNode.childNodesCount())))}scope.$apply(function(){scope.$treeScope.$callbacks.dragMove(dragInfo.eventArgs(elements,pos))})}},dragEnd=function(e){var dragEventArgs=dragInfo.eventArgs(elements,pos);e.preventDefault(),unbindDragMoveEvents(),$timeout.cancel(scope.expandTimeout),scope.$treeScope.$apply(function(){$q.when(scope.$treeScope.$callbacks.beforeDrop(dragEventArgs)).then(function(allowDrop){allowDrop!==!1&&scope.$$allowNodeDrop?(dragInfo.apply(),scope.$treeScope.$callbacks.dropped(dragEventArgs)):bindDragStartEvents()}).catch(function(){bindDragStartEvents()}).finally(function(){hiddenPlaceElm.replaceWith(scope.$element),placeElm.remove(),dragElm&&(dragElm.remove(),dragElm=null),scope.$treeScope.$callbacks.dragStop(dragEventArgs),scope.$$allowNodeDrop=!1,dragInfo=null;var oldCur=document.body.getAttribute("ui-tree-cursor");null!==oldCur&&($document.find("body").css({cursor:oldCur}),document.body.removeAttribute("ui-tree-cursor"))})})},dragStartEvent=function(e){scope.dragEnabled()&&dragStart(e)},dragMoveEvent=function(e){dragMove(e)},dragEndEvent=function(e){scope.$$allowNodeDrop=!0,dragEnd(e)},dragCancelEvent=function(e){dragEnd(e)},dragDelay=function(){var to;return{exec:function(fn,ms){ms||(ms=0),this.cancel(),to=$timeout(fn,ms)},cancel:function(){$timeout.cancel(to)}}}(),keydownHandler=function(e){27===e.keyCode&&dragEndEvent(e)},bindDragStartEvents=function(){element.bind("touchstart mousedown",function(e){scope.dragDelay>0?dragDelay.exec(function(){dragStartEvent(e)},scope.dragDelay):dragStartEvent(e)}),element.bind("touchend touchcancel mouseup",function(){scope.dragDelay>0&&dragDelay.cancel()})},bindDragStartEvents(),bindDragMoveEvents=function(){angular.element($document).bind("touchend",dragEndEvent),angular.element($document).bind("touchcancel",dragEndEvent),angular.element($document).bind("touchmove",dragMoveEvent),angular.element($document).bind("mouseup",dragEndEvent),angular.element($document).bind("mousemove",dragMoveEvent),angular.element($document).bind("mouseleave",dragCancelEvent),angular.element($document).bind("keydown",keydownHandler)},unbindDragMoveEvents=function(){angular.element($document).unbind("touchend",dragEndEvent),angular.element($document).unbind("touchcancel",dragEndEvent),angular.element($document).unbind("touchmove",dragMoveEvent),angular.element($document).unbind("mouseup",dragEndEvent),angular.element($document).unbind("mousemove",dragMoveEvent),angular.element($document).unbind("mouseleave",dragCancelEvent),angular.element($document).unbind("keydown",keydownHandler)}}}}])}(),function(){"use strict";angular.module("ui.tree").directive("uiTreeNodes",["treeConfig","$window",function(treeConfig){return{require:["ngModel","?^uiTreeNode","^uiTree"],restrict:"A",scope:!0,controller:"TreeNodesController",link:function(scope,element,attrs,controllersArr){var config={},ngModel=controllersArr[0],treeNodeCtrl=controllersArr[1],treeCtrl=controllersArr[2];angular.extend(config,treeConfig),config.nodesClass&&element.addClass(config.nodesClass),treeNodeCtrl?(treeNodeCtrl.scope.$childNodesScope=scope,scope.$nodeScope=treeNodeCtrl.scope):treeCtrl.scope.$nodesScope=scope,scope.$treeScope=treeCtrl.scope,ngModel&&(ngModel.$render=function(){scope.$modelValue=ngModel.$modelValue}),scope.$watch(function(){return attrs.maxDepth},function(val){"number"==typeof val&&(scope.maxDepth=val)}),scope.$watch(function(){return attrs.nodropEnabled},function(newVal){"undefined"!=typeof newVal&&(scope.nodropEnabled=!0)},!0)}}}])}(),function(){"use strict";function findFirstParentElementWithAttribute(attributeName,childObj){if(void 0===childObj)return null;for(var testObj=childObj.parentNode,count=1,res="function"==typeof testObj.setAttribute&&testObj.hasAttribute(attributeName)?testObj:null;testObj&&"function"==typeof testObj.setAttribute&&!testObj.hasAttribute(attributeName);){if(testObj=testObj.parentNode,res=testObj,testObj===document.documentElement){res=null;break}count++}return res}angular.module("ui.tree").factory("UiTreeHelper",["$document","$window","treeConfig",function($document,$window,treeConfig){return{nodesData:{},setNodeAttribute:function(scope,attrName,val){if(!scope.$modelValue)return null;var data=this.nodesData[scope.$modelValue.$$hashKey];data||(data={},this.nodesData[scope.$modelValue.$$hashKey]=data),data[attrName]=val},getNodeAttribute:function(scope,attrName){if(!scope.$modelValue)return null;var data=this.nodesData[scope.$modelValue.$$hashKey];return data?data[attrName]:null},nodrag:function(targetElm){return"undefined"!=typeof targetElm.attr("data-nodrag")?"false"!==targetElm.attr("data-nodrag"):!1},eventObj:function(e){var obj=e;return void 0!==e.targetTouches?obj=e.targetTouches.item(0):void 0!==e.originalEvent&&void 0!==e.originalEvent.targetTouches&&(obj=e.originalEvent.targetTouches.item(0)),obj},dragInfo:function(node){return{source:node,sourceInfo:{cloneModel:node.$treeScope.cloneEnabled===!0?angular.copy(node.$modelValue):void 0,nodeScope:node,index:node.index(),nodesScope:node.$parentNodesScope},index:node.index(),siblings:node.siblings().slice(0),parent:node.$parentNodesScope,resetParent:function(){this.parent=node.$parentNodesScope},moveTo:function(parent,siblings,index){this.parent=parent,this.siblings=siblings.slice(0);var i=this.siblings.indexOf(this.source);i>-1&&(this.siblings.splice(i,1),this.source.index()<index&&index--),this.siblings.splice(index,0,this.source),this.index=index},parentNode:function(){return this.parent.$nodeScope},prev:function(){return this.index>0?this.siblings[this.index-1]:null},next:function(){return this.index<this.siblings.length-1?this.siblings[this.index+1]:null},isClone:function(){return this.source.$treeScope.cloneEnabled===!0},clonedNode:function(node){return angular.copy(node)},isDirty:function(){return this.source.$parentNodesScope!=this.parent||this.source.index()!=this.index},isForeign:function(){return this.source.$treeScope!==this.parent.$treeScope},eventArgs:function(elements,pos){return{source:this.sourceInfo,dest:{index:this.index,nodesScope:this.parent},elements:elements,pos:pos}},apply:function(){var nodeData=this.source.$modelValue;this.parent.nodropEnabled||this.parent.$treeScope.nodropEnabled||this.isDirty()&&(this.isClone()&&this.isForeign()?this.parent.insertNode(this.index,this.sourceInfo.cloneModel):(this.source.remove(),this.parent.insertNode(this.index,nodeData)))}}},height:function(element){return element.prop("scrollHeight")},width:function(element){return element.prop("scrollWidth")},offset:function(element){var boundingClientRect=element[0].getBoundingClientRect();return{width:element.prop("offsetWidth"),height:element.prop("offsetHeight"),top:boundingClientRect.top+($window.pageYOffset||$document[0].body.scrollTop||$document[0].documentElement.scrollTop),left:boundingClientRect.left+($window.pageXOffset||$document[0].body.scrollLeft||$document[0].documentElement.scrollLeft)}},positionStarted:function(e,target){var pos={},pageX=e.pageX,pageY=e.pageY;return e.originalEvent&&e.originalEvent.touches&&e.originalEvent.touches.length>0&&(pageX=e.originalEvent.touches[0].pageX,pageY=e.originalEvent.touches[0].pageY),pos.offsetX=pageX-this.offset(target).left,pos.offsetY=pageY-this.offset(target).top,pos.startX=pos.lastX=pageX,pos.startY=pos.lastY=pageY,pos.nowX=pos.nowY=pos.distX=pos.distY=pos.dirAx=0,pos.dirX=pos.dirY=pos.lastDirX=pos.lastDirY=pos.distAxX=pos.distAxY=0,pos},positionMoved:function(e,pos,firstMoving){var newAx,pageX=e.pageX,pageY=e.pageY;return e.originalEvent&&e.originalEvent.touches&&e.originalEvent.touches.length>0&&(pageX=e.originalEvent.touches[0].pageX,pageY=e.originalEvent.touches[0].pageY),pos.lastX=pos.nowX,pos.lastY=pos.nowY,pos.nowX=pageX,pos.nowY=pageY,pos.distX=pos.nowX-pos.lastX,pos.distY=pos.nowY-pos.lastY,pos.lastDirX=pos.dirX,pos.lastDirY=pos.dirY,pos.dirX=0===pos.distX?0:pos.distX>0?1:-1,pos.dirY=0===pos.distY?0:pos.distY>0?1:-1,newAx=Math.abs(pos.distX)>Math.abs(pos.distY)?1:0,firstMoving?(pos.dirAx=newAx,void(pos.moving=!0)):(pos.dirAx!==newAx?(pos.distAxX=0,pos.distAxY=0):(pos.distAxX+=Math.abs(pos.distX),0!==pos.dirX&&pos.dirX!==pos.lastDirX&&(pos.distAxX=0),pos.distAxY+=Math.abs(pos.distY),0!==pos.dirY&&pos.dirY!==pos.lastDirY&&(pos.distAxY=0)),void(pos.dirAx=newAx))},elementIsTreeNode:function(element){return"undefined"!=typeof element.attr("ui-tree-node")},elementIsTreeNodeHandle:function(element){return"undefined"!=typeof element.attr("ui-tree-handle")},elementIsTree:function(element){return"undefined"!=typeof element.attr("ui-tree")},elementIsTreeNodes:function(element){return"undefined"!=typeof element.attr("ui-tree-nodes")},elementIsPlaceholder:function(element){return element.hasClass(treeConfig.placeholderClass)},elementIsDropzone:function(element){return element.hasClass(treeConfig.dropzoneClass)},elementContainsTreeNodeHandler:function(element){return element[0].querySelectorAll("[ui-tree-handle]").length>=1},treeNodeHandlerContainerOfElement:function(element){return findFirstParentElementWithAttribute("ui-tree-handle",element[0])}}}])}();