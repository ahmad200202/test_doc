function close(actual,expected,maxDifference,message){var actualDiff=actual===expected?0:Math.abs(actual-expected),result=maxDifference>=actualDiff;message=message||actual+" should be within "+maxDifference+" (inclusive) of "+expected+(result?"":". Actual: "+actualDiff),QUnit.push(result,actual,expected,message)}function notClose(actual,expected,minDifference,message){var actualDiff=Math.abs(actual-expected),result=actualDiff>minDifference;message=message||actual+" should not be within "+minDifference+" (exclusive) of "+expected+(result?"":". Actual: "+actualDiff),QUnit.push(result,actual,expected,message)}close.percent=function(actual,expected,maxPercentDifference,message){var actualDiff,result;actual===expected?(actualDiff=0,result=maxPercentDifference>=actualDiff):0!==actual&&0!==expected&&1/0!==expected&&expected!==-1/0?(actualDiff=Math.abs(100*(actual-expected)/expected),result=maxPercentDifference>=actualDiff):(actualDiff=1/0,result=1/0===maxPercentDifference),message=message||actual+" should be within "+maxPercentDifference+"% (inclusive) of "+expected+(result?"":". Actual: "+actualDiff+"%"),QUnit.push(result,actual,expected,message)},notClose.percent=function(actual,expected,minPercentDifference,message){var actualDiff,result;actual===expected?(actualDiff=0,result=actualDiff>minPercentDifference):0!==actual&&0!==expected&&1/0!==expected&&expected!==-1/0?(actualDiff=Math.abs(100*(actual-expected)/expected),result=actualDiff>minPercentDifference):(actualDiff=1/0,result=1/0!==minPercentDifference),message=message||actual+" should not be within "+minPercentDifference+"% (exclusive) of "+expected+(result?"":". Actual: "+actualDiff+"%"),QUnit.push(result,actual,expected,message)},QUnit.extend(QUnit.assert,{close:close,notClose:notClose});