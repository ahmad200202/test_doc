"undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports="treeControl"),function(angular){"use strict";function ensureDefault(obj,prop,value){obj.hasOwnProperty(prop)||(obj[prop]=value)}function defaultIsLeaf(node,$scope){return!node[$scope.options.nodeChildren]||0===node[$scope.options.nodeChildren].length}function _getScale(sizeCss){return parseInt(sizeCss.replace(/px|%/,""),10)}function shallowCopy(src,dst){if(angular.isArray(src)){dst=dst||[];for(var i=0;i<src.length;i++)dst[i]=src[i]}else if(angular.isObject(src)){dst=dst||{};for(var key in src)!hasOwnProperty.call(src,key)||"$"===key.charAt(0)&&"$"===key.charAt(1)||(dst[key]=src[key])}return dst||src}function defaultEquality(a,b,$scope){return a&&b?(a=shallowCopy(a),a[$scope.options.nodeChildren]=[],b=shallowCopy(b),b[$scope.options.nodeChildren]=[],angular.equals(a,b)):!1}function defaultIsSelectable(){return!0}function ensureAllDefaultOptions($scope){ensureDefault($scope.options,"multiSelection",!1),ensureDefault($scope.options,"nodeChildren","children"),ensureDefault($scope.options,"dirSelectable","true"),ensureDefault($scope.options,"injectClasses",{}),ensureDefault($scope.options.injectClasses,"ul",""),ensureDefault($scope.options.injectClasses,"li",""),ensureDefault($scope.options.injectClasses,"liSelected",""),ensureDefault($scope.options.injectClasses,"iExpanded",""),ensureDefault($scope.options.injectClasses,"iCollapsed",""),ensureDefault($scope.options.injectClasses,"iLeaf",""),ensureDefault($scope.options.injectClasses,"label",""),ensureDefault($scope.options.injectClasses,"labelSelected",""),ensureDefault($scope.options,"equality",defaultEquality),ensureDefault($scope.options,"isLeaf",defaultIsLeaf),ensureDefault($scope.options,"allowDeselect",!0),ensureDefault($scope.options,"isSelectable",defaultIsSelectable)}angular.module("treeControl",[]).constant("treeConfig",{templateUrl:null}).directive("treecontrol",["$compile","$filter",function($compile,$filter){function classIfDefined(cssClass,addClassProperty){return cssClass?addClassProperty?'class="'+cssClass+'"':cssClass:""}return{restrict:"EA",require:"treecontrol",transclude:!0,scope:{treeModel:"=",selectedNode:"=?",selectedNodes:"=?",expandedNodes:"=?",itemsPerPageGetter:"&itemsPerPage",onSelection:"&",onNodeToggle:"&",options:"=?",orderBy:"=?",reverseOrder:"@",filterExpression:"=?",filterPredicateHook:"=?",filterComparator:"=?"},controller:["$scope","$templateCache","$interpolate","treeConfig",function($scope,$templateCache,$interpolate,treeConfig){function isSelectedNode(node){if(!$scope.options.multiSelection&&$scope.options.equality(node,$scope.selectedNode,$scope))return!0;if($scope.options.multiSelection&&$scope.selectedNodes){for(var i=0;i<$scope.selectedNodes.length;i++)if($scope.options.equality(node,$scope.selectedNodes[i],$scope))return!0;return!1}}$scope.options=$scope.options||{},ensureAllDefaultOptions($scope),$scope.itemHeight=26,$scope.selectedNodes=$scope.selectedNodes||[];var orderByToken="";null!=$scope.orderBy&&(orderByToken="|orderBy:orderBy"),$scope.expandedNodes=$scope.expandedNodes||[],$scope.expandedNodesMap={};for(var i=0;i<$scope.expandedNodes.length;i++)$scope.expandedNodesMap["a"+i]=$scope.expandedNodes[i];$scope.parentCtrl=$scope.$parent,$scope.headClass=function(node){var returnClass="",liSelectionClass=classIfDefined($scope.options.injectClasses.liSelected,!1),injectSelectionClass="";return liSelectionClass&&isSelectedNode(node)&&(injectSelectionClass=" "+liSelectionClass),returnClass=$scope.options.isLeaf(node,this)?"tree-leaf"+injectSelectionClass:$scope.expandedNodesMap[this.$id]||this.node[$scope.options.expandedProp]?"tree-expanded"+injectSelectionClass:"tree-collapsed"+injectSelectionClass,null!=node.levelClass&&(returnClass+=" "+node.levelClass),returnClass},$scope.iBranchClass=function(){return classIfDefined($scope.expandedNodesMap[this.$id]?$scope.options.injectClasses.iExpanded:$scope.options.injectClasses.iCollapsed)},$scope.nodeExpanded=function(){return!!$scope.expandedNodesMap[this.$id]||this.node[$scope.options.expandedProp]},$scope.selectNodeHead=function(){var transcludedScope=this;$scope.options.expandAll=!1;var expanding=void 0===$scope.expandedNodesMap[transcludedScope.$id];if(!this.touched&&this.node[$scope.options.expandedProp]&&(expanding=!1),$scope.options.expandedProp&&(this.node[$scope.options.expandedProp]=!this.node[$scope.options.expandedProp],expanding=this.node[$scope.options.expandedProp]),this.touched=!0,$scope.expandedNodesMap[transcludedScope.$id]=expanding?transcludedScope.node:void 0,expanding)$scope.expandedNodes.push(transcludedScope.node);else{for(var index,i=0;i<$scope.expandedNodes.length&&!index;i++)$scope.options.equality($scope.expandedNodes[i],transcludedScope.node,$scope)&&(index=i);void 0!==index&&$scope.expandedNodes.splice(index,1)}$scope.onNodeToggle&&$scope.onNodeToggle({node:transcludedScope.node,$parentNode:this.parentNode,$index:transcludedScope.$index,$first:transcludedScope.$first,$middle:transcludedScope.$middle,$last:transcludedScope.$last,$odd:transcludedScope.$odd,$even:transcludedScope.$even,expanded:expanding}),$scope.onNodeExpandedCollapsed&&$scope.onNodeExpandedCollapsed()},$scope.selectNodeLabel=function(selectedNode){var transcludedScope=this;if($scope.options.isLeaf(selectedNode,$scope)||$scope.options.dirSelectable&&$scope.options.isSelectable(selectedNode)){if($scope.options.isLeaf(selectedNode,$scope)&&!$scope.options.isSelectable(selectedNode))return;var selected=!1;if($scope.options.multiSelection){for(var pos=-1,i=0;i<$scope.selectedNodes.length;i++)if($scope.options.equality(selectedNode,$scope.selectedNodes[i],$scope)){pos=i;break}-1===pos?($scope.selectedNodes.push(selectedNode),selected=!0):$scope.selectedNodes.splice(pos,1)}else $scope.options.equality(selectedNode,$scope.selectedNode,$scope)&&$scope.options.allowDeselect?$scope.selectedNode=void 0:($scope.selectedNode=selectedNode,selected=!0);$scope.onSelection&&$scope.onSelection({node:selectedNode,selected:selected,$parentNode:transcludedScope.parentNode,$index:transcludedScope.$index,$first:transcludedScope.$first,$middle:transcludedScope.$middle,$last:transcludedScope.$last,$odd:transcludedScope.$odd,$even:transcludedScope.$even})}else this.selectNodeHead()},$scope.selectedClass=function(){var isThisNodeSelected=isSelectedNode(this.node),labelSelectionClass=classIfDefined($scope.options.injectClasses.labelSelected,!1),injectSelectionClass="";return labelSelectionClass&&isThisNodeSelected&&(injectSelectionClass=" "+labelSelectionClass),isThisNodeSelected?"tree-selected"+injectSelectionClass:""},$scope.unselectableClass=function(){var isThisNodeUnselectable=!$scope.options.isSelectable(this.node),labelUnselectableClass=classIfDefined($scope.options.injectClasses.labelUnselectable,!1);return isThisNodeUnselectable?"tree-unselectable "+labelUnselectableClass:""},$scope.isReverse=function(){return!("false"===$scope.reverseOrder||"False"===$scope.reverseOrder||""===$scope.reverseOrder||$scope.reverseOrder===!1)},$scope.orderByFunc=function(){return $scope.orderBy};var template,templateOptions={orderBy:$scope.orderBy?" | orderBy:orderByFunc():isReverse()":"",ulClass:classIfDefined($scope.options.injectClasses.ul,!0),nodeChildren:$scope.options.nodeChildren,liClass:classIfDefined($scope.options.injectClasses.li,!0),iLeafClass:classIfDefined($scope.options.injectClasses.iLeaf,!1),labelClass:classIfDefined($scope.options.injectClasses.label,!1)},templateUrl=$scope.options.templateUrl||treeConfig.templateUrl;templateUrl&&(template=$templateCache.get(templateUrl)),template='<ul {{options.ulClass}} ><li sly-repeat="node in itemsToDisplay {{options.orderBy}}" ng-class="headClass(node)" {{options.liClass}}set-node-to-data><i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)"></i><i class="tree-leaf-head {{options.iLeafClass}}"></i><div class="tree-label {{options.labelClass}}" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude></div></li></ul>',this.template=$compile($interpolate(template)({options:templateOptions}))}],compile:function(element,attrs,childTranscludeFn){var initialTpl='<div class="scrollArea H100W100" style="overflow-y: auto"><div class="logicalContainer"><div class="treeCanvas"></div></div></div>';return element.append(initialTpl),function(scope,element,attrs,treemodelCntr){function isNodeExpanded(node){return node[scope.options.expandedProp]}function setLogicalContainerHeight(height){element.find(".logicalContainer").height(height)}function getLogicalContainerHeight(){return element.find(".logicalContainer").height()}function setTreeCanvasPaddingTop(paddingTop){element.find(".treeCanvas").css("padding-top",paddingTop+"px")}function getTreePaddingTop(){return _getScale(element.find(".treeCanvas").css("padding-top"))}function calculateDisplayedTree(targetChildren,treeNodeSrc,totalLength,childrenProp,startPoint,level,scrollIteration){if(!(null!=scrollIteration&&scrollIteration<scope.lastScrollIteration||!isNodeExpanded(treeNodeSrc)||scope.takenLength>=totalLength||null==treeNodeSrc[childrenProp]||0==treeNodeSrc[childrenProp].length))for(var i=0;i<treeNodeSrc[childrenProp].length;i++)if(scope.takenLength<totalLength){var filterResult=!0;if(null!=scope.filterExpression){var filtered=$filter("filter")([treeNodeSrc[childrenProp][i]],scope.filterExpression,scope.filterComparator);filterResult=filtered.length>0}else scope.currentIndex++;var newNode=treeNodeSrc[childrenProp][i];filterResult&&scope.currentIndex++,scope.currentIndex>startPoint?filterResult&&(targetChildren.push(newNode),newNode.guid=Utils.createGuid(),scope.nodeRefrences[newNode.guid]={},newNode.levelClass="level_"+level,scope.nodeRefrences[newNode.guid].parentNode=treeNodeSrc,scope.takenLength++,calculateDisplayedTree(targetChildren,treeNodeSrc[childrenProp][i],totalLength,childrenProp,startPoint,level+1,scrollIteration)):calculateDisplayedTree(targetChildren,treeNodeSrc[childrenProp][i],totalLength,childrenProp,startPoint,level+1,scrollIteration)}}function updateNodeOnRootScope(newValue,scrollIteration){null==newValue&&(newValue=scope.synteticRoot[scope.options.nodeChildren]),scope.node1={},scope.node1[scope.options.expandedProp]=!0,scope.synteticRoot=scope.node1,scope.node1[scope.options.nodeChildren]=angular.isArray(newValue)?newValue:[newValue],scope.itemsToDisplay=[],scope.parentNodesObj={},scope.takenLength=0,scope.currentIndex=0,scope.treeNodesCount=0,countTreeNodes(scope.node1),scope.treeNodesCount>0&&setLogicalContainerHeight(scope.treeNodesCount*scope.itemHeight),calculateDisplayedTree(scope.itemsToDisplay,scope.node1,scope.itemsPerPage,scope.options.nodeChildren,scope.position,0,scrollIteration)}function countTreeNodes(tree){if(null!=tree&&null!=tree[scope.options.nodeChildren]&&isNodeExpanded(tree))for(var i=0;i<tree[scope.options.nodeChildren].length;i++){var filtered=$filter("filter")([tree[scope.options.nodeChildren][i]],scope.filterExpression,scope.filterComparator);0!=filtered.length&&(scope.treeNodesCount++,countTreeNodes(tree[scope.options.nodeChildren][i]))}}function virtualScrollHandlerFn(){var scrollTop=$(this).scrollTop(),logicalContainerHeight=getLogicalContainerHeight();scope.safeApply(function(){scope.lastScrollIteration++;var limitBegin=Math.round(scrollTop/logicalContainerHeight*scope.treeNodesCount);scope.position=limitBegin,setTreeCanvasPaddingTop(scope.position*scope.itemHeight),updateNodeOnRootScope(scope.synteticRoot[scope.options.nodeChildren],scope.lastScrollIteration)})}scope.nodeRefrences={},scope.safeApply=function(fn){var phase=this.$root.$$phase;"$apply"==phase||"$digest"==phase?fn&&"function"==typeof fn&&fn():(fn(),this.$digest())},scope.takenLength=0,scope.currentIndex=0,scope.itemsPerPage=scope.itemsPerPageGetter()||40,setTreeCanvasPaddingTop(0),scope.position=0,scope.treeNodesCount=0,scope.lastScrollIteration=0,element.find(".scrollArea").on("scroll",Utils.debounce(virtualScrollHandlerFn,10)),scope.$watch("treeModel",updateNodeOnRootScope),null!=attrs.filterPredicateHook&&scope.$watch("filterPredicateHook",function(oldVal,newVal){null!=newVal&&(updateNodeOnRootScope(scope.synteticRoot[scope.options.nodeChildren]),getTreePaddingTop()>getLogicalContainerHeight()&&setTreeCanvasPaddingTop(0))}),scope.options.onModelUpdated=updateNodeOnRootScope,scope.$watchCollection("expandedNodes",function(newValue){var notFoundIds=0,newExpandedNodesMap={},$liElements=element.find("li"),existingScopes=[];angular.forEach($liElements,function(liElement){var $liElement=angular.element(liElement),liScope={$id:$liElement.data("scope-id"),node:$liElement.data("node")};existingScopes.push(liScope)}),angular.forEach(newValue,function(newExNode){for(var found=!1,i=0;i<existingScopes.length&&!found;i++){var existingScope=existingScopes[i];scope.options.equality(newExNode,existingScope.node,scope)&&(newExpandedNodesMap[existingScope.$id]=existingScope.node,found=!0)}found||(newExpandedNodesMap["a"+notFoundIds++]=newExNode)})}),scope.onNodeExpandedCollapsed=function(){updateNodeOnRootScope(scope.synteticRoot[scope.options.nodeChildren])},treemodelCntr.template(scope,function(clone){element.find(".treeCanvas").html("").append(clone),setTimeout(function(){element.find("li .tree-label").length>0&&(scope.itemHeight=element.find("li .tree-label").eq(0).height()),scope.itemsPerPage=scope.itemsPerPage||Math.floor(element.find(".scrollArea").height()/scope.itemHeight)+10,scope.$evalAsync(function(){updateNodeOnRootScope(scope.synteticRoot[scope.options.nodeChildren])})},0)}),scope.$treeTransclude=childTranscludeFn}}}}]).directive("setNodeToData",["$parse",function(){return{restrict:"A",link:function($scope,$element){$element.data("node",$scope.node),$element.data("scope-id",$scope.$id)}}}]).directive("treeitem",function(){return{restrict:"E",require:"^treecontrol",link:function(scope,element,attrs,treemodelCntr){treemodelCntr.template(scope,function(clone){element.html("").append(clone)})}}}).directive("treeTransclude",function(){return{controller:["$scope",function($scope){ensureAllDefaultOptions($scope)}],link:function(scope,element){scope.$watch("node",function(newVal){if(null!=newVal){if(scope.options.isLeaf(scope.node,scope)||angular.forEach(scope.expandedNodesMap,function(node,id){scope.options.equality(node,scope.node,scope)&&(scope.expandedNodesMap[scope.$id]=scope.node,scope.expandedNodesMap[id]=void 0)}),!scope.options.multiSelection&&scope.options.equality(scope.node,scope.selectedNode,scope))scope.selectedNode=scope.node;else if(scope.options.multiSelection){for(var newSelectedNodes=[],i=0;i<scope.selectedNodes.length;i++)scope.options.equality(scope.node,scope.selectedNodes[i],scope)&&newSelectedNodes.push(scope.node);scope.selectedNodes=newSelectedNodes}scope.$parentNode=scope.$parent.node===scope.synteticRoot?null:scope.nodeRefrences[scope.node.guid],scope.$index=scope.$index,scope.$first=scope.$first,scope.$middle=scope.$middle,scope.$last=scope.$last,scope.$odd=scope.$odd,scope.$even=scope.$even}}),scope.$treeTransclude(scope,function(clone){element.empty(),element.append(clone)}),scope.$on("$destroy",function(){})}}})}(angular);