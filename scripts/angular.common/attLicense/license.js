!function(angular){"use strict";var attLicenseModule=angular.module("attLicenseModule",[]),_licenseBannerTpl="licenseBannerTpl.html",_licenseBannerComplexTpl="licenseBannerComplexTpl.html",_licenseBannerOpenPopTpl="licenseBannerOpenPopTpl.html";return attLicenseModule.factory("attLicenseService",["InvokerService","$rootScope","$compile","$document","locale","GlobalMessagesService","modalService","AclService","AttLoaderService","$timeout",function(InvokerService,$rootScope,$compile,$document,locale,GlobalMessagesService,modalService,AclService,AttLoaderService,$timeout){function _getActionHideText(licenseKey,licenseState){return null==attLicenseService.callbackFunctions.getActionHideText?!1:attLicenseService.callbackFunctions.getActionHideText(licenseKey,licenseState)}function _hideActionClicked(licenseName){var _onHideActionSuccess=function(){attLicenseService.clearLicenseAlertFromDic(licenseName),attLicenseService.isAlertsDictionaryEmpty()&&(modalService.closeActive(),attLicenseService.destroyLicenseTopBannerAlert())};attLicenseService.callbackFunctions.hideActionClicked(licenseName,_onHideActionSuccess)}var _appContext=null,_isLicenseRequestIsOnTheWay=!1,_storedLicenseDictionary={},_alertsDictionary={},_FixedLicenseName=null,_storedParams={firstUpdate:"firstUpdate",lastUpdate:"lastUpdate",content:"content",timeFrame:"timeFrame",nextUpdateDateTime:"nextUpdateDateTime"},_timeFrameSeconds={60:{every:15,nextKey:600},600:{every:120,nextKey:3600},3600:{every:3600,nextKey:86400},86400:{every:3600,nextKey:60}},FIRST_TIME_FRAME_KEY=parseInt(Object.keys(_timeFrameSeconds)[0]),attLicenseService={data:{topNotificationManuallyClosed:!1,setLicenseNameAfterParse:!1,showTopBannerNotifications:!0,showErrorMessage:!0,showOtherTypeOfNotificationForUser:!1,registerLicensePopupTemplateLink:"scripts/angular.common/attLicense/registerLicensePopup.html",licenseMessageOnFullPageTemplateLink:"scripts/angular.common/attLicense/registerLicenseViewLayout.html",licenseAlertListTemplateLink:"scripts/angular.common/attLicense/licenseAlertList.html",overlayInfo:{sections:{}},systemInfo:null,numberOfDaysBeforeExpireToShowTopNotification:6,licenseStorageExpirationInSec:43200,useFixedLicenseName:!0,topBannerTemplateName:_licenseBannerTpl,licenseBannerTpl:_licenseBannerTpl,licenseBannerComplexTpl:_licenseBannerComplexTpl,licenseBannerOpenPopTpl:_licenseBannerOpenPopTpl,topBannerShowCloseBtn:!0,topBannerErrorBackgroundColor:"#FCDBBC",topBannerSuccessBackgroundColor:"#49CB52"},LicenseObjectName:"license",LicenseObject:{responseObjectParam:"license",name:"name",features:"features",license_type:"license_type",expiration_date:"expiration_date",checksum:"checksum",PERMANENT_LICENSE:"PERMANENT_LICENSE",full_machine_name:"full_machine_name",state:"state"},DOGlobalLicenseStateObj:{VALID:"VALID",LICENSE_EXPIRED:"LICENSE_EXPIRED"},callbackFunctions:{getUserCallerRole:null,getLicenseName:null,getServerName:null,getRequestDataObjectForGetLicense:null,getRequestDataObjectForRegisterLicense:null,goToRegisterLicense:null,getOutFromRouteRegisterLicense:null,doActionRegisterLicense:null,isLicenseEmptyMoreCheck:null,analyzeLicenseOtherTests:null,analyzeLicenseOtherTestsDoAction:null,moreActionsAfterRegisterLicense:null,moreActionsAfterGetLicense:null,applyDataForGetLicenseOverwrite:null,calcDaysToExpiration:null,openViewLicenseSettings:null,otherTypeOfNotification:null,onRegisterLicenseTextChange:null,getActionHideText:null,hideActionClicked:null,isViewHidden:null,disableOpenAlertBanner:null},Text:{EmptyLicense:"common.license.TopNotification_Empty",InvalidLicense:"common.license.TopNotification_Invalid",ExpiredLicense:"common.license.TopNotification_Expired",ExpireToday:"common.license.TopNotification_ExpireToday",ExpireInFewDays:"common.license.TopNotification_ExpireInFewDays",ExpireInOneDay:"common.license.Alert.ExpireInOneDay",registerLicensePopupTopTitle:"common.license.RegisterPopup_TopTitle",registerLicensePopupTopTitleForServer:"common.license.RegisterPopup_TopTitleForServer",registerPopup_TopTitleForManyServers:"common.license.RegisterPopup_TopTitleForManyServers",registerPopup_TopTitleForModule:"common.license.RegisterPopup_TopTitleForModule",registerLicensePopupLoadFileBtnText:"common.license.RegisterPopup_LoadFileBtn",registerLicensePopupContentHeader:"common.license.RegisterPopup_contentHeader",registerLicensePopupContentFooter:"common.license.RegisterPopup_contentFooter",registerLicenseActionButtonText:"common.license.RegisterPopup_ActionButtonText",licenseRegisteredSuccessfullyText:"common.license.RegisterPopup_RegisteredSuccessfully",clickableViewLicense:"common.license.ViewLicense"},setServiceContext:function(context){ObjectUtils.equals(_appContext,context)||(_appContext=context)},setFixedLicenseName:function(licenseName){_FixedLicenseName=licenseName},isContextAppReady:function(){return!ObjectUtils.isEmpty(_appContext)},isSetContextMethod:function(methodKey){return attLicenseService.isContextAppReady()&&!ObjectUtils.isEmpty(methodKey)&&!ObjectUtils.isEmpty(_appContext[methodKey])},getContextMethodName:function(methodKey){return null!=_appContext[methodKey]?_appContext[methodKey].method:null},setLicenseDO:function(appRelevantDO){if(!ObjectUtils.isEmpty(appRelevantDO))for(var paramsArray=Object.keys(appRelevantDO),index=0;index<paramsArray.length;index++){var param=paramsArray[index];param&&attLicenseService.LicenseObject[param]!=appRelevantDO[param]&&(attLicenseService.LicenseObject[param]=appRelevantDO[param])}},getContextObjectByMethodKey:function(reqData){var ctxWitData={};return ctxWitData[reqData.methodKey]=ObjectUtils.deepClone(_appContext[reqData.methodKey]),ObjectUtils.isEmpty(reqData.putData)||(ctxWitData[reqData.methodKey][consts.params][consts.putData]=reqData.putData),ObjectUtils.isEmpty(reqData.postData)||(ctxWitData[reqData.methodKey][consts.params][consts.postData]=reqData.postData),ObjectUtils.isEmpty(reqData.params)||ObjectUtils.forOwn(reqData.params,function(paramKey,paramValue){ctxWitData[reqData.methodKey][consts.params][paramKey]=paramValue}),ctxWitData},isBrowserSupportedReadFile:function(){return window.File&&window.FileReader},getTextRegisterLicensePopupLoadFile:function(){return attLicenseService.isBrowserSupportedReadFile()?"common.license.RegisterPopup_LoadFile":"common.license.RegisterPopup_CopyPaste"},isLicenseEmpty:function(licenseObj){var isEmpty=ObjectUtils.isEmpty(licenseObj);return null!=attLicenseService.callbackFunctions.isLicenseEmptyMoreCheck&&(isEmpty=attLicenseService.callbackFunctions.isLicenseEmptyMoreCheck(licenseObj)),isEmpty},isLicenseExpired:function(datesDiffInDays){return 0>datesDiffInDays},isLicenseExpireToday:function(datesDiffInDays){return 0===datesDiffInDays},isLicenseAboutToExpire:function(datesDiffInDays){return datesDiffInDays<=attLicenseService.data.numberOfDaysBeforeExpireToShowTopNotification},isUserAllowByConstMethodCallerRole:function(constMethod,callerRole){ObjectUtils.isEmpty(callerRole)&&null!=attLicenseService.callbackFunctions.getUserCallerRole&&(callerRole=attLicenseService.callbackFunctions.getUserCallerRole());var appMethodName=attLicenseService.getContextMethodName(constMethod);return AclService.isUserAllowToDoAction(appMethodName,callerRole)},isUserAllowToDoAction_GetLicense:function(callerRole){return attLicenseService.isUserAllowByConstMethodCallerRole(consts.License.Methods.GetLicense,callerRole)},isUserAllowToDoAction_RegisterLicense:function(callerRole){return attLicenseService.isUserAllowByConstMethodCallerRole(consts.License.Methods.RegisterLicense,callerRole)},isUserAllowToDoAction_GetSystemInfo:function(callerRole){return attLicenseService.isUserAllowByConstMethodCallerRole(consts.License.Methods.GetSystemInfo,callerRole)},isUserAllowToDoAction_OpenLicenseSettings:function(callerRole){return attLicenseService.isUserAllowByConstMethodCallerRole(consts.License.Methods.GetSystemConfig,callerRole)},isMethodDefine_RegisterLicense:function(){return attLicenseService.isSetContextMethod(consts.License.Methods.RegisterLicense)},isMethodDefine_GetSystemConfig:function(){return attLicenseService.isSetContextMethod(consts.License.Methods.GetSystemConfig)},getRequestDataObjectForGetLicense:function(methodKey,licenseName){if(attLicenseService.callbackFunctions.getRequestDataObjectForGetLicense)return attLicenseService.callbackFunctions.getRequestDataObjectForGetLicense(licenseName);var reqData={methodKey:methodKey,putData:null,params:{},postData:null};return attLicenseService.data.useFixedLicenseName&&(reqData.params.license=_FixedLicenseName),attLicenseService.callbackFunctions.getServerName&&(reqData.params.server=attLicenseService.callbackFunctions.getServerName()),reqData},getLicense:function(licenseName,onSuccess,onError){if(!_isLicenseRequestIsOnTheWay&&attLicenseService.isSetContextMethod(consts.License.Methods.GetLicense)&&attLicenseService.isUserAllowToDoAction_GetLicense()){var reqData=attLicenseService.getRequestDataObjectForGetLicense(consts.License.Methods.GetLicense,licenseName),currentCallObjectCtx=attLicenseService.getContextObjectByMethodKey(reqData);_isLicenseRequestIsOnTheWay=!0,InvokerService.invokeServiceMethod(currentCallObjectCtx,consts.License.Methods.GetLicense,function(respData){_isLicenseRequestIsOnTheWay=!1,attLicenseService.applyDataForGetLicense(licenseName,respData),onSuccess&&onSuccess(licenseName,respData)},function(appMessage,detailedMessage,statusCode){return _isLicenseRequestIsOnTheWay=!1,onError?void onError(appMessage,detailedMessage,statusCode):!0})}},applyDataForGetLicense:function(licenseName,respData){if(attLicenseService.callbackFunctions.applyDataForGetLicenseOverwrite)attLicenseService.callbackFunctions.applyDataForGetLicenseOverwrite(licenseName,respData);else{var licenseObj=attLicenseService.getLicenseObjFromLicenseResponse(respData);attLicenseService.analyzeLicenseAndStore(licenseName,licenseObj),attLicenseService.verifyLicenseAndType(licenseName)}attLicenseService.callbackFunctions.moreActionsAfterGetLicense&&attLicenseService.callbackFunctions.moreActionsAfterGetLicense()},getRequestDataObjectForRegisterLicense:function(methodKey,license,licenseName){if(attLicenseService.callbackFunctions.getRequestDataObjectForRegisterLicense)return attLicenseService.callbackFunctions.getRequestDataObjectForRegisterLicense(methodKey,license,licenseName);var reqData={methodKey:methodKey,putData:null,params:{},postData:null};return"put"==_appContext[methodKey].reqType&&(reqData.putData=license),"post"==_appContext[methodKey].reqType&&(reqData.postData=license),attLicenseService.data.useFixedLicenseName&&(reqData.params.license=_FixedLicenseName),attLicenseService.callbackFunctions.getServerName&&(reqData.params.server=attLicenseService.callbackFunctions.getServerName()),reqData},registerLicense:function(license,licenseName,onSuccess,onError){if(attLicenseService.isMethodDefine_RegisterLicense()&&attLicenseService.isUserAllowToDoAction_RegisterLicense()){var reqData=attLicenseService.getRequestDataObjectForRegisterLicense(consts.License.Methods.RegisterLicense,license,licenseName),currentCallObjectCtx=attLicenseService.getContextObjectByMethodKey(reqData);InvokerService.invokeServiceMethod(currentCallObjectCtx,reqData.methodKey,function(data){onSuccess&&onSuccess(data),attLicenseService.callbackFunctions.moreActionsAfterRegisterLicense&&attLicenseService.callbackFunctions.moreActionsAfterRegisterLicense()},onError)}},getSystemInfo:function(params,onSuccess,onError){if(ObjectUtils.isEmpty(attLicenseService.data.systemInfo)&&(attLicenseService.data.systemInfo={},attLicenseService.data.systemInfo[attLicenseService.LicenseObject.full_machine_name]=""),attLicenseService.isSetContextMethod(consts.License.Methods.GetSystemInfo)&&attLicenseService.isUserAllowToDoAction_GetSystemInfo()){var reqData={methodKey:consts.License.Methods.GetSystemInfo,params:params},currentCallObjectCtx=attLicenseService.getContextObjectByMethodKey(reqData);InvokerService.invokeServiceMethod(currentCallObjectCtx,consts.License.Methods.GetSystemInfo,function(respData){attLicenseService.applySystemInfo(respData),onSuccess&&onSuccess()},onError)}},applySystemInfo:function(respSystemInfo){attLicenseService.data.systemInfo!=respSystemInfo&&(attLicenseService.data.systemInfo=respSystemInfo)},isStoredLicenseEmpty:function(licenseName){return ObjectUtils.isEmpty(_storedLicenseDictionary)||ObjectUtils.isEmpty(_storedLicenseDictionary[licenseName])||ObjectUtils.isEmpty(_storedLicenseDictionary[licenseName][_storedParams.content])},isStoredLicenseUpdatedToday:function(licenseName){var currentDay=new Date;return ObjectUtils.isEmpty(_storedLicenseDictionary[licenseName])?!1:_storedLicenseDictionary[licenseName][_storedParams.lastUpdate].getFullYear()===currentDay.getFullYear()&&_storedLicenseDictionary[licenseName][_storedParams.lastUpdate].getMonth()===currentDay.getMonth()&&_storedLicenseDictionary[licenseName][_storedParams.lastUpdate].getDate()===currentDay.getDate()},isStoredLicenseUpdatedInLastHour:function(licenseName){var currentDay=new Date;return _storedLicenseDictionary[licenseName][_storedParams.lastUpdate].getFullYear()===currentDay.getFullYear()&&_storedLicenseDictionary[licenseName][_storedParams.lastUpdate].getMonth()===currentDay.getMonth()&&_storedLicenseDictionary[licenseName][_storedParams.lastUpdate].getDate()===currentDay.getDate()&&_storedLicenseDictionary[licenseName][_storedParams.lastUpdate].getHours()===currentDay.getHours()},isStoredLicenseUpdatedIncreasingTimeFrame:function(licenseName){if(!attLicenseService.isStoredLicenseUpdatedToday(licenseName))return attLicenseService.clearStoredLicenseByName(licenseName),!1;var currentDayTime=new Date;if(null==_storedLicenseDictionary[licenseName][_storedParams.nextUpdateDateTime])return _storedLicenseDictionary[licenseName][_storedParams.nextUpdateDateTime]=currentDayTime,!0;if(currentDayTime<=_storedLicenseDictionary[licenseName].nextUpdateDateTime)return!0;null==_storedLicenseDictionary[licenseName][_storedParams.timeFrame]&&(_storedLicenseDictionary[licenseName][_storedParams.timeFrame]=FIRST_TIME_FRAME_KEY);var timeFrameKey=_storedLicenseDictionary[licenseName][_storedParams.timeFrame],firstUpdateWithTimeFrame=new Date(_storedLicenseDictionary[licenseName][_storedParams.firstUpdate]);firstUpdateWithTimeFrame.setSeconds(firstUpdateWithTimeFrame.getSeconds()+timeFrameKey),currentDayTime>firstUpdateWithTimeFrame&&(_storedLicenseDictionary[licenseName][_storedParams.timeFrame]=_timeFrameSeconds[timeFrameKey].nextKey,timeFrameKey=_storedLicenseDictionary[licenseName][_storedParams.timeFrame]);var nextUpdateTime=new Date;return nextUpdateTime.setSeconds(nextUpdateTime.getSeconds()+_timeFrameSeconds[timeFrameKey].every),_storedLicenseDictionary[licenseName].nextUpdateDateTime=nextUpdateTime,!1},clearStoredLicenseByName:function(licenseName){ObjectUtils.isEmpty(licenseName)||ObjectUtils.isEmpty(_storedLicenseDictionary[licenseName])||(_storedLicenseDictionary[licenseName]=null)},clearAllStoredLicense:function(){_storedLicenseDictionary=null,_storedLicenseDictionary={}},setLicenseToLocalStorage:function(licenseName,licenseObj){null==_storedLicenseDictionary[licenseName]?(_storedLicenseDictionary[licenseName]={},_storedLicenseDictionary[licenseName][_storedParams.firstUpdate]=new Date,_storedLicenseDictionary[licenseName][_storedParams.lastUpdate]=new Date,_storedLicenseDictionary[licenseName][_storedParams.content]=licenseObj):(_storedLicenseDictionary[licenseName][_storedParams.lastUpdate]=new Date,angular.equals(_storedLicenseDictionary[licenseName][_storedParams.content],licenseObj)||(_storedLicenseDictionary[licenseName][_storedParams.content]=ObjectUtils.deepClone(licenseObj)))},parseLicenseObjFromLoadedFileContent:function(fileContent){var licenseObj;try{return licenseObj=JSON.parse(fileContent)["cmd.license"],licenseObj||(licenseObj=JSON.parse(fileContent)),licenseObj}catch(e){var fileContentArr=fileContent.split("\n");return ArrayUtils.each(fileContentArr,function(item){if(!(item.indexOf("=")<0)){angular.isUndefined(licenseObj)&&(licenseObj={});var itemArr=item.split("=");licenseObj[itemArr[0]]=itemArr[1].replace(/[\n\r]/g,"")}}),angular.isUndefined(licenseObj)?licenseObj:(attLicenseService.data.setLicenseNameAfterParse&&(licenseObj[attLicenseService.LicenseObject.name]=attLicenseService.getServiceInnerLicenseName(null)),licenseObj)}},getServiceInnerLicenseName:function(licenseObj){return attLicenseService.data.useFixedLicenseName?_FixedLicenseName:attLicenseService.callbackFunctions.getLicenseName?attLicenseService.callbackFunctions.getLicenseName():ObjectUtils.isEmpty(licenseObj)||ObjectUtils.isEmpty(licenseObj[attLicenseService.LicenseObject.name])?null:licenseObj[attLicenseService.LicenseObject.name]},getLicenseObjFromLicenseResponse:function(licenseRespObj){return ObjectUtils.isEmpty(licenseRespObj)?null:ObjectUtils.isEmpty(licenseRespObj[attLicenseService.LicenseObject.responseObjectParam])?licenseRespObj:licenseRespObj[attLicenseService.LicenseObject.responseObjectParam]},getObjectLicenseType:function(licenseObj){return licenseObj[attLicenseService.LicenseObject.license_type]},getIsFeatureLicensed:function(licenseName,propName,featureName){var isLicensed=!1;null==propName&&(propName=attLicenseService.LicenseObject.features);var license=attLicenseService.getStoredLicense(licenseName);return null!=license&&null!=license[propName]&&(isLicensed=license[propName].indexOf(featureName)>=0||propName==DO.license.source_types&&""==license[propName]||propName==DO.license.target_types&&""==license[propName]),isLicensed},getObjectExpirationDate:function(licenseObj){return licenseObj[attLicenseService.LicenseObject.expiration_date]},verifyLicenseAndType:function(licenseName,onLicenseExistCallback){if(!ObjectUtils.isEmpty(licenseName)||(licenseName=attLicenseService.getServiceInnerLicenseName(null),!ObjectUtils.isEmpty(licenseName))){var getLicenseRequired=!1;if(attLicenseService.isStoredLicenseEmpty(licenseName))getLicenseRequired=!0;else{var licenseObj=attLicenseService.getStoredLicense(licenseName);getLicenseRequired=!attLicenseService.analyzeLicenseAndStore(licenseName,licenseObj)}if(getLicenseRequired)attLicenseService.isStoredLicenseUpdatedIncreasingTimeFrame(licenseName)||attLicenseService.getLicense(licenseName);else if(onLicenseExistCallback){var licenseType=attLicenseService.getObjectLicenseType(attLicenseService.getStoredLicense(licenseName));onLicenseExistCallback(licenseType)}}},getLicenseDatesDiff:function(licenseRespObj){var currentDate=new Date,licenseExpirationDate=attLicenseService.getObjectExpirationDate(licenseRespObj);if(ObjectUtils.isEmpty(licenseExpirationDate))return-1;var licenseExpirationDateArr=licenseExpirationDate.split("-");licenseExpirationDate=new Date(licenseExpirationDateArr[0],licenseExpirationDateArr[1]-1,licenseExpirationDateArr[2]),licenseExpirationDate.setDate(licenseExpirationDate.getDate()+1);var datesDiffInDays=(licenseExpirationDate-currentDate)/1e3/60/60/24;return datesDiffInDays=Math.floor(datesDiffInDays)},isLicensePermanent:function(licenseObj){var licenseType=attLicenseService.getObjectLicenseType(licenseObj);return!ObjectUtils.isEmpty(licenseType)&&(angular.lowercase(licenseType)==angular.lowercase(attLicenseService.LicenseObject.PERMANENT_LICENSE)||"permanent"==angular.lowercase(licenseType))},analyzeLicenseAndStore:function(licenseNameInReq,licenseObj){if(attLicenseService.isLicenseEmpty(licenseObj))return attLicenseService.licenseIsEmptyAction(licenseObj),!1;if(null!=attLicenseService.callbackFunctions.analyzeLicenseOtherTests&&attLicenseService.callbackFunctions.analyzeLicenseOtherTests(licenseObj))return null!=attLicenseService.callbackFunctions.analyzeLicenseOtherTestsDoAction&&attLicenseService.callbackFunctions.analyzeLicenseOtherTestsDoAction(licenseObj),!1;if(attLicenseService.isLicensePermanent(licenseObj))return attLicenseService.storeLicenseInStorage(licenseNameInReq,licenseObj),!0;var daysToExpireState=attLicenseService.getDaysToExpireState(licenseObj);switch(daysToExpireState){case consts.License.DaysToExpireState.EXPIRED:return attLicenseService.licenseExpiredAction(licenseObj),attLicenseService.storeLicenseInStorage(licenseNameInReq,licenseObj),!1;case consts.License.DaysToExpireState.TODAY:return attLicenseService.licenseExpireTodayAction(licenseObj),attLicenseService.storeLicenseInStorage(licenseNameInReq,licenseObj),!0;case consts.License.DaysToExpireState.ABOUT_TO_EXPIRE:var daysToExpirationNumber=attLicenseService.getDaysToExpire(licenseObj);return attLicenseService.licenseAboutToExpireAction(licenseObj,daysToExpirationNumber),attLicenseService.storeLicenseInStorage(licenseNameInReq,licenseObj),!0;case consts.License.DaysToExpireState.VALID:default:return attLicenseService.clearLicenseAlertFromDic(licenseNameInReq),attLicenseService.destroyLicenseTopBannerAlert(),attLicenseService.storeLicenseInStorage(licenseNameInReq,licenseObj),!0}},getErrorListIconState:function(licenseObj,daysToExpiration){return null==licenseObj[attLicenseService.LicenseObject.state]?"":licenseObj[attLicenseService.LicenseObject.state]==attLicenseService.DOGlobalLicenseStateObj.LICENSE_EXPIRED?"EXPIRED":licenseObj[attLicenseService.LicenseObject.state]==attLicenseService.DOGlobalLicenseStateObj.VALID&&null!=daysToExpiration&&daysToExpiration>-1&&daysToExpiration<=attLicenseService.data.numberOfDaysBeforeExpireToShowTopNotification?"AboutToExpire":licenseObj[attLicenseService.LicenseObject.state]},updateLicenseAlertsDic:function(mainText,licenseObj,daysToExpiration){var licenseKey=attLicenseService.getServiceInnerLicenseName(licenseObj),licenseTypeText=attLicenseService.getObjectLicenseType(licenseObj),showTypeText=null!=licenseObj[attLicenseService.LicenseObject.state]&&licenseObj[attLicenseService.LicenseObject.state]==attLicenseService.DOGlobalLicenseStateObj.LICENSE_EXPIRED||licenseObj[attLicenseService.LicenseObject.state]==attLicenseService.DOGlobalLicenseStateObj.VALID&&void 0!=daysToExpiration&&daysToExpiration>=0;licenseTypeText=ObjectUtils.isEmpty(licenseTypeText)||"term"==licenseTypeText.toLowerCase()||!showTypeText?"":licenseTypeText.toLowerCase();var alertText=locale.getString(mainText,[daysToExpiration]).toLowerCase(),alertIconState=attLicenseService.getErrorListIconState(licenseObj,daysToExpiration),alertCanRegisterLicense=attLicenseService.isUserAllowToDoAction_RegisterLicense(),alertCanOpenLicenseSettings=!1;attLicenseService.isMethodDefine_GetSystemConfig()&&(alertCanOpenLicenseSettings=attLicenseService.isUserAllowToDoAction_OpenLicenseSettings()),null==_alertsDictionary[licenseKey]?_alertsDictionary[licenseKey]={text:alertText,licenseObj:licenseObj,iconState:alertIconState,licenseTypeText:licenseTypeText,canRegisterLicense:alertCanRegisterLicense,canOpenLicenseSettings:alertCanOpenLicenseSettings,daysToExpiration:daysToExpiration,lastUpdate:new Date}:(_alertsDictionary[licenseKey].text!==alertText&&(_alertsDictionary[licenseKey].text=alertText),angular.equals(_alertsDictionary[licenseKey].licenseObj,licenseObj)||(_alertsDictionary[licenseKey].licenseObj=licenseObj),_alertsDictionary[licenseKey].iconState!==alertIconState&&(_alertsDictionary[licenseKey].iconState=alertIconState),_alertsDictionary[licenseKey].licenseTypeText!==licenseTypeText&&(_alertsDictionary[licenseKey].licenseTypeText=licenseTypeText),_alertsDictionary[licenseKey].canRegisterLicense!==alertCanRegisterLicense&&(_alertsDictionary[licenseKey].canRegisterLicense=alertCanRegisterLicense),_alertsDictionary[licenseKey].canOpenLicenseSettings!==alertCanOpenLicenseSettings&&(_alertsDictionary[licenseKey].canOpenLicenseSettings=alertCanOpenLicenseSettings),_alertsDictionary[licenseKey].daysToExpiration!==daysToExpiration&&(_alertsDictionary[licenseKey].daysToExpiration=daysToExpiration),_alertsDictionary[licenseKey].lastUpdate=new Date),attLicenseService.updateLicenseActionHideText(licenseKey)},updateLicenseActionHideText:function(licenseName){ObjectUtils.isEmpty(_alertsDictionary[licenseName])||(_alertsDictionary[licenseName].actionHideText=_getActionHideText(licenseName))},isAlertsDictionaryEmpty:function(){return ObjectUtils.isEmpty(_alertsDictionary)},clearLicenseAlertFromDic:function(licenseKey){ObjectUtils.isEmpty(licenseKey)?(_alertsDictionary=null,_alertsDictionary={},attLicenseService.destroyLicenseTopBannerAlert()):null!=_alertsDictionary[licenseKey]&&(_alertsDictionary[licenseKey]=null,delete _alertsDictionary[licenseKey])},getDaysToExpire:function(licenseObj){var daysToExpirationNumber=-1;return ObjectUtils.isEmpty(licenseObj)||(daysToExpirationNumber=null!=attLicenseService.callbackFunctions.calcDaysToExpiration?attLicenseService.callbackFunctions.calcDaysToExpiration(licenseObj):attLicenseService.getLicenseDatesDiff(licenseObj)),daysToExpirationNumber},getDaysToExpireStateText:function(licenseObj){var daysToExpireStateText=null,daysToExpireState=attLicenseService.getDaysToExpireState(licenseObj);switch(daysToExpireState){case consts.License.DaysToExpireState.EXPIRED:daysToExpireStateText=locale.getString(attLicenseService.Text.ExpiredLicense);break;case consts.License.DaysToExpireState.TODAY:daysToExpireStateText=locale.getString(attLicenseService.Text.ExpireToday);break;case consts.License.DaysToExpireState.ABOUT_TO_EXPIRE:var daysToExpirationNumber=attLicenseService.getDaysToExpire(licenseObj);daysToExpireStateText=1===daysToExpirationNumber?locale.getString(attLicenseService.Text.ExpireInOneDay):locale.getString(attLicenseService.Text.ExpireInFewDays,[daysToExpirationNumber]);break;case consts.License.DaysToExpireState.VALID:default:daysToExpireStateText=""}return daysToExpireStateText},getDaysToExpireState:function(licenseObj){if(ObjectUtils.isEmpty(licenseObj))return null;var daysToExpirationNumber=attLicenseService.getDaysToExpire(licenseObj);return attLicenseService.isLicenseExpired(daysToExpirationNumber)?consts.License.DaysToExpireState.EXPIRED:attLicenseService.isLicenseExpireToday(daysToExpirationNumber)?consts.License.DaysToExpireState.TODAY:attLicenseService.isLicenseAboutToExpire(daysToExpirationNumber)?consts.License.DaysToExpireState.ABOUT_TO_EXPIRE:consts.License.DaysToExpireState.VALID},showLicenseAlert:function(mainText,licenseObj,daysToExpiration){var licenseName=attLicenseService.getServiceInnerLicenseName(licenseObj);if(attLicenseService.callbackFunctions.isViewHidden&&attLicenseService.callbackFunctions.isViewHidden(licenseName)===!0)return attLicenseService.clearLicenseAlertFromDic(licenseName),void attLicenseService.destroyLicenseTopBannerAlert();if(attLicenseService.data.showTopBannerNotifications)attLicenseService.updateLicenseAlertsDic(mainText,licenseObj,daysToExpiration),$timeout(function(){attLicenseService.updateBannerAlert("Error",mainText,licenseObj,daysToExpiration)},1);else if(attLicenseService.data.showErrorMessage){attLicenseService.updateLicenseAlertsDic(mainText,licenseObj,daysToExpiration);var textWithParams=locale.getString(mainText,[daysToExpiration]);GlobalMessagesService.setMessages(!0,consts.errorModes.error,!1,textWithParams)}else attLicenseService.data.showOtherTypeOfNotificationForUser&&null!=attLicenseService.callbackFunctions.otherTypeOfNotification&&(attLicenseService.updateLicenseAlertsDic(mainText,licenseObj,daysToExpiration),attLicenseService.callbackFunctions.otherTypeOfNotification(mainText,licenseObj,daysToExpiration))},licenseIsEmptyAction:function(licenseObj){attLicenseService.showLicenseAlert(attLicenseService.Text.EmptyLicense,licenseObj)},licenseIsInvalidAction:function(licenseObj){var invalidText=locale.getString(attLicenseService.Text.InvalidLicense);attLicenseService.showLicenseAlert(invalidText,licenseObj)},licenseExpiredAction:function(licenseObj){attLicenseService.showLicenseAlert(attLicenseService.Text.ExpiredLicense,licenseObj,-1)},licenseExpireTodayAction:function(licenseObj){attLicenseService.showLicenseAlert(attLicenseService.Text.ExpireToday,licenseObj,0)},licenseAboutToExpireAction:function(licenseObj,daysToExpiration){1===daysToExpiration?attLicenseService.showLicenseAlert(attLicenseService.Text.ExpireInOneDay,licenseObj,daysToExpiration):attLicenseService.showLicenseAlert(attLicenseService.Text.ExpireInFewDays,licenseObj,daysToExpiration)},onClickRegisterLicense:function(vm,licenseObj,closeFunc,onRegistrationSuccess,onRegistrationError){if(GlobalMessagesService.hideDockedError(),!ObjectUtils.isEmpty(vm.licenseFile.content)||!ObjectUtils.isEmpty(licenseObj)){if(ObjectUtils.isEmpty(licenseObj)){var errLoadStr=locale.getString("common.license.RegisterPopup_ErrorParsingFile");return void GlobalMessagesService.setMessages(!0,consts.errorModes.error,!1,errLoadStr)}var licenseNameInReq=attLicenseService.getServiceInnerLicenseName(licenseObj);attLicenseService.registerLicense(licenseObj,licenseNameInReq,function(){attLicenseService.getLicense(licenseNameInReq,function(){AttLoaderService.hide_loader(),attLicenseService.clearLicenseAlertFromDic(licenseNameInReq),attLicenseService.destroyLicenseTopBannerAlert();var storedLicense=attLicenseService.getStoredLicense(licenseNameInReq),analyzeRes=attLicenseService.analyzeLicenseAndStore(licenseNameInReq,storedLicense);if(1==analyzeRes){closeFunc&&closeFunc();var text=locale.getString(attLicenseService.Text.licenseRegisteredSuccessfullyText);null==attLicenseService.callbackFunctions.openViewLicenseSettings||ObjectUtils.isEmpty(licenseNameInReq)||(text=locale.getString("common.license.RegisterPopup_RegisteredSuccessfully_withName",[licenseNameInReq])),GlobalMessagesService.setMessages(!0,consts.errorModes.success,!0,text),onRegistrationSuccess&&onRegistrationSuccess()}else attLicenseService.data.showTopBannerNotifications?closeFunc&&closeFunc():onRegistrationError&&onRegistrationError()},onRegistrationError)},onRegistrationError)}},showRegisterLicensePopup:function(licenseName,moreParams,onRegistrationSuccess,onRegistrationError){if(!(angular.element(".registerLicensePopup").length>0)){ObjectUtils.isEmpty(licenseName)&&(licenseName=attLicenseService.getServiceInnerLicenseName(null));var vModel={licenseFile:{name:"",content:""},title:attLicenseService.data.useFixedLicenseName?locale.getString(attLicenseService.Text.registerLicensePopupTopTitle):locale.getString(attLicenseService.Text.registerPopup_TopTitleForModule,[licenseName]),texts:{loadFile:attLicenseService.getTextRegisterLicensePopupLoadFile(),loadFileBtn:attLicenseService.Text.registerLicensePopupLoadFileBtnText,contentHeader:attLicenseService.Text.registerLicensePopupContentHeader,contentFooter:attLicenseService.Text.registerLicensePopupContentFooter},licenseName:licenseName,isReadFileSupported:attLicenseService.isBrowserSupportedReadFile()};ObjectUtils.isEmpty(moreParams)||(ObjectUtils.isEmpty(moreParams.serverName)?ObjectUtils.isINT(moreParams.serversCount)?vModel.title=locale.getString(attLicenseService.Text.registerPopup_TopTitleForManyServers,[moreParams.serversCount]):moreParams.showModuleName===!0&&(vModel.title=locale.getString(attLicenseService.Text.registerPopup_TopTitleForModule,[moreParams.moduleName])):vModel.title=locale.getString(attLicenseService.Text.registerLicensePopupTopTitleForServer,[moreParams.serverName])),modalService.showModal({contentTemplate:attLicenseService.data.registerLicensePopupTemplateLink,headerText:vModel.title,actionButtonText:locale.getString(attLicenseService.Text.registerLicenseActionButtonText),closeButtonText:locale.getString("common.base.Close"),model:vModel,closeOnRoute:!0,checkRouteChange:!1,onBeforeOk:function(vm,closeFnc){if(!ObjectUtils.isEmpty(vm.licenseFile.content)){var licenseObj=attLicenseService.parseLicenseObjFromLoadedFileContent(vm.licenseFile.content);null!=attLicenseService.callbackFunctions.doActionRegisterLicense?attLicenseService.callbackFunctions.doActionRegisterLicense(vm,licenseObj,closeFnc,onRegistrationSuccess,onRegistrationError):attLicenseService.onClickRegisterLicense(vm,licenseObj,closeFnc,onRegistrationSuccess,onRegistrationError)}},okDisabledProp:function(vm){if(ObjectUtils.isEmpty(vm.licenseFile.content))return!0;var res=attLicenseService.parseLicenseObjFromLoadedFileContent(vm.licenseFile.content);
return ObjectUtils.isEmpty(res)}},{windowClass:"registerLicensePopup"})}},getLicenseBannerElement:function(){return angular.element($document.find("#licenseTopBannerAlert").length>0?$document.find("#licenseTopBannerAlert"):$document.find("license-banner"))},isLicenseBannerExist:function(){var bannerElement=attLicenseService.getLicenseBannerElement();return null!=bannerElement&&$document.find(bannerElement).length>0},getLicenseBannerScope:function(){var bannerElement=attLicenseService.getLicenseBannerElement();return bannerElement.scope()},destroyLicenseTopBannerAlert:function(isByUser){if(void 0==isByUser&&(isByUser=!1),(isByUser||attLicenseService.isAlertsDictionaryEmpty())&&attLicenseService.isLicenseBannerExist()){var existScope=attLicenseService.getLicenseBannerScope();null!=existScope&&existScope.$destroy();var bannerElement=attLicenseService.getLicenseBannerElement();$document.find(bannerElement).remove(),bannerElement=null}},destroyLicenseTopBannerAlertByUser:function(){attLicenseService.destroyLicenseTopBannerAlert(!0),attLicenseService.data.topNotificationManuallyClosed=!0},showLicenseAlertList:function(actions){var popupModal={actions:actions,alertsDictionary:_alertsDictionary};modalService.showModal({contentTemplate:attLicenseService.data.licenseAlertListTemplateLink,headerText:locale.getString("common.license.Alert.LicenseAlerts"),closeButtonText:locale.getString("common.base.Close"),model:popupModal,hasOk:!1,closeOnRoute:!0,checkRouteChange:!1},{windowClass:"licenseAlertsPopup"})},closeLicenseAlertPopupIfOpenAndEmpty:function(){angular.element(".licenseAlertsPopup").length>0&&attLicenseService.isAlertsDictionaryEmpty()&&(modalService.closeActive(),attLicenseService.destroyLicenseTopBannerAlert())},updateBannerAlert:function(type,text,licenseObj,datesDiff){if(!attLicenseService.data.topNotificationManuallyClosed){if(attLicenseService.isLicenseBannerExist()){var exScope=attLicenseService.getLicenseBannerScope();return void(angular.equals(exScope.type,type)&&angular.equals(exScope.text,text)&&angular.equals(exScope.datesDiff,datesDiff)||$timeout(function(){exScope.$apply(function(){exScope.type!=type&&(exScope.type=type),exScope.text!=text&&(exScope.text=text),exScope.datesDiff!=datesDiff&&(exScope.datesDiff=datesDiff)})},1))}var nScope=$rootScope.$new();nScope.type=type,nScope.text=text,nScope.datesDiff=datesDiff,nScope.textRegisterLicense="common.license.Alert.Register_A_License",nScope.actionRegisterLicense=function(licenseName){void 0!=licenseName||ObjectUtils.isEmpty(licenseObj)||(licenseName=attLicenseService.getServiceInnerLicenseName(licenseObj)),attLicenseService.showRegisterLicensePopup(licenseName,null,function(){attLicenseService.closeLicenseAlertPopupIfOpenAndEmpty()},null)},nScope.onDestroyAction=attLicenseService.destroyLicenseTopBannerAlertByUser,nScope.textOpenViewLicenseSettings=attLicenseService.Text.clickableViewLicense,null!=attLicenseService.callbackFunctions.openViewLicenseSettings&&(nScope.actionOpenViewLicenseSettings=attLicenseService.callbackFunctions.openViewLicenseSettings),attLicenseService.data.topBannerTemplateName===_licenseBannerOpenPopTpl&&(nScope.openLicenseAlertListText="common.license.Alert.LicenseAlerts",nScope.openLicenseAlertList=function(){if(!(angular.element(".licenseAlertsPopup").length>0||null!=attLicenseService.callbackFunctions.disableOpenAlertBanner&&attLicenseService.callbackFunctions.disableOpenAlertBanner())){var actions={textRegisterLicense:"common.license.RegisterPopup_ActionButtonText",actionRegisterLicense:nScope.actionRegisterLicense,textOpenViewLicenseSettings:nScope.textOpenViewLicenseSettings,actionOpenViewLicenseSettings:nScope.actionOpenViewLicenseSettings,hideActionClicked:_hideActionClicked,onDestroyAction:nScope.onDestroyAction},licenseName="";ObjectUtils.isEmpty(licenseName)&&(licenseName=attLicenseService.getServiceInnerLicenseName(null)),attLicenseService.getLicense(licenseName,function(){attLicenseService.isAlertsDictionaryEmpty()?attLicenseService.destroyLicenseTopBannerAlert():attLicenseService.showLicenseAlertList(actions)})}});var topNotificationHTML="<license-banner></license-banner>",licenseOverlayElement=$compile(topNotificationHTML)(nScope);$document.find("body").prepend(licenseOverlayElement)}},getStoredLicense:function(licenseName){return ObjectUtils.isEmpty(licenseName)&&(licenseName=attLicenseService.getServiceInnerLicenseName(null)),attLicenseService.isStoredLicenseEmpty(licenseName)?null:_storedLicenseDictionary[licenseName][_storedParams.content]},storeLicenseInStorage:function(licenseNameInReq,licenseObj){var extendedLicenseObj=ObjectUtils.deepClone(licenseObj);attLicenseService.setLicenseToLocalStorage(licenseNameInReq,extendedLicenseObj)},loadLicenseLocale:function(overlayParams){locale.ready("common.license").then(function(){ObjectUtils.isEmpty(attLicenseService.data.overlayInfo.title)&&(attLicenseService.data.overlayInfo.title=locale.getString("common.license.RegisterLicense_label")),ObjectUtils.isEmpty(attLicenseService.data.overlayInfo.loadingLicenseText)&&(attLicenseService.data.overlayInfo.loadingLicenseText=locale.getString("common.license.LoadingLicense")),ObjectUtils.isEmpty(overlayParams)||(ObjectUtils.isEmpty(overlayParams.overlayTitle)||attLicenseService.data.overlayInfo.title==overlayParams.overlayTitle||(attLicenseService.data.overlayInfo.title=overlayParams.overlayTitle),ObjectUtils.isEmpty(overlayParams.loadingLicenseText)||attLicenseService.data.overlayInfo.loadingLicenseText==overlayParams.loadingLicenseText||(attLicenseService.data.overlayInfo.loadingLicenseText=overlayParams.loadingLicenseText))})},setOverlayInfoBasicSections:function(overlayParams){null==overlayParams.sections&&(overlayParams.sections={});var canRegisterLicense=attLicenseService.isUserAllowToDoAction_RegisterLicense(),canGetSystemInfo=attLicenseService.isUserAllowToDoAction_GetSystemInfo(),_mainText=locale.getString("common.license.AdminNeedsRegisterWithProductAndLicenseName",[overlayParams.productName,overlayParams.licenseName]);canRegisterLicense&&!ObjectUtils.isEmpty(overlayParams.productName)&&(_mainText=locale.getString("common.license.RegisterLicenseNameInOrderToUseProduct",[overlayParams.licenseName,overlayParams.productName]));var basicSections={};basicSections.one={show:!0,firstText:canRegisterLicense?locale.getString("common.base.Click"):null,btnLabel:canRegisterLicense?locale.getString("common.license.RegisterLicense_label"):null,mainText:_mainText,onClick:canRegisterLicense&&overlayParams.actionRegister?overlayParams.actionRegister:null},basicSections.two={show:!0,showMachineName:!0,mainText:locale.getString(canGetSystemInfo?"common.license.ObtainLicenseContactWithMachineName":"common.license.ObtainLicenseContact")},basicSections.three={show:!1,firstBtn:{show:!1,label:"",action:null},secondBtn:{show:!1,label:"",action:null}},ObjectUtils.deepFillIn(overlayParams.sections,basicSections)},updateRegisterLicenseLayoutOverlayData:function(overlayParams){null==overlayParams&&(overlayParams={}),attLicenseService.loadLicenseLocale(overlayParams),attLicenseService.setOverlayInfoBasicSections(overlayParams),ObjectUtils.isEmpty(overlayParams.sections)||ObjectUtils.equals(attLicenseService.data.overlayInfo.sections,overlayParams.sections)||ObjectUtils.deepMixIn(attLicenseService.data.overlayInfo.sections,overlayParams.sections),attLicenseService.data.overlayInfo.showOverlayTopRedBackground!==!0&&(attLicenseService.data.overlayInfo.showOverlayTopRedBackground=!1)}};return attLicenseService}]),attLicenseModule.run(["$templateCache",function($templateCache){$templateCache.put(_licenseBannerTpl,"<div id=\"licenseTopBannerAlert\" ng-style=\"getBannerStyleObj()\" type={{type}}>   <div class='msgWrap'>       <span class='msgDescription'>{{text | i18n:datesDiff}}</span>       <a class='clickableText' ng-click='actionRegisterLicense()' i18n='{{textRegisterLicense}}'></a>   </div>"+'   <span id="removeTopNotification" ng-if=\'(type == "Error")\' ng-click="onDestroyAction()">X</span></div>'),$templateCache.put(_licenseBannerComplexTpl,"<div id=\"licenseTopBannerAlert\" ng-style=\"getBannerStyleObj()\" type={{type}}>   <div class='msgWrap'>       <span ng-if='(actionOpenViewLicenseSettings != null)' class='licenseIconOrange'></span>       <span class='msgDescription'>{{text | i18n:datesDiff}}</span>       <a class='clickableText' ng-click='actionRegisterLicense()' i18n='{{textRegisterLicense}}'></a>       <a class='clickableTextSecond' ng-if=\"textOpenViewLicenseSettings != '' && actionOpenViewLicenseSettings != null\" ng-click='actionOpenViewLicenseSettings()' i18n='{{textOpenViewLicenseSettings}}'></a>   </div></div>"),$templateCache.put(_licenseBannerOpenPopTpl,"<div id=\"licenseTopBannerAlert\" class='openPopupOnly' type={{type}}>   <div class='msgWrap'>       <span class='licenseIconOrange'></span>       <a id=\"OpenLicenseAlertListBtn\" class='clickableText' ng-click='openLicenseAlertList()' i18n='{{openLicenseAlertListText}}'></a>   </div></div>")}]),attLicenseModule.directive("licenseBanner",["$timeout","attLicenseService",function($timeout,attLicenseService){return{restrict:"E",replace:!0,templateUrl:function(element,attrs){return ObjectUtils.isEmpty(attrs.tpl)?attLicenseService.data.topBannerTemplateName:attrs.tpl},link:function(scope){scope.licBanData=attLicenseService.data,scope.bannerStyleObj={opacity:.7},ObjectUtils.isEmpty(attLicenseService.data.topBannerErrorBackgroundColor)||(scope.bannerStyleObj["background-color"]=attLicenseService.data.topBannerErrorBackgroundColor),scope.getBannerStyleObj=function(){return scope.bannerStyleObj},"Success"==scope.type&&$timeout(function(){scope.bannerStyleObj={opacity:0,"-moz-transition":"all 1.5s ease","-webkit-transition":"all 1.5s ease","-o-transition":"all 1.5s ease",transition:"all 1.5s ease"},ObjectUtils.isEmpty(attLicenseService.data.topBannerSuccessBackgroundColor)||(scope.bannerStyleObj["background-color"]=attLicenseService.data.topBannerSuccessBackgroundColor),$timeout(function(){scope.onDestroyAction()},3e3)},3e3)}}}]),attLicenseModule.controller("RegisterLicensePopupCtrl",["$scope","$timeout","locale","attLicenseService","AttLoaderService","GlobalMessagesService",function($scope,$timeout,locale,attLicenseService,AttLoaderService,GlobalMessagesService){function setLicenseFileName(fileName){$scope.vm.licenseFile.name=fileName}function setLicenseFileContent(content){$scope.vm.licenseFile.content=content}$scope.onLoadLicenseFileClicked=function(){GlobalMessagesService.hideDockedError(),$("#licenseFileBrowser").val(""),$timeout(function(){angular.element("#licenseFileBrowser").trigger("click")},100)},$scope.$on("fileAdded",function(evt,file){AttLoaderService.show_loader(),file&&file.name&&setLicenseFileName(file.name);var reader=new FileReader;reader.onload=function(evt){setLicenseFileContent(evt.target.result),$timeout(function(){AttLoaderService.hide_loader()},100)},reader.readAsText(file)}),null!=attLicenseService.callbackFunctions.onRegisterLicenseTextChange&&$scope.$watch("vm.licenseFile.content",function(newContent,oldContent){if(newContent!=oldContent&&null!=attLicenseService.callbackFunctions.onRegisterLicenseTextChange){var licenseObj=attLicenseService.parseLicenseObjFromLoadedFileContent(newContent);attLicenseService.callbackFunctions.onRegisterLicenseTextChange(licenseObj,$scope.vm.licenseName)}})}]),attLicenseModule.controller("RegisterLicenseOverlayCtrl",["$scope","locale","attLicenseService","attUtilsService",function($scope,locale,attLicenseService){$scope.licenseServiceData=attLicenseService.data}]),attLicenseModule}(angular);