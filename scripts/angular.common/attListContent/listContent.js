!function(angular){"use strict";var listContentDirectives=(angular.module("attListContent",["attListContentDirectives"]).provider("listContent",[function(){return{$get:function(){return{}}}}]),angular.module("attListContentDirectives",[]));listContentDirectives.directive("attListContent",["listContent","$timeout",function(listContent,$timeout){return{restrict:"E",replace:!0,scope:{listDataReqComplete:"=?",isDownloadFileEnabled:"=?",downloadLogFileFnc:"&",downloadLogFileTooltip:"=?",listData:"=",isLeftPanelOpen:"=?",leftPanelHeaderText:"@",onListItemClick:"&",actionBarClass:"@",actionBarLabel:"@",actionBarDisabledFnc:"&",actionBarClickFnc:"&",itemText:"=?",getFurtherTextFnc:"&",noItemsFoundText:"@",highlightRowsCriteria:"=?",isFontEffectsEnabled:"=?",isFirstItemSelected:"=?",isActionBarVisible:"=?",actionBarTooltip:"=?",contentSelectTypes:"=?",contentSelectTypeIndex:"=?",onContentTypeSelectedCallback:"&",sparkJobUrl:"=?"},templateUrl:"scripts/angular.common/attListContent/listContentTemplate.html",controller:["$scope","locale",function($scope,locale){ObjectUtils.isEmpty($scope.noItemsFoundText)&&($scope.noItemsFoundText=locale.getString("common.loggersConfig.NoRelevantItemsWereFound")),$scope.toggleLeftNav=function(){var leftBarWrp=angular.element(document.querySelector("#LeftBarWrapper")),listContentTextPanel=angular.element(document.querySelector("#listContentTextPanel"));leftBarWrp.toggleClass("leftNavClosed").toggleClass("leftNavOpen").toggleClass("userAction"),leftBarWrp=null,listContentTextPanel.hasClass("listContentClosed")?$timeout(function(){listContentTextPanel.toggleClass("listContentOpened").toggleClass("listContentClosed"),listContentTextPanel=null},600):(listContentTextPanel.toggleClass("listContentOpened").toggleClass("listContentClosed"),listContentTextPanel=null)},$scope.midTierGetFurtherTextFnc=function(successCallback){$scope.getFurtherTextFnc()(successCallback)},$scope.midTierDownloadLogFileFnc=function(successCallback){$scope.downloadLogFileFnc()(successCallback)},$scope.onContentTypeSelected=function(item){$scope.onContentTypeSelectedCallback()(item)},$scope.INIT=function(){null!=$scope.contentSelectTypes&&$scope.contentSelectTypes.length>0&&($scope.contentSelectedType=null!=$scope.contentSelectTypeIndex?$scope.contentSelectTypes[$scope.contentSelectTypeIndex]:$scope.contentSelectTypes[0]),$scope.contentSelectedType&&$scope.onContentTypeSelected($scope.contentSelectedType)},$scope.INIT()}],link:function(scope){angular.isUndefined(scope.isActionBarVisible)&&(scope.isActionBarVisible=!0),null==scope.downloadLogFileTooltip&&(scope.downloadLogFileTooltip="Download Log File")}}}])}(angular);