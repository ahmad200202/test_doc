!function(){"use strict";function getCookie(name){var re=new RegExp(name+"=([^;]+)"),value=re.exec(document.cookie);return null!=value?unescape(value[1]):null}function getXsrfCookieName(){var res=xsrfCookieName;if(document.cookie&&""!=document.cookie){for(var split=document.cookie.split(";"),xsrfCandidates=[],i=0;i<split.length;i++){var name_value=split[i].split("=");name_value[0]=name_value[0].replace(/^ /,"");var cookieName=decodeURIComponent(name_value[0]);cookieName.indexOf(xsrfCookieName)>=0&&xsrfCandidates.push(cookieName)}if(res=xsrfCandidates.length>=0?xsrfCandidates[0]:res,location.port&&""!=location.port){var found=ArrayUtils.find(xsrfCandidates,function(it){return it.indexOf(xsrfCookieName)>=0&&it.indexOf(location.port)>=0});found&&(res=found)}else xsrfCandidates.length>0&&(res=xsrfCandidates[0])}return res}var xsrfCookieName="XSRF-TOKEN",xsrfHeaderName="X-XSRF-TOKEN",xsrfNameHandled=!1;angular.module("attTokenInjector",[]).factory("tokenInjector",["$injector",function($injector){var $q,$http;return{request:function(config){return xsrfNameHandled||($http=$http||$injector.get("$http"),$http.defaults.xsrfCookieName=getXsrfCookieName(),xsrfNameHandled=null!=$http.defaults.xsrfCookieName),config},response:function(response){var appStatus=response.headers("Application-Status");if(null!=appStatus&&"440"==appStatus){$q=$q||$injector.get("$q"),$http=$http||$injector.get("$http");var defer=$q.defer(),promiseToken=defer.promise;$.ajax({async:!1,url:baseUrl+"/?action=login",method:"GET",success:function(){defer.resolve()},error:function(){defer.resolve()}});var promiseUpdate=promiseToken.then(function(){var xsrfVal=getCookie(xsrfCookieName);return xsrfVal||(xsrfVal=getCookie(withPort)),response.config.headers[xsrfHeaderName]=xsrfVal,$http(response.config)});return promiseUpdate}return response}}}])}(angular);