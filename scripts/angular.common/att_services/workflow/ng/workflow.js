!function(global){"use strict";var app=angular.module("attWorkflowService",[]);app.directive("workflow",["$timeout","$filter","modalService","GlobalEvents",function($timeout,$filter,modalService,GlobalEvents){return{restrict:"E",template:'<div class="workflowContainer" style="width: 100%;height: 100%"></div> <div class="WorkflowNotUpToDateWarning" ng-if="WorkflowNotUpToDate"></div>',scope:{data:"=",monitoringData:"=?",onNodeDblClick:"&",appInterface:"=?",isMonitoring:"=?",availableExecutors:"=?",nodeShapeTypeGetter:"&nodeShape",nodeDisplayNameGetter:"&nodeDisplayName",nodeHasErrorPort:"&nodeHasErrorPort",nodeTooltipProviderGetter:"&nodeTooltipProvider",svgDefsPath:"@"},link:function(scope,element){function createWorkflowCtxMenu(node){var existingTasksCtxMenu=[];if(ArrayUtils.each(scope.availableExecutors,function(exec){existingTasksCtxMenu.push({title:exec[DO.ExecutorDto.name],ctxData:exec,action:function(el,node,exec){global.WorkFlow.WorkflowBuilder.addExecutor(scope.data,node,exec),scope.onAfterAction(!0)}})}),node.original_type==DO.WorkflowPublicDefTypeIds.EndNode||node.original_type==DO.WorkflowPublicDefTypeIds.StartNode||scope.isMonitoring)return d3.event.stopPropagation(),null;var menu=[];return menu.push({title:"Delete",action:function(el,d){global.WorkFlow.WorkflowBuilder.removeNode(scope.data,d),scope.onAfterAction(!1)}}),menu}function createGraphCtxMenu(graphData,position){var existingTasksCtxMenu=[];if(ArrayUtils.each(scope.availableExecutors,function(exec){existingTasksCtxMenu.push({title:exec[DO.ExecutorDto.name],ctxData:exec,action:function(el,node,exec){global.WorkFlow.WorkflowBuilder.addExecutor(scope.data,null,exec,position),scope.onAfterAction(!1)}})}),scope.isMonitoring)return null;var menu=[];return menu.push({title:function(){return"<span>Add Existing Tasks...</span> <span style='width: 5px' class='att-glyph icon-gl-Expand_right'></span>"},children:existingTasksCtxMenu,action:function(el,d){var model={executors:scope.existing_tasks};modalService.showModal({contentTemplate:"views/workflow/workflowPallet.html",headerText:"Workflow",resizable:!0,model:model},{windowClass:"WorkflowPalletPopup"}).then(function(vm){global.WorkFlow.WorkflowBuilder.addExecutor(scope.data,d,vm.selected),scope.onAfterAction(!1)})}}),menu.push({title:function(){return"<span>Add Workflow Element...</span> <span style='width: 5px' class='att-glyph icon-gl-Expand_right'></span>"},action:function(){},children:[{title:"Parallel Split",ctxData:{type:DO.Objects.ParallelGateway,direction:DO.GatewayDirection.DIVERGING},action:function(el,node,ctxData){global.WorkFlow.WorkflowBuilder.addGateway(scope.data,null,ctxData,position),scope.onAfterAction(!1)}},{title:"Synchronise",ctxData:{type:DO.Objects.ParallelGateway,direction:DO.GatewayDirection.CONVERGING},action:function(el,node,ctxData){global.WorkFlow.WorkflowBuilder.addGateway(scope.data,null,ctxData,position),scope.onAfterAction(!1)}}]}),menu.push({title:"Apply Automatic Layout",action:function(){scope.graphApi.forceLayout(),scope.graphApi.fnCenterGraph(!0,!1),scope.appInterface.workflowIsDirty=!0}}),menu}function createArrowsCtxMenu(){return scope.isMonitoring?null:[{title:"Delete",action:function(el,d){global.WorkFlow.WorkflowBuilder.removeEdge(scope.data,d),scope.onAfterAction(!1)}}]}null==global.WorkFlow.shapes.defsLoader&&(global.WorkFlow.shapes.defsLoader=new global.AttuGraph.Utils.svgDefsLoader(scope.svgDefsPath)),scope.graphApi=null,scope.nodes=[],scope.nodesDic={},scope.edgesDic={},scope.edges=[],scope.WorkflowNotUpToDate=!1,scope.firstDataChange=!0,scope.nodeTooltipProvider=scope.nodeTooltipProviderGetter(),scope.calculateNodesAndEdges=function(){scope.nodes.splice(0,scope.nodes.length),scope.edges.splice(0,scope.edges.length),scope.nodesDic={},scope.edgesDic={},ObjectUtils.forOwn(scope.data.flow_nodes,function(nodeId,node){var shape_id,type=node.$type;node.direction&&node.$type==DO.WorkflowPublicDefTypeIds.ParallelGateway?shape_id=DO.WorkflowPublicDefTypeIds.ParallelGateway+node.direction:scope.nodeShapeTypeGetter()&&(shape_id=scope.nodeShapeTypeGetter()(node)),null==shape_id?shape_id=type:type=shape_id;var node_texts={display_name:node.display_name,tooltip:node.display_name},nodeDisplayNameFn=scope.nodeDisplayNameGetter();ObjectUtils.isKind(nodeDisplayNameFn,"Function")&&(node_texts=nodeDisplayNameFn(node)),ObjectUtils.isKind(scope.nodeTooltipProvider,"Function")&&(node_texts.tooltip=scope.nodeTooltipProvider(node));var nodeHasErrorPortFn=scope.nodeHasErrorPort(),hasErrorPort=!1;ObjectUtils.isKind(nodeHasErrorPortFn,"Function")&&(hasErrorPort=nodeHasErrorPortFn(node));var nodeD={shape_id:shape_id,id:nodeId,$type:type,original_type:node.$type,name:node_texts.display_name,tooltip:node_texts.tooltip,node_data:node,has_error_port:hasErrorPort,shape:global.WorkFlow.shapes.WorkflowNode};0!=node[DO.FlowNode.visuals].x&&0!=node[DO.FlowNode.visuals].y&&(nodeD.px=node[DO.FlowNode.visuals].x,nodeD.py=node[DO.FlowNode.visuals].y),scope.nodes.push(nodeD),scope.nodesDic[nodeId]=nodeD}),ObjectUtils.forOwn(scope.data.flow_nodes,function(nodeId,node){ArrayUtils.each(node.outgoing,function(it){var edge={source:scope.nodesDic[nodeId],target:scope.nodesDic[it.directive.target_node_id],type:it.$type};edge.id=edge.source.id+"_"+edge.target.id+"_"+edge.type,scope.edgesDic[edge.id]=edge,scope.edges.push(edge)})}),scope.firstDataChange||(scope.appInterface.workflowIsDirty=!0),scope.firstDataChange=!1},scope.onAfterAction=function(forceLayout){scope.calculateNodesAndEdges(),scope.graphApi.draw(),forceLayout&&scope.graphApi.forceLayout()},scope.onZoomEnd=function(translate,zoomVal){scope.$applyAsync(function(){scope.appInterface.slider.slider_data.slider_val=zoomVal})},scope.options={},scope.options.onNodeDblClickCallback=function(node){scope.onNodeDblClick({nodeName:node.name})},scope.options.onNodeClickCallback=function(){},scope.onNodeDragEnd=function(node,nodeInSamePlace){nodeInSamePlace||(scope.appInterface.workflowIsDirty=!0)},scope.options.targetElement=element.find(".workflowContainer")[0],scope.options.isDynamicGraph=!scope.isMonitoring,scope.options.onNodeContextMenu=createWorkflowCtxMenu,scope.options.onGraphContextMenu=createGraphCtxMenu,scope.options.createArrowsCtxMenu=createArrowsCtxMenu,scope.options.minZoomVal=.15,scope.options.selectedItems=scope.appInterface.selectedItems||[],scope.options.onAfterGraphAction=scope.onAfterAction,scope.options.onNodeDragEnd=scope.onNodeDragEnd,scope.options.onZoomEnd=scope.onZoomEnd,scope.options.isMultipleSelection=!scope.isMonitoring,scope.options.layoutOptions={nodeSep:80,edgeSep:80,rankSep:150,rankDir:"LR"},scope.watcher=scope.$watchCollection("data",function(newVal){null!=newVal&&(scope.calculateNodesAndEdges(),element.find(".workflowContainer").empty(),scope.options.workflowDto=scope.data,scope.graphApi=global.WorkFlow.Interface.createGraph(scope.nodes,scope.edges,scope.options),GlobalEvents.destroy("WorkflowExecuted"),GlobalEvents.on("WorkflowExecuted",function(flowName){newVal.name==flowName&&(scope.monitoringData&&(scope.runtimeIdToIgnore=scope.monitoringData[DO.FlowExecutorDetailedStatus.runtime_id]),scope.appInterface.redrawGraph())}),$timeout(function(){scope.graphApi.fnCenterGraph(!0,!0,!1,.5)}),scope.isMonitoring&&scope.startMonitorWatch())}),scope.monitorWatch=null,scope.startMonitorWatch=function(){scope.monitorWatch=scope.$watchCollection("monitoringData",function(newVal){if(null!=newVal){if(scope.data&&scope.data.metadata&&newVal.start_time&&scope.data.metadata.modification_time>newVal.start_time)return void(scope.WorkflowNotUpToDate=!0);if(scope.WorkflowNotUpToDate=!1,null!=scope.runtimeIdToIgnore&&scope.runtimeIdToIgnore==newVal[DO.FlowExecutorDetailedStatus.runtime_id])return;ArrayUtils.each(newVal[DO.FlowExecutorDetailedStatus.statuses],function(item){null!=scope.nodesDic[item[DO.FlowNodeStatus.node_id]]&&("end"==item[DO.FlowNodeStatus.node_id]&&(item[DO.FlowNodeStatus.status][DO.ExecutorStatus.message]=newVal.message),scope.nodesDic[item[DO.FlowNodeStatus.node_id]].monitoringData=item);var arrowsData=item[DO.FlowNodeStatus.outgoing];ArrayUtils.each(arrowsData,function(outgoing){var dir=outgoing[DO.OutPort.directive],edgeId=item[DO.FlowNodeStatus.node_id]+"_"+dir[DO.SequenceFlow.target_node_id]+"_"+outgoing.$type;null!=scope.edgesDic[edgeId]&&(scope.edgesDic[edgeId].monitoringData={},scope.edgesDic[edgeId].monitoringData.state=item[DO.FlowNodeStatus.status][DO.ExecutorStatus.state])})})}scope.graphApi&&scope.graphApi.draw()})},scope.appInterface.slider={sliderStep:.1,slider_data:{slider_val:.925,options:{slide:function(){},start:function(){},stop:function(event,ui){scope.graphApi&&scope.graphApi.fnSetZoomScale(null,ui.value,!0,null,null)}}}},scope.appInterface.onZoom=function(zoomIn){zoomIn?scope.appInterface.slider.slider_data.slider_val+scope.appInterface.slider.sliderStep<=scope.appInterface.maxZoomVal&&(scope.appInterface.slider.slider_data.slider_val+=scope.appInterface.slider.sliderStep):scope.appInterface.slider.slider_data.slider_val-scope.appInterface.slider.sliderStep>=scope.appInterface.minZoomVal&&(scope.appInterface.slider.slider_data.slider_val-=scope.appInterface.slider.sliderStep),scope.graphApi&&scope.graphApi.fnSetZoomScale(null,scope.appInterface.slider.slider_data.slider_val,!0,null,null)},scope.appInterface.onResetZoomPan=function(){scope.graphApi&&(scope.appInterface.slider.slider_data.slider_val=scope.default_scale,scope.graphApi.fnCenterGraph(!0,!0,!1,.5))},scope.appInterface.redrawGraph=function(){ArrayUtils.each(scope.nodes,function(it){it.monitoringData=null}),ArrayUtils.each(scope.edges,function(it){it.monitoringData=null}),scope.graphApi.destroy(),scope.options.workflowDto=scope.data,scope.graphApi=global.WorkFlow.Interface.createGraph(scope.nodes,scope.edges,scope.options),scope.graphApi.fnCenterGraph(!0,!0,!1,.5)},scope.appInterface.centerGraph=function(){setTimeout(function(){scope.graphApi&&scope.graphApi.fnCenterGraph(!0,!0,!0,.5)},100)},scope.appInterface.addItem=function(item,absolutePosition,type){var rootEl=scope.graphApi.getRootElement().node(),boundingRect=rootEl.getBoundingClientRect();if(!(absolutePosition.x>boundingRect.left+boundingRect.width||absolutePosition.x<boundingRect.left||absolutePosition.y>boundingRect.top+boundingRect.height||absolutePosition.y<boundingRect.top)){var position={};position.x=(absolutePosition.x-boundingRect.left-scope.graphApi.state.translate[0])/scope.graphApi.state.scale,position.y=(absolutePosition.y-boundingRect.top-scope.graphApi.state.translate[1])/scope.graphApi.state.scale,"Executor"==type?global.WorkFlow.WorkflowBuilder.addExecutor(scope.data,null,item,position):"Gateway"==type&&global.WorkFlow.WorkflowBuilder.addGateway(scope.data,null,item,position),scope.onAfterAction(!1)}},scope.appInterface.deleteSelected=function(){scope.options.selectedItems&&(ArrayUtils.each(scope.options.selectedItems,function(item){"Edge"==item.type&&global.WorkFlow.WorkflowBuilder.removeEdge(scope.data,item.data)}),ArrayUtils.each(scope.options.selectedItems,function(item){"Node"==item.type&&global.WorkFlow.WorkflowBuilder.removeNode(scope.data,item.data)}),scope.onAfterAction(!1),scope.options.selectedItems.length=0)},scope.$on("$destroy",function(){scope.graphApi.destroy(),scope.watcher(),scope.monitorWatch&&scope.monitorWatch(),GlobalEvents.destroy("WorkflowExecuted")})}}}]),app.controller("WorkFlowCtrl",["$scope","$interval","WorkFlowService","GlobalEvents",function($scope,$interval,WorkFlowService,GlobalEvents){$scope.onWorkflowEdited=function(workflowName){workflowName!=$scope.vm.work_flow_name||$scope.isFullView||$scope.getWorkflow(function(){$scope.vm.appInterface.redrawGraph()})},GlobalEvents.on("WorkflowEdited",$scope.onWorkflowEdited),$scope.vm.appInterface={minZoomVal:.15,maxZoomVal:2,selectedItems:[]},$scope.vm.lastWorkflow=null,$scope.getWorkflow=function(onSuccess){var work_flow_name=$scope.vm.work_flow_name;""!=work_flow_name&&null!=work_flow_name&&WorkFlowService.Get($scope.vm.workflowCtx,work_flow_name,function(data){$scope.vm.work_flow_data=data,$scope.vm.lastWorkflow=angular.copy(data),$scope.vm.flow_status=null,onSuccess&&onSuccess()})},$scope.vm.isPreloadedData||($scope.vm.work_flow_data=null,$scope.getWorkflow()),$scope.$on("$destroy",function(){GlobalEvents.destroy("WorkflowEdited",$scope.onWorkflowEdited)})}]),app.controller("WorkflowFullViewCtrl",["$scope","WorkFlowService","GlobalMessagesService","$interval","GlobalEvents",function($scope,WorkFlowService,GlobalMessagesService,$interval){$scope.workflowSrc="scripts/angular.common/att_services/workflow/ng/workflow.html?mode=",$scope.isFullView=!0,$scope.workflowSrc+=$scope.vm.isMonitoring?"MONITOR":"DESIGNER",$scope.expanded=!0,ArrayUtils.each($scope.vm.availableExecutors,function(it){it.type=$scope.vm.getExecutorTypeUIType({executor_input:it})}),$scope.vm.workflowElements=[{type:DO.Objects.ParallelGateway,direction:DO.GatewayDirection.DIVERGING,name:"Parallel Split"},{type:DO.Objects.ParallelGateway,direction:DO.GatewayDirection.CONVERGING,name:"Synchronize"}],$scope.execProps=[{prop:"type",propName:"Type"},{prop:"name",propName:"Name"}],$scope.sortBy=$scope.execProps[0],$scope.expandCollapsePallet=function(){$scope.expanded=!$scope.expanded,$scope.vm.appInterface.centerGraph()},$scope.stopMonitoring=function(){$scope.interval&&($interval.cancel($scope.interval),$scope.interval=null)},$scope.startMonitoring=function(){$scope.stopMonitoring(),$scope.interval=$interval(function(){$scope.stopMonitoring(),WorkFlowService.GetStatus($scope.vm.workflowCtx,$scope.vm.last_work_flow_executor_id,function(data){$scope.vm.workflowMonitoringData=data,$scope.startMonitoring()})},1e3)},$scope.onChangeViewMode=function(mode){$scope.vm.currentViewMode!=mode&&$scope.vm.notSavedCallbackFn($scope.vm,function(){$scope.changeViewMode(mode)})},$scope.changeViewMode=function(mode){$scope.vm.currentViewMode=mode,$scope.vm.isMonitoring="MONITOR"==mode,$scope.workflowSrc="scripts/angular.common/att_services/workflow/ng/workflow.html?mode="+mode,$scope.vm.isMonitoring?$scope.startMonitoring():$scope.stopMonitoring()},$scope.vm.isMonitoring&&$scope.startMonitoring(),$scope.vm.workflowMonitoringData=null,$scope.onSaveWorkflow=function(showSuccess,onSuccess){WorkFlowService.Put($scope.vm.workflowCtx,$scope.vm.work_flow_data,!1,function(){$scope.vm.appInterface&&($scope.vm.appInterface.workflowIsDirty=!1),showSuccess&&GlobalMessagesService.setMessages(!0,consts.errorModes.success,!0,"Workflow Successfully Saved."),onSuccess&&onSuccess(),$scope.vm.lastWorkflow=angular.copy($scope.vm.work_flow_data)})},$scope.onDiscardWorkflow=function(){$scope.vm.confirmationDiscardCallbackFn($scope.vm,function(){$scope.vm.work_flow_data=angular.copy($scope.vm.lastWorkflow),$scope.vm.appInterface.redrawGraph()},function(){})},$scope.onValidateWorkflow=function(onValidCallback,onNotValidCallback){WorkFlowService.Validate($scope.vm.workflowCtx,$scope.vm.work_flow_name,$scope.vm.work_flow_data,function(data){{var rsp=data[DO.ValidateFlowResp.validation_summary],errors=ArrayUtils.map(rsp[DO.ValidationSummary.errors],function(it){return it[DO.ValidationEvent.message]});rsp[DO.ValidationSummary.warnings]}0==errors.length?onValidCallback?onValidCallback():GlobalMessagesService.setMessages(!0,consts.errorModes.success,!0,"Workflow '{0}' is valid".format([$scope.vm.work_flow_name])):errors.length>0&&(errors.length<=2?GlobalMessagesService.showErrorMessage(errors.join(consts.GlobalMessagesNewRowDelimeter)):GlobalMessagesService.showErrorMessage(errors.slice(0,2).join(consts.GlobalMessagesNewRowDelimeter),errors),onNotValidCallback&&onNotValidCallback())})},$scope.canRun=function(){return $scope.vm.canRunWorkflow?$scope.vm.canRunWorkflow($scope.vm.work_flow_name):!0},$scope.onRun=function(){$scope.vm.isMonitoring?$scope.doRun():$scope.onValidateWorkflow($scope.doRun)},$scope.doRun=function(){$scope.stopMonitoring(),$scope.onSaveWorkflow(!1,function(){WorkFlowService.Execute($scope.vm.workflowCtx,$scope.vm.work_flow_name,function(data){$scope.vm.last_work_flow_executor_id=data[DO.ExecutionExecuteResp.executor_id],$scope.vm.workflowMonitoringData=null,$scope.vm.appInterface.redrawGraph(),$scope.vm.isMonitoring||$scope.onChangeViewMode("MONITOR"),setTimeout(function(){$scope.startMonitoring()},0)})})},$scope.onExecDragStop=function(event,eventObj){$scope.onDragStop(this.item,event,eventObj,"Executor")},$scope.onWorkflowElementsDragStop=function(event,eventObj){$scope.onDragStop(this.item,event,eventObj,"Gateway")},$scope.onDragStop=function(item,event,eventObj,type){var position={x:event.pageX,y:event.pageY};$scope.vm.appInterface.addItem(item,position,type)},$scope.onDeleteSelected=function(){$scope.vm.appInterface.deleteSelected()},$scope.$on("$destroy",function(){$scope.stopMonitoring()})}]),app.factory("WorkFlowService",["InvokerService","GlobalEvents","modalService",function(InvokerService,GlobalEvents,modalService){var WorkFlowService={Get:function(ctx,workflow_name,onSuccess){ctx.GetWorkFlow.params.name=workflow_name,InvokerService.invokeServiceMethod(ctx,"GetWorkFlow",onSuccess)},List:function(ctx,onSuccess){InvokerService.invokeServiceMethod(ctx,"GetWorkFlowList",onSuccess)},Delete:function(ctx,workflow_name,onSuccess){ctx.DeleteWorkFlow.params.name=workflow_name,InvokerService.invokeServiceMethod(ctx,"DeleteWorkFlow",onSuccess)},GetStatus:function(ctx,executor_id,onSuccess){0>=executor_id||null==executor_id||(ctx.GetWorkflowStatus.params.executor_id=executor_id,InvokerService.invokeServiceMethod(ctx,"GetWorkflowStatus",onSuccess))},Put:function(ctx,workflow,is_default_workflow,onSuccess){ctx.PutWorkFlow.params.postData={workflow:workflow,is_default_workflow:is_default_workflow},ctx.PutWorkFlow.params.name=is_default_workflow?"Default Workflow":workflow[DO.FlowDto.name],InvokerService.invokeServiceMethod(ctx,"PutWorkFlow",function(successData){GlobalEvents.trigger("WorkflowEdited",workflow[DO.FlowDto.name]),onSuccess&&onSuccess(successData)})},Stop:function(ctx,executor_id,reason,timeout,onSuccess,onError){ctx.StopWorkFlow.params.executor_id=executor_id,ctx.StopWorkFlow.params.reason=reason,ctx.StopWorkFlow.params.timeout=timeout,InvokerService.invokeServiceMethod(ctx,"StopWorkFlow",onSuccess,onError)},Abort:function(ctx,executor_id,reason,onSuccess,onError){ctx.AbortWorkFlow.params.executor_id=executor_id,ctx.AbortWorkFlow.params.reason=reason,InvokerService.invokeServiceMethod(ctx,"AbortWorkFlow",onSuccess,onError)},Pause:function(ctx,executor_id,reason,onSuccess,onError){ctx.PauseExecutor.params.executor_id=executor_id,ctx.PauseExecutor.params.reason=reason,InvokerService.invokeServiceMethod(ctx,"PauseExecutor",onSuccess,onError)},Resume:function(ctx,executor_id,reason,onSuccess,onError){ctx.ResumeExecutor.params.executor_id=executor_id,ctx.ResumeExecutor.params.reason=reason,InvokerService.invokeServiceMethod(ctx,"ResumeExecutor",onSuccess,onError)},ListWorkflowExecutors:function(ctx,workflow_name,onSuccess,onError){ctx.ListWorkflowExecutors.params.name=workflow_name,InvokerService.invokeServiceMethod(ctx,"ListWorkflowExecutors",onSuccess,onError)},Execute:function(ctx,workflow_name,onSuccess,onError){ctx.ExecuteWorkFlow.params.postData[DO.WorkflowExecutorDto.workflow_name]=workflow_name,ctx.ExecuteWorkFlow.params.postData[DO.WorkflowExecutorDto.name]=workflow_name,ctx.ExecuteWorkFlow.params.executor_dto_name=workflow_name,InvokerService.invokeServiceMethod(ctx,"ExecuteWorkFlow",onSuccess,onError)},Validate:function(ctx,workflow_name,payload,onSuccess,onError){ctx.ValidateWorkFlow.params.putData=payload,ctx.ValidateWorkFlow.params.name=workflow_name,InvokerService.invokeServiceMethod(ctx,"ValidateWorkFlow",onSuccess,onError)},openWorkflowHistoryView:function(model,execId,onFinish){WorkFlowService.GetStatus(model.workflowCtx,execId,function(data){model.isPreloadedData=!0,model.work_flow_data=data[DO.FlowExecutorDetailedStatus.light_flow_definition],model.workflowMonitoringData=data,model.work_flow_name=model.work_flow_data[DO.FlowDto.name],model.work_flow_id=model.work_flow_data[DO.FlowDto.name],modalService.showModal({contentTemplate:"scripts/angular.common/att_services/workflow/ng/workflow.html",headerText:model.work_flow_name,resizable:!1,hasOk:!1,openInFS:!0,closeButtonText:"Close",model:model},{windowClass:"defaultDialogSize2"}).finally(function(){onFinish&&onFinish()})})}};return WorkFlowService}])}(this);