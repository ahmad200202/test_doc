!function(global){global.WorkFlow=global.WorkFlow||{},global.WorkFlow.WorkflowBuilder={},global.WorkFlow.WorkflowBuilder.addNode=function(){},global.WorkFlow.WorkflowBuilder.removeEdge=function(flow,edge){var srcNodeData=edge.source,srcNodeOutgoing=srcNodeData.node_data[DO.FlowNode.outgoing],outPortTemp=ArrayUtils.find(srcNodeData.node_data[DO.FlowNode.outgoing],function(it){return it.directive.target_node_id==edge.target.id&&it.$type==edge.type}),outPortIndex=srcNodeData.node_data[DO.FlowNode.outgoing].indexOf(outPortTemp);if(-1!=outPortIndex){var outPort=srcNodeOutgoing[outPortIndex],inPortId=outPort[DO.OutPort.directive][DO.SequenceFlow.target_port_id],indexOfConnectedIncoming=ArrayUtils.indexOfByProperty(flow.flow_nodes[edge.target.id][DO.FlowNode.incoming],DO.InPort.id,inPortId);indexOfConnectedIncoming>=0&&flow.flow_nodes[edge.target.id][DO.FlowNode.incoming].splice(indexOfConnectedIncoming,1),flow.flow_nodes[edge.source.id][DO.FlowNode.outgoing].splice(outPortIndex,1)}},global.WorkFlow.WorkflowBuilder.addExecutor=function(flow,addToNode,executor,position){try{var newNode=Utils.mergeValuedObjToDefaultValuedObj({},DO.Objects.ExecutionActivity);newNode[DO.ExecutionActivity.executor_input]=executor;var id=Utils.generateNewName(executor[DO.ExecutorDto.name],function(name){return null!=flow.flow_nodes[name]},"_",1);if(newNode[DO.ExecutionActivity.id]=id,newNode[DO.ExecutionActivity.display_name]=executor[DO.ExecutorDto.name],null!=position&&(newNode[DO.ExecutionActivity.visuals][DO.BaseVisuals.x]=position.x,newNode[DO.ExecutionActivity.visuals][DO.BaseVisuals.y]=position.y),flow.flow_nodes[id]=newNode,null!=addToNode){if("ParallelGatewayDIVERGING"!=addToNode.$type){var addToNodeOutgoing=flow.flow_nodes[addToNode.id].outgoing.splice(0,1);Array.prototype.push.apply(newNode[DO.ExecutionActivity.outgoing],addToNodeOutgoing)}global.WorkFlow.WorkflowBuilder.connectNodes(addToNode.node_data,newNode,DO.Objects.OutPort)}}catch(e){console.log("global.WorkFlow.WorkflowBuilder.addExecutor:   \n"+e)}},global.WorkFlow.WorkflowBuilder.addGateway=function(flow,addToNode,gatewayDef,position){var newGateway=Utils.mergeValuedObjToDefaultValuedObj({},gatewayDef.type);if(newGateway[DO.ParallelGateway.direction]=gatewayDef.direction,newGateway[DO.ParallelGateway.id]="gateway"+(new Date).getMilliseconds(),gatewayDef.direction==DO.GatewayDirection.DIVERGING&&(newGateway[DO.ParallelGateway.display_name]="Parallel Split"),gatewayDef.direction==DO.GatewayDirection.CONVERGING&&(newGateway[DO.ParallelGateway.display_name]="Synchronize"),null!=position&&(newGateway[DO.ExecutionActivity.visuals][DO.BaseVisuals.x]=position.x,newGateway[DO.ExecutionActivity.visuals][DO.BaseVisuals.y]=position.y),flow.flow_nodes[newGateway[DO.ParallelGateway.id]]=newGateway,null!=addToNode){var addToNodeOutgoing=flow.flow_nodes[addToNode.id].outgoing.splice(0,1);Array.prototype.push.apply(newGateway[DO.ExecutionActivity.outgoing],addToNodeOutgoing),global.WorkFlow.WorkflowBuilder.connectNodes(addToNode.node_data,newGateway,DO.Objects.OutPort)}},global.WorkFlow.WorkflowBuilder.removeNode=function(flow,node){try{ObjectUtils.forOwn(flow.flow_nodes,function(nodeId,flowNode){var outPortIndex=ArrayUtils.indexOfByNestedProperty(flowNode.outgoing,"directive.target_node_id",node.id);-1!=outPortIndex&&flowNode.outgoing.splice(outPortIndex,1)}),ArrayUtils.each(node.node_data[DO.FlowNode.outgoing],function(nOutgoing){var connectedNode=flow.flow_nodes[nOutgoing[DO.OutPort.directive][DO.SequenceFlow.target_node_id]],indexOfConnectedIncoming=ArrayUtils.indexOfByProperty(connectedNode[DO.FlowNode.incoming],DO.InPort.id,nOutgoing[DO.OutPort.directive][DO.SequenceFlow.target_port_id]);indexOfConnectedIncoming>=0&&connectedNode[DO.FlowNode.incoming].splice(indexOfConnectedIncoming,1)}),delete flow.flow_nodes[node.id]}catch(e){console.log("global.WorkFlow.WorkflowBuilder.removeNode:   \n"+e)}},global.WorkFlow.WorkflowBuilder.connectNodes=function(sourceNode,targetNode,type){var alreadyConnected=ArrayUtils.find(sourceNode[DO.FlowNode.outgoing],function(it){return it.$type==type&&it.directive.target_node_id==targetNode.id});if(null==alreadyConnected&&global.WorkFlow.WorkflowBuilder.isLinkValid(sourceNode,targetNode)){var inPort=global.WorkFlow.WorkflowBuilder.createInPort(targetNode[DO.FlowNode.incoming]),outPort=global.WorkFlow.WorkflowBuilder.createOutPort(sourceNode[DO.FlowNode.outgoing],targetNode[DO.FlowNode.id],inPort[DO.InPort.id],type);targetNode[DO.FlowNode.incoming].push(inPort),sourceNode[DO.FlowNode.outgoing].push(outPort)}},global.WorkFlow.WorkflowBuilder.createOutPort=function(outgoing,nodeId,inPortId,type){var outPortType,outPortName;type==DO.Objects.OutPort?(outPortType=DO.Objects.OutPort,outPortName=DO.FlowObjectNames.OUTPORT):type==DO.Objects.ErrorOutPort&&(outPortType=DO.Objects.ErrorOutPort,outPortName=DO.FlowObjectNames.ERRORPORT);var outPort=Utils.mergeValuedObjToDefaultValuedObj({},outPortType),outPortId=Utils.generateNewName(outPortName.toLowerCase(),function(name){return ArrayUtils.indexOfByProperty(outgoing,DO.OutPort.id,name)>=0},"_",1);return outPort.directive=Utils.createNewDefaultObject(DO.Objects.SequenceFlow),outPort[DO.OutPort.id]=outPortId,outPort.directive[DO.SequenceFlow.target_port_id]=inPortId,outPort.directive[DO.SequenceFlow.target_node_id]=nodeId,outPort},global.WorkFlow.WorkflowBuilder.createInPort=function(incoming){var inPort=Utils.mergeValuedObjToDefaultValuedObj({},DO.Objects.InPort),inPortId=Utils.generateNewName(DO.FlowObjectNames.INPORT.toLowerCase(),function(name){return ArrayUtils.indexOfByProperty(incoming,DO.InPort.id,name)>=0},"_",1);return inPort[DO.InPort.id]=inPortId,inPort[DO.InPort.name]=inPortId,inPort},global.WorkFlow.WorkflowBuilder.updateVisuals=function(nodes){ArrayUtils.each(nodes,function(node){node.node_data[DO.FlowNode.visuals][DO.BaseVisuals.x]=node.px,node.node_data[DO.FlowNode.visuals][DO.BaseVisuals.y]=node.py})},global.WorkFlow.WorkflowBuilder.getDefaultFlow=function(){var defaultWorkflow={$type:"FlowDto",flow_nodes:{start:{$type:"StartNode",incoming:[],outgoing:[],display_name:"Start",id:"start",visuals:{x:2,y:2}},end:{$type:"EndNode",incoming:[],outgoing:[],display_name:"End",error_policy:{termination_mode:DO.TerminationMode.STOP_AFTER_RUNNING_ACTIVITIES},id:"end",visuals:{x:800,y:2}}},flow_settings:{},name:""};return ObjectUtils.deepClone(defaultWorkflow)},global.WorkFlow.WorkflowBuilder.isLinkValid=function(srcNode,trgNode){var res=!0;return res=res&&global.WorkFlow.WorkflowBuilder.isInPortAllowed(trgNode),res&&(res=res&&srcNode[DO.FlowNode.id]!=trgNode[DO.FlowNode.id]),res},global.WorkFlow.WorkflowBuilder.isInPortAllowed=function(node){return node[DO.FlowNode.$type]==DO.Objects.StartNode?!1:!0},global.WorkFlow.WorkflowBuilder.Constants={OutportId:"outport"}}(this);