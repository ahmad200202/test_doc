!function(global){"use strict";function handleLinearGradientForNodeProgress(nodeEl,nodeData,graphId){var id=nodeData.id.replaceAll(" ","_"),linearGradientEl=d3.select(nodeEl).append("linearGradient").attr("id","graph_"+graphId+"grad_"+id).attr("x1","0%").attr("x2","100%").attr("y1","0%").attr("y2","0%");linearGradientEl.append("stop").attr("class","Progress").attr("offset","0%").style("stop-color","#ffffff"),linearGradientEl.append("stop").attr("class","backgroundStop").attr("offset","0%").style("stop-color","#ffffff"),d3.select(nodeEl).select(".NodeProgressContainer").attr("fill","url(#graph_"+graphId+"grad_"+id+")")}function getMarkerHorizontal(targetX,targetY){var theta=Math.atan2(dyZero,dxOne),dtxs=targetX-6*Math.cos(theta),dtys=targetY-6*Math.sin(theta),d90Theta=deg90-theta;return" M "+dtxs+", "+dtys+" l"+(baseWidthMarker*Math.cos(d90Theta)-baseLengthMarker*Math.cos(theta))+", "+(-baseWidthMarker*Math.sin(d90Theta)-baseLengthMarker*Math.sin(theta))+" L"+(dtxs-baseWidthMarker*Math.cos(d90Theta)-baseLengthMarker*Math.cos(theta))+", "+(dtys+baseWidthMarker*Math.sin(d90Theta)-baseLengthMarker*Math.sin(theta))+"z"}function getMarkerMoving(sourceX,sourceY,targetX,targetY){var dx=targetX-sourceX,dy=targetY-sourceY,theta=Math.atan2(dy,dx),dtxs=targetX-6*Math.cos(theta),dtys=targetY-6*Math.sin(theta),d90Theta=deg90-theta;return" M "+dtxs+", "+dtys+" l"+(baseWidthMarker*Math.cos(d90Theta)-baseLengthMarker*Math.cos(theta))+", "+(-baseWidthMarker*Math.sin(d90Theta)-baseLengthMarker*Math.sin(theta))+" L"+(dtxs-baseWidthMarker*Math.cos(d90Theta)-baseLengthMarker*Math.cos(theta))+", "+(dtys+baseWidthMarker*Math.sin(d90Theta)-baseLengthMarker*Math.sin(theta))+"z"}global.WorkFlow=global.WorkFlow||{},global.WorkFlow.shapes={},global.WorkFlow.shapes.defsLoader=null,global.WorkFlow.shapes.defsPostFix="_defs";var gradients=["linearGradientActivity","linearGradientEvent","linearGradientGateway","FlowNode_defs_LinearGradient"];global.WorkFlow.shapes.WorkflowNode={draw:function(node,nodeEl,graphInstance){var nodeShapeId=node.shape_id,hubHtml=global.WorkFlow.shapes.defsLoader.getById(nodeShapeId+global.WorkFlow.shapes.defsPostFix);hubHtml||(hubHtml=global.WorkFlow.shapes.defsLoader.getById("ExecutionActivity"+global.WorkFlow.shapes.defsPostFix)),graphInstance.firstRender&&!graphInstance.globalGradientsAdded&&(ArrayUtils.each(gradients,function(it){var grad=global.WorkFlow.shapes.defsLoader.getById(it);$(nodeEl).parents(".graph").append(grad)}),graphInstance.globalGradientsAdded=!0),$(nodeEl).append(hubHtml);var text=d3.select(nodeEl).append("text").attr("text-anchor","middle").attr("class","nodeText");text.text(node.name),global.AttuGraph.Utils.setToolTipToNode(node.tooltip,nodeEl),"FlowNode"!=nodeShapeId?text.attr("y","55"):text.attr("y","35"),handleLinearGradientForNodeProgress(nodeEl,node,graphInstance.id),global.WorkFlow.events.onAfterDrawNode&&global.WorkFlow.events.onAfterDrawNode(node,nodeEl,graphInstance)},getBBox:function(node,el){var nodeShapeId=node.shape_id,nodeEL=d3.select(el).select("#"+nodeShapeId+global.WorkFlow.shapes.defsPostFix).node();nodeEL||(nodeEL=d3.select(el).select("#ExecutionActivity"+global.WorkFlow.shapes.defsPostFix).node());var bbox=nodeEL.getBBox();return"FlowNode"!=nodeShapeId&&d3.select(el).select(".nodeText").attr("x",bbox.width/2),bbox},size:function(){},update:function(node,nodeEl,graphInstance){global.WorkFlow.Monitor.updateNode(node,nodeEl,graphInstance)}};{var baseWidthMarker=3.5,baseLengthMarker=10,dyZero=0,dxOne=1,deg90=Math.PI/2,d3SvgDiagonal=d3.svg.diagonal().source(function(d){return{x:d.source.y,y:d.source.x}}).target(function(d){return{x:d.target.y,y:d.target.x}}).projection(function(d){return[d.y,d.x]});d3.svg.diagonal().projection(function(d){return[d.x,d.y]})}global.WorkFlow.shapes.getLinkPathDirectWithMovingArrow=function(sourceX,sourceY,targetX,targetY){var directArrow="M"+sourceX+","+sourceY+"L"+targetX+","+targetY,addedMarker=getMarkerMoving(sourceX,sourceY,targetX,targetY);return directArrow+addedMarker},global.WorkFlow.shapes.getArrowWithHeadPath=function(sourceX,sourceY,targetX,targetY){var diagonalArrow=d3SvgDiagonal({source:{x:sourceX,y:sourceY},target:{x:targetX,y:targetY+2}}),addedMarker=getMarkerHorizontal(targetX+5,targetY+2);return diagonalArrow+addedMarker},global.WorkFlow.shapes.getErrorPath=function(sourceX,sourceY,targetX,targetY){return global.WorkFlow.shapes.getArrowWithHeadPath(sourceX,sourceY,targetX,targetY)}}(this);