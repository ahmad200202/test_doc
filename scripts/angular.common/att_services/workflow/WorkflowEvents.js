!function(global){"use strict";function attachPorts(nodeEl,nodeData){var allowedPorts=getAllowedPortsForType(nodeData);if(0!=allowedPorts.length){var bbox=nodeData.shape.getBBox(nodeData,nodeEl),portsGroup=d3.select(nodeEl).append("g").attr("class","PortsGroup").style("display","none");allowedPorts.indexOf("OutPort")>=0&&portsGroup.append("circle").attr("r","5").attr("cx",bbox.width+2.5).attr("cy",bbox.height/2).attr("class","Port OutPort").data({cx:bbox.width+2.5,cy:bbox.height/2}),allowedPorts.indexOf("ErrorOutPort")>=0&&portsGroup.append("circle").attr("r","5").attr("cx",bbox.width/2).attr("cy",bbox.height+2.5).attr("class","Port ErrorOutPort")}}function attachNodeEvents(node,nodeEl,graphInstance){d3.select(nodeEl).on("mouseenter",function(){graphInstance.state.isInDragState?d3.select(this).classed("Attachable",!0):d3.select(this).select(".PortsGroup").style("display","block")}),d3.select(nodeEl).on("mouseleave",function(){d3.select(this).select(".PortsGroup").style("display","none"),d3.select(this).classed("Attachable",!1)}),d3.select(nodeEl).on("mouseup",function(){d3.select(this).classed("Attachable",!1)})}function getAllowedPortsForType(node){var $type=node.$type,ports=[];return"EndNode"!=$type&&ports.push("OutPort"),node.has_error_port&&1==node.has_error_port?ports.push("ErrorOutPort"):($type.indexOf("Activity")>=0||node.shape_id.indexOf("CONVERGING")>=0)&&ports.push("ErrorOutPort"),ports}global.WorkFlow=global.WorkFlow||{},global.WorkFlow.events={},global.WorkFlow.events.onAfterDrawNode=function(data,element,graphInstance){function dragStart(dragEventData,isForError,graphInstance){graphInstance.state.isInDragState=!0;var classes="edge visible";isForError&&(classes="edge visible Error");var dt=$(this).parents(".node")[0].__data__;d3.event.sourceEvent.stopPropagation(),dragEventData.tempLink=d3.select(rootEl).select(".graph").append("path").attr("class",classes).attr("stroke-dasharray","5,5");var x=dt.bbox.width+2.5,y=dt.bbox.height/2;isForError&&(x=dt.bbox.width/2-2.5,y=dt.bbox.height+2.5),dragEventData.source={x:global.AttuGraph.Utils.nodePosition.x(dt)+x,y:global.AttuGraph.Utils.nodePosition.y(dt)+y},dragEventData.target={x:global.AttuGraph.Utils.nodePosition.x(dt)+x,y:global.AttuGraph.Utils.nodePosition.y(dt)+y}}function onDrag(dt,dragEventData){var coordinates=d3.mouse(d3RootEl);dragEventData.target.x=coordinates[0],dragEventData.target.y=coordinates[1],dragEventData.tempLink.attr("d",global.WorkFlow.shapes.getArrowWithHeadPath(dragEventData.source.x,dragEventData.source.y,dragEventData.target.x,dragEventData.target.y))}function dragEnd(srcNode,dragEventData,isForError,graphInstance){graphInstance.state.isInDragState=!1,$(dragEventData.tempLink.node()).remove();var targetNode=null;try{targetNode=d3.select($(d3.event.sourceEvent.target).parents(".node")[0]).data()[0]}catch(e){targetNode=null}if(targetNode){var type=DO.Objects.OutPort;isForError&&(type=DO.Objects.ErrorOutPort),global.WorkFlow.WorkflowBuilder.connectNodes(srcNode.node_data,targetNode.node_data,type),graphInstance.instanceOptions.onAfterGraphAction()}}if(!graphInstance.instanceOptions||graphInstance.instanceOptions.dynamic){{Utils.detectIE()}attachPorts(element,data),attachNodeEvents(data,element,graphInstance);{var dragEventData={},rootEl=graphInstance.getRootElement().node(),d3RootEl=d3.select(rootEl).select(".graph").node(),port_drag=d3.behavior.drag().on("dragstart",function(){dragEventData={},dragStart.call(this,dragEventData,!1,graphInstance)}).on("drag",function(dt){onDrag.call(this,dt,dragEventData)}).on("dragend",function(srcNode){dragEnd.call(this,srcNode,dragEventData,!1,graphInstance)}),error_port_drag=d3.behavior.drag().on("dragstart",function(){dragEventData={},dragStart.call(this,dragEventData,!0,graphInstance)}).on("drag",function(dt){onDrag.call(this,dt,dragEventData)}).on("dragend",function(srcNode){dragEnd.call(this,srcNode,dragEventData,!0,graphInstance)});d3.select(element).select(".OutPort").call(port_drag)}d3.select(element).select(".ErrorOutPort").call(error_port_drag)}}}(this);