!function(angular){"use strict";var attServicesCommon=angular.module("attServices.common",[]);attServicesCommon.factory("InvokerService",["$injector",function($injector){var InvokerService={invokeServiceMethod:function(ctx,methodName,successCallback,errorCallback){var factoryName=ctx[methodName].factory,factoryMethod=ctx[methodName].method,params=ctx[methodName].params,methodParams=[],requestMeta=requestModelsMap[factoryMethod+"Req"];if(null!=requestMeta){if("PUT"==requestMeta.RequestType||"POST"==requestMeta.RequestType){var requestDataName=requestMeta.RequestType.toLowerCase()+"Data";void 0!==params[requestDataName]&&methodParams.push(params[requestDataName])}ArrayUtils.each(requestMeta.qsParams,function(key){methodParams.push(params[key])})}else ObjectUtils.forOwn(params,function(key,value){methodParams.push(value)});if(methodParams.push(successCallback,errorCallback),ObjectUtils.isKind(factoryMethod,"String")){var injectedFactory=$injector.get(factoryName);null!=injectedFactory[factoryMethod]&&injectedFactory[factoryMethod].apply(this,methodParams)}else ObjectUtils.isKind(factoryMethod,"Function")&&factoryMethod.apply(this,methodParams)}};return InvokerService}]),attServicesCommon.factory("ServicesCommonHandlers",["AclService",function(AclService){var ServicesCommonHandlers={OnServicesStart:function(authorizationSupported){authorizationSupported!==!1&&AclService.ApplyUserRoleOverrides()}};return ServicesCommonHandlers}]);var AttServicesConstants={};window.AttServicesConstants=AttServicesConstants}(angular);