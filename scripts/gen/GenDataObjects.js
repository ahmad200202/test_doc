//
// Copyright (c) 2019 Attunity, Ltd.  All rights reserved.
//
// NOTICE:  All information contained herein is, and remains the property 
// of Attunity Ltd.  The intellectual and technical concepts contained
// herein are proprietary to Attunity Ltd and may be covered by U.S. and
// Foreign Patents, patents in process, and are protected by trade secret
// or copyright law. Dissemination of this information or reproduction of
// this material is strictly forbidden unless prior written permission is 
// obtained from Attunity Ltd.
//
// NOTE: GENERATED FILE - DO NOT EDIT THIS FILE (Definition file: compose_def.gen)
//


if (!window.DO) {
	window.DO = {};
}
DO.UIComponentTypes = {
	NONE:"NONE",
	COMPONENT:"COMPONENT",
	TEXT:"TEXT",
	PASSWORD:"PASSWORD",
	CHECKBOX:"CHECKBOX",
	TEXTAREA:"TEXTAREA",
	NUMBER:"NUMBER",
	RADIO:"RADIO",
	SELECT:"SELECT",
	TEXT_BROWSE:"TEXT_BROWSE",
	TEXT_NUMBER:"TEXT_NUMBER",
	SELECT_WRAPPER:"SELECT_WRAPPER",
	LABEL:"LABEL",
	BINARY:"BINARY",
	DOWNLOAD_CONTAINER:"DOWNLOAD_CONTAINER",
	UPLOAD_CONTAINER:"UPLOAD_CONTAINER",
	NUMBER_WITHOUT_LABLE:"NUMBER_WITHOUT_LABLE",
	SLIDER_NUMBER:"SLIDER_NUMBER",
	ERROR:"ERROR"
};



DO.UIComponentTypes_values = {
	NONE:0,
	COMPONENT:1,
	TEXT:2,
	PASSWORD:3,
	CHECKBOX:4,
	TEXTAREA:5,
	NUMBER:6,
	RADIO:7,
	SELECT:8,
	TEXT_BROWSE:9,
	TEXT_NUMBER:10,
	SELECT_WRAPPER:11,
	LABEL:12,
	BINARY:13,
	DOWNLOAD_CONTAINER:14,
	UPLOAD_CONTAINER:15,
	NUMBER_WITHOUT_LABLE:16,
	SLIDER_NUMBER:17,
	ERROR:18
};

DO.UIComponentTypes_displayNames = {
	NONE:"NONE",
	COMPONENT:"COMPONENT",
	TEXT:"TEXT",
	PASSWORD:"PASSWORD",
	CHECKBOX:"CHECKBOX",
	TEXTAREA:"TEXTAREA",
	NUMBER:"NUMBER",
	RADIO:"RADIO",
	SELECT:"SELECT",
	TEXT_BROWSE:"TEXT_BROWSE",
	TEXT_NUMBER:"TEXT_NUMBER",
	SELECT_WRAPPER:"SELECT_WRAPPER",
	LABEL:"LABEL",
	BINARY:"BINARY",
	DOWNLOAD_CONTAINER:"DOWNLOAD_CONTAINER",
	UPLOAD_CONTAINER:"UPLOAD_CONTAINER",
	NUMBER_WITHOUT_LABLE:"NUMBER_WITHOUT_LABLE",
	SLIDER_NUMBER:"SLIDER_NUMBER",
	ERROR:"ERROR"
};

DO.UILayoutTypes = {
	NONE:"NONE",
	VERTICAL:"VERTICAL",
	VERTICAL_INDENT:"VERTICAL_INDENT",
	BOLD:"BOLD"
};



DO.UILayoutTypes_values = {
	NONE:0,
	VERTICAL:1,
	VERTICAL_INDENT:2,
	BOLD:3
};

DO.UILayoutTypes_displayNames = {
	NONE:"NONE",
	VERTICAL:"VERTICAL",
	VERTICAL_INDENT:"VERTICAL_INDENT",
	BOLD:"BOLD"
};

DO.ApiAuthTypes = {
	NONE:"NONE",
	BASIC:"BASIC",
	COOKIE:"COOKIE"
};



DO.ApiAuthTypes_values = {
	NONE:0,
	BASIC:1,
	COOKIE:2
};

DO.ApiAuthTypes_displayNames = {
	NONE:"NONE",
	BASIC:"BASIC",
	COOKIE:"COOKIE"
};

DO.AttGenDefTypeIds = {
	AttributeBase:"AttributeBase",
	AttributeAttribute:"AttributeAttribute",
	SupportDotsInKeysAttribute:"SupportDotsInKeysAttribute",
	MsgInitAttribute:"MsgInitAttribute",
	PolymorphicAttribute:"PolymorphicAttribute",
	GuiAttribute:"GuiAttribute",
	CsharptypeAttribute:"CsharptypeAttribute",
	SerializationAttribute:"SerializationAttribute",
	ValidationAttribute:"ValidationAttribute",
	MsgValidationAttribute:"MsgValidationAttribute",
	FlagsAttribute:"FlagsAttribute",
	LayeredSettingsAttribute:"LayeredSettingsAttribute",
	GenFieldNameConstantsAttribute:"GenFieldNameConstantsAttribute",
	EncryptAttribute:"EncryptAttribute",
	JavaExposedAttribute:"JavaExposedAttribute",
	VersionAttribute:"VersionAttribute",
	DocAttribute:"DocAttribute",
	ProductInfoAttribute:"ProductInfoAttribute",
	GenerationSkipAttribute:"GenerationSkipAttribute"
};



DO.AttGenDefTypeIds_values = {
	AttributeBase:76001,
	AttributeAttribute:76002,
	SupportDotsInKeysAttribute:76003,
	MsgInitAttribute:76004,
	PolymorphicAttribute:76005,
	GuiAttribute:76006,
	CsharptypeAttribute:76007,
	SerializationAttribute:76008,
	ValidationAttribute:76009,
	MsgValidationAttribute:76010,
	FlagsAttribute:76011,
	LayeredSettingsAttribute:76012,
	GenFieldNameConstantsAttribute:76013,
	EncryptAttribute:76014,
	JavaExposedAttribute:76015,
	VersionAttribute:76016,
	DocAttribute:76017,
	ProductInfoAttribute:76018,
	GenerationSkipAttribute:76019
};

DO.AttGenDefTypeIds_displayNames = {
	AttributeBase:"AttributeBase",
	AttributeAttribute:"AttributeAttribute",
	SupportDotsInKeysAttribute:"SupportDotsInKeysAttribute",
	MsgInitAttribute:"MsgInitAttribute",
	PolymorphicAttribute:"PolymorphicAttribute",
	GuiAttribute:"GuiAttribute",
	CsharptypeAttribute:"CsharptypeAttribute",
	SerializationAttribute:"SerializationAttribute",
	ValidationAttribute:"ValidationAttribute",
	MsgValidationAttribute:"MsgValidationAttribute",
	FlagsAttribute:"FlagsAttribute",
	LayeredSettingsAttribute:"LayeredSettingsAttribute",
	GenFieldNameConstantsAttribute:"GenFieldNameConstantsAttribute",
	EncryptAttribute:"EncryptAttribute",
	JavaExposedAttribute:"JavaExposedAttribute",
	VersionAttribute:"VersionAttribute",
	DocAttribute:"DocAttribute",
	ProductInfoAttribute:"ProductInfoAttribute",
	GenerationSkipAttribute:"GenerationSkipAttribute"
};

DO.LogLevel = {
	DEFAULT:"DEFAULT",
	ERROR:"ERROR",
	WARNING:"WARNING",
	INFO:"INFO",
	DEBUG:"DEBUG",
	DETAILED_DEBUG:"DETAILED_DEBUG"
};



DO.LogLevel_values = {
	DEFAULT:0,
	ERROR:1,
	WARNING:3,
	INFO:7,
	DEBUG:31,
	DETAILED_DEBUG:63
};

DO.LogLevel_displayNames = {
	DEFAULT:"DEFAULT",
	ERROR:"ERROR",
	WARNING:"WARNING",
	INFO:"INFO",
	DEBUG:"DEBUG",
	DETAILED_DEBUG:"DETAILED_DEBUG"
};

DO.http_method = {
	GET:"GET",
	PUT:"PUT",
	POST:"POST",
	DELETE:"DELETE",
	PATCH:"PATCH"
};



DO.http_method_values = {
	GET:0,
	PUT:1,
	POST:2,
	DELETE:3,
	PATCH:4
};

DO.http_method_displayNames = {
	GET:"GET",
	PUT:"PUT",
	POST:"POST",
	DELETE:"DELETE",
	PATCH:"PATCH"
};

DO.PayLoadFormat = {
	JSON:"JSON",
	STREAM:"STREAM"
};



DO.PayLoadFormat_values = {
	JSON:1,
	STREAM:2
};

DO.PayLoadFormat_displayNames = {
	JSON:"JSON",
	STREAM:"STREAM"
};

DO.AuthUserRoleType = {
	NONE:"NONE",
	VIEWER:"VIEWER",
	OPERATOR:"OPERATOR",
	DESIGNER:"DESIGNER",
	ADMIN:"ADMIN"
};



DO.AuthUserRoleType_values = {
	NONE:0,
	VIEWER:1,
	OPERATOR:2,
	DESIGNER:3,
	ADMIN:4
};

DO.AuthUserRoleType_displayNames = {
	NONE:"NONE",
	VIEWER:"VIEWER",
	OPERATOR:"OPERATOR",
	DESIGNER:"DESIGNER",
	ADMIN:"ADMIN"
};

DO.AuthenticationMethod = {
	FORM:"FORM",
	SSO:"SSO",
	SAML:"SAML"
};



DO.AuthenticationMethod_values = {
	FORM:0,
	SSO:1,
	SAML:2
};

DO.AuthenticationMethod_displayNames = {
	FORM:"FORM",
	SSO:"SSO",
	SAML:"SAML"
};

DO.XsrfHandling = {
	REQUIRE_HEADER:"REQUIRE_HEADER",
	ALLOW_TEMPORARY_TOKEN:"ALLOW_TEMPORARY_TOKEN",
	WITHOUT_TOKEN:"WITHOUT_TOKEN"
};



DO.XsrfHandling_values = {
	REQUIRE_HEADER:0,
	ALLOW_TEMPORARY_TOKEN:1,
	WITHOUT_TOKEN:2
};

DO.XsrfHandling_displayNames = {
	REQUIRE_HEADER:"REQUIRE_HEADER",
	ALLOW_TEMPORARY_TOKEN:"ALLOW_TEMPORARY_TOKEN",
	WITHOUT_TOKEN:"WITHOUT_TOKEN"
};

DO.RestDefTypeIds = {
	DTObject:"DTObject",
	DTObjectWithId:"DTObjectWithId",
	RepositoryDTO:"RepositoryDTO",
	FileChunk:"FileChunk",
	DTObjectHeader:"DTObjectHeader",
	PluginConfigDto:"PluginConfigDto",
	JavaServerConfigurationDto:"JavaServerConfigurationDto",
	MasterKeyDto:"MasterKeyDto",
	ConfigureRtoDto:"ConfigureRtoDto",
	RestMethodAttribute:"RestMethodAttribute",
	RestApiAttribute:"RestApiAttribute",
	ServiceApiMethodAttribute:"ServiceApiMethodAttribute",
	ApplicationApiMapAttribute:"ApplicationApiMapAttribute",
	RequestContextProviderAttribute:"RequestContextProviderAttribute",
	ServiceApiRefAttribute:"ServiceApiRefAttribute",
	DtoAttribute:"DtoAttribute",
	ApplicationSessionInfo:"ApplicationSessionInfo",
	ApplicationSessionInfoDummy:"ApplicationSessionInfoDummy"
};



DO.RestDefTypeIds_values = {
	DTObject:66001,
	DTObjectWithId:66002,
	RepositoryDTO:66003,
	FileChunk:66004,
	DTObjectHeader:66005,
	PluginConfigDto:66006,
	JavaServerConfigurationDto:66007,
	MasterKeyDto:66008,
	ConfigureRtoDto:66009,
	RestMethodAttribute:66010,
	RestApiAttribute:66011,
	ServiceApiMethodAttribute:66012,
	ApplicationApiMapAttribute:66013,
	RequestContextProviderAttribute:66014,
	ServiceApiRefAttribute:66015,
	DtoAttribute:66016,
	ApplicationSessionInfo:66017,
	ApplicationSessionInfoDummy:66018
};

DO.RestDefTypeIds_displayNames = {
	DTObject:"DTObject",
	DTObjectWithId:"DTObjectWithId",
	RepositoryDTO:"RepositoryDTO",
	FileChunk:"FileChunk",
	DTObjectHeader:"DTObjectHeader",
	PluginConfigDto:"PluginConfigDto",
	JavaServerConfigurationDto:"JavaServerConfigurationDto",
	MasterKeyDto:"MasterKeyDto",
	ConfigureRtoDto:"ConfigureRtoDto",
	RestMethodAttribute:"RestMethodAttribute",
	RestApiAttribute:"RestApiAttribute",
	ServiceApiMethodAttribute:"ServiceApiMethodAttribute",
	ApplicationApiMapAttribute:"ApplicationApiMapAttribute",
	RequestContextProviderAttribute:"RequestContextProviderAttribute",
	ServiceApiRefAttribute:"ServiceApiRefAttribute",
	DtoAttribute:"DtoAttribute",
	ApplicationSessionInfo:"ApplicationSessionInfo",
	ApplicationSessionInfoDummy:"ApplicationSessionInfoDummy"
};

DO.AttInfrastructureModules = {
	Root:"Root",
	AttInfrastructure:"AttInfrastructure",
	Service:"Service",
	Repository:"Repository",
	Host:"Host",
	Command:"Command",
	Security:"Security",
	WebLog:"WebLog",
	Audit:"Audit",
	Log:"Log"
};



DO.AttInfrastructureModules_values = {
	Root:0,
	AttInfrastructure:1,
	Service:2,
	Repository:3,
	Host:4,
	Command:5,
	Security:6,
	WebLog:7,
	Audit:8,
	Log:9
};

DO.AttInfrastructureModules_displayNames = {
	Root:"Root",
	AttInfrastructure:"AttInfrastructure",
	Service:"Service",
	Repository:"Repository",
	Host:"Host",
	Command:"Command",
	Security:"Security",
	WebLog:"WebLog",
	Audit:"Audit",
	Log:"Log"
};

DO.LoggerModelsDefTypeIds = {
	AttInfrastructureLoggers:"AttInfrastructureLoggers",
	LogConfiguration:"LogConfiguration",
	LogFileData:"LogFileData"
};



DO.LoggerModelsDefTypeIds_values = {
	AttInfrastructureLoggers:101001,
	LogConfiguration:101002,
	LogFileData:101003
};

DO.LoggerModelsDefTypeIds_displayNames = {
	AttInfrastructureLoggers:"AttInfrastructureLoggers",
	LogConfiguration:"LogConfiguration",
	LogFileData:"LogFileData"
};

DO.ListItemsFlags = {
	FULL_DATA:"FULL_DATA",
	METADATA_ONLY:"METADATA_ONLY"
};



DO.ListItemsFlags_values = {
	FULL_DATA:1,
	METADATA_ONLY:2
};

DO.ListItemsFlags_displayNames = {
	FULL_DATA:"FULL_DATA",
	METADATA_ONLY:"METADATA_ONLY"
};

DO.TagScopes = {
	SYSTEM:"SYSTEM",
	USER:"USER"
};



DO.TagScopes_values = {
	SYSTEM:1,
	USER:2
};

DO.TagScopes_displayNames = {
	SYSTEM:"SYSTEM",
	USER:"USER"
};

DO.TagValueTypes = {
	BOOLEAN:"BOOLEAN",
	ENUM:"ENUM",
	STRING:"STRING"
};



DO.TagValueTypes_values = {
	BOOLEAN:1,
	ENUM:2,
	STRING:3
};

DO.TagValueTypes_displayNames = {
	BOOLEAN:"BOOLEAN",
	ENUM:"ENUM",
	STRING:"STRING"
};

DO.RepositoryPublicDefTypeIds = {
	RepositoryItem:"RepositoryItem",
	RepositoryItemInfo:"RepositoryItemInfo",
	SQLiteRepositoryDTO:"SQLiteRepositoryDTO",
	SQLRepositoryDTO:"SQLRepositoryDTO",
	TagDefDTO:"TagDefDTO"
};



DO.RepositoryPublicDefTypeIds_values = {
	RepositoryItem:60001,
	RepositoryItemInfo:60002,
	SQLiteRepositoryDTO:60003,
	SQLRepositoryDTO:60004,
	TagDefDTO:60005
};

DO.RepositoryPublicDefTypeIds_displayNames = {
	RepositoryItem:"RepositoryItem",
	RepositoryItemInfo:"RepositoryItemInfo",
	SQLiteRepositoryDTO:"SQLiteRepositoryDTO",
	SQLRepositoryDTO:"SQLRepositoryDTO",
	TagDefDTO:"TagDefDTO"
};

DO.ServicesLoggerModules = {
	Services:"Services",
	Repository:"Repository",
	Scheduler:"Scheduler",
	Notification:"Notification",
	Audit:"Audit",
	Workflow:"Workflow",
	Execution:"Execution",
	MessageCenter:"MessageCenter",
	Authorization:"Authorization",
	License:"License"
};



DO.ServicesLoggerModules_values = {
	Services:30,
	Repository:31,
	Scheduler:32,
	Notification:33,
	Audit:34,
	Workflow:35,
	Execution:36,
	MessageCenter:37,
	Authorization:38,
	License:39
};

DO.ServicesLoggerModules_displayNames = {
	Services:"Services",
	Repository:"Repository",
	Scheduler:"Scheduler",
	Notification:"Notification",
	Audit:"Audit",
	Workflow:"Workflow",
	Execution:"Execution",
	MessageCenter:"MessageCenter",
	Authorization:"Authorization",
	License:"License"
};

DO.LoggerPublicDefTypeIds = {
	ServicesLoggers:"ServicesLoggers",
	LoggerListFilesParams:"LoggerListFilesParams",
	LoggerListFilesResp:"LoggerListFilesResp",
	LoggerGetLogDataParams:"LoggerGetLogDataParams",
	LoggerGetLogDataResp:"LoggerGetLogDataResp",
	LoggerDownloadLogFileParams:"LoggerDownloadLogFileParams"
};



DO.LoggerPublicDefTypeIds_values = {
	ServicesLoggers:59001,
	LoggerListFilesParams:59002,
	LoggerListFilesResp:59003,
	LoggerGetLogDataParams:59004,
	LoggerGetLogDataResp:59005,
	LoggerDownloadLogFileParams:59006
};

DO.LoggerPublicDefTypeIds_displayNames = {
	ServicesLoggers:"ServicesLoggers",
	LoggerListFilesParams:"LoggerListFilesParams",
	LoggerListFilesResp:"LoggerListFilesResp",
	LoggerGetLogDataParams:"LoggerGetLogDataParams",
	LoggerGetLogDataResp:"LoggerGetLogDataResp",
	LoggerDownloadLogFileParams:"LoggerDownloadLogFileParams"
};

DO.IntervalTimeUnit = {
	NONE:"NONE",
	SECOND:"SECOND",
	MINUTE:"MINUTE",
	HOUR:"HOUR",
	DAY:"DAY",
	WEEK:"WEEK"
};



DO.IntervalTimeUnit_values = {
	NONE:0,
	SECOND:1,
	MINUTE:2,
	HOUR:3,
	DAY:4,
	WEEK:5
};

DO.IntervalTimeUnit_displayNames = {
	NONE:"NONE",
	SECOND:"SECOND",
	MINUTE:"MINUTE",
	HOUR:"HOUR",
	DAY:"DAY",
	WEEK:"WEEK"
};

DO.SchedulerPublicDefTypeIds = {
	ScheduledJob:"ScheduledJob",
	TimePolicy:"TimePolicy",
	IntervalSchedulePolicy:"IntervalSchedulePolicy",
	QuartzPolicy:"QuartzPolicy",
	RunOncePolicy:"RunOncePolicy",
	SchedulePolicy:"SchedulePolicy",
	RecurrentSchedulePolicy:"RecurrentSchedulePolicy",
	RunOnceSchedulePolicy:"RunOnceSchedulePolicy",
	CronExpressionSchedulePolicy:"CronExpressionSchedulePolicy",
	CronSchedulePolicy:"CronSchedulePolicy",
	ScheduledJobDto:"ScheduledJobDto"
};



DO.SchedulerPublicDefTypeIds_values = {
	ScheduledJob:62001,
	TimePolicy:62002,
	IntervalSchedulePolicy:62003,
	QuartzPolicy:62004,
	RunOncePolicy:62005,
	SchedulePolicy:62006,
	RecurrentSchedulePolicy:62007,
	RunOnceSchedulePolicy:62008,
	CronExpressionSchedulePolicy:62009,
	CronSchedulePolicy:62010,
	ScheduledJobDto:62011
};

DO.SchedulerPublicDefTypeIds_displayNames = {
	ScheduledJob:"ScheduledJob",
	TimePolicy:"TimePolicy",
	IntervalSchedulePolicy:"IntervalSchedulePolicy",
	QuartzPolicy:"QuartzPolicy",
	RunOncePolicy:"RunOncePolicy",
	SchedulePolicy:"SchedulePolicy",
	RecurrentSchedulePolicy:"RecurrentSchedulePolicy",
	RunOnceSchedulePolicy:"RunOnceSchedulePolicy",
	CronExpressionSchedulePolicy:"CronExpressionSchedulePolicy",
	CronSchedulePolicy:"CronSchedulePolicy",
	ScheduledJobDto:"ScheduledJobDto"
};

DO.AuditTrailPublicDefTypeIds = {
	AuditTrailRecord:"AuditTrailRecord",
	AuditTrailDto:"AuditTrailDto"
};



DO.AuditTrailPublicDefTypeIds_values = {
	AuditTrailRecord:98001,
	AuditTrailDto:98002
};

DO.AuditTrailPublicDefTypeIds_displayNames = {
	AuditTrailRecord:"AuditTrailRecord",
	AuditTrailDto:"AuditTrailDto"
};

DO.AuditPhysicalOpenMode = {
	READER:"READER",
	WRITER:"WRITER"
};



DO.AuditPhysicalOpenMode_values = {
	READER:1,
	WRITER:2
};

DO.AuditPhysicalOpenMode_displayNames = {
	READER:"READER",
	WRITER:"WRITER"
};

DO.AuditSeverity = {
	INFO:"INFO",
	WARNING:"WARNING",
	ERROR:"ERROR"
};



DO.AuditSeverity_values = {
	INFO:1,
	WARNING:2,
	ERROR:3
};

DO.AuditSeverity_displayNames = {
	INFO:"INFO",
	WARNING:"WARNING",
	ERROR:"ERROR"
};

DO.WiredAuditSeverity = {
	INFO:"INFO",
	WARNING:"WARNING",
	ERROR:"ERROR"
};



DO.WiredAuditSeverity_values = {
	INFO:1,
	WARNING:2,
	ERROR:3
};

DO.WiredAuditSeverity_displayNames = {
	INFO:"INFO",
	WARNING:"WARNING",
	ERROR:"ERROR"
};

DO.WiredAuditBatchFlags = {
	NONE:"NONE",
	END_OF_STREAM:"END_OF_STREAM"
};



DO.WiredAuditBatchFlags_values = {
	NONE:0,
	END_OF_STREAM:1
};

DO.WiredAuditBatchFlags_displayNames = {
	NONE:"NONE",
	END_OF_STREAM:"END_OF_STREAM"
};

DO.AuditPublicDefTypeIds = {
	AuditStream:"AuditStream",
	AuditRecord:"AuditRecord",
	WiredAuditRecordBase:"WiredAuditRecordBase",
	WiredAuditRecord:"WiredAuditRecord",
	DerivedAuditRecord:"DerivedAuditRecord",
	AuditStateFieldsAttribute:"AuditStateFieldsAttribute"
};



DO.AuditPublicDefTypeIds_values = {
	AuditStream:64001,
	AuditRecord:64002,
	WiredAuditRecordBase:64003,
	WiredAuditRecord:64004,
	DerivedAuditRecord:64005,
	AuditStateFieldsAttribute:64006
};

DO.AuditPublicDefTypeIds_displayNames = {
	AuditStream:"AuditStream",
	AuditRecord:"AuditRecord",
	WiredAuditRecordBase:"WiredAuditRecordBase",
	WiredAuditRecord:"WiredAuditRecord",
	DerivedAuditRecord:"DerivedAuditRecord",
	AuditStateFieldsAttribute:"AuditStateFieldsAttribute"
};

DO.NotificationSeverity = {
	INFO:"INFO",
	WARNING:"WARNING",
	ERROR:"ERROR"
};



DO.NotificationSeverity_values = {
	INFO:1,
	WARNING:2,
	ERROR:3
};

DO.NotificationSeverity_displayNames = {
	INFO:"INFO",
	WARNING:"WARNING",
	ERROR:"ERROR"
};

DO.NotificationPublicDefTypeIds = {
	NotificationRuntime:"NotificationRuntime",
	NotificationDelivery:"NotificationDelivery",
	EmailNotificationDelivery:"EmailNotificationDelivery",
	EventLogNotificationDelivery:"EventLogNotificationDelivery",
	NotificationRule:"NotificationRule",
	NotificationRuleDto:"NotificationRuleDto",
	NotificationAlarmRuleDto:"NotificationAlarmRuleDto",
	NotificationStates:"NotificationStates",
	NotificationStatesDto:"NotificationStatesDto"
};



DO.NotificationPublicDefTypeIds_values = {
	NotificationRuntime:63001,
	NotificationDelivery:63002,
	EmailNotificationDelivery:63003,
	EventLogNotificationDelivery:63004,
	NotificationRule:63005,
	NotificationRuleDto:63006,
	NotificationAlarmRuleDto:63007,
	NotificationStates:63008,
	NotificationStatesDto:63009
};

DO.NotificationPublicDefTypeIds_displayNames = {
	NotificationRuntime:"NotificationRuntime",
	NotificationDelivery:"NotificationDelivery",
	EmailNotificationDelivery:"EmailNotificationDelivery",
	EventLogNotificationDelivery:"EventLogNotificationDelivery",
	NotificationRule:"NotificationRule",
	NotificationRuleDto:"NotificationRuleDto",
	NotificationAlarmRuleDto:"NotificationAlarmRuleDto",
	NotificationStates:"NotificationStates",
	NotificationStatesDto:"NotificationStatesDto"
};

DO.TokenState = {
	UNKNOWN:"UNKNOWN",
	BEFORE:"BEFORE",
	AFTER:"AFTER",
	WAIT:"WAIT",
	RETRY:"RETRY",
	TERMINATED:"TERMINATED",
	IGNORED:"IGNORED"
};



DO.TokenState_values = {
	UNKNOWN:0,
	BEFORE:1,
	AFTER:2,
	WAIT:3,
	RETRY:4,
	TERMINATED:5,
	IGNORED:6
};

DO.TokenState_displayNames = {
	UNKNOWN:"UNKNOWN",
	BEFORE:"BEFORE",
	AFTER:"AFTER",
	WAIT:"WAIT",
	RETRY:"RETRY",
	TERMINATED:"TERMINATED",
	IGNORED:"IGNORED"
};

DO.FlowType = {
	SIMPLE:"SIMPLE",
	MULTI_INSTANCE:"MULTI_INSTANCE",
	CONTINUOUS:"CONTINUOUS"
};



DO.FlowType_values = {
	SIMPLE:0,
	MULTI_INSTANCE:1,
	CONTINUOUS:2
};

DO.FlowType_displayNames = {
	SIMPLE:"SIMPLE",
	MULTI_INSTANCE:"MULTI_INSTANCE",
	CONTINUOUS:"CONTINUOUS"
};

DO.VariableType = {
	STRING:"STRING",
	NUMBER:"NUMBER",
	BOOL:"BOOL",
	DATE:"DATE"
};



DO.VariableType_values = {
	STRING:1,
	NUMBER:2,
	BOOL:3,
	DATE:4
};

DO.VariableType_displayNames = {
	STRING:"STRING",
	NUMBER:"NUMBER",
	BOOL:"BOOL",
	DATE:"DATE"
};

DO.VarDefLevel = {
	STATIC:"STATIC",
	DEFINED:"DEFINED",
	DYNAMIC:"DYNAMIC"
};



DO.VarDefLevel_values = {
	STATIC:1,
	DEFINED:2,
	DYNAMIC:3
};

DO.VarDefLevel_displayNames = {
	STATIC:"STATIC",
	DEFINED:"DEFINED",
	DYNAMIC:"DYNAMIC"
};

DO.TerminationMode = {
	STOP_IMMEDIATE:"STOP_IMMEDIATE",
	STOP_AFTER_RUNNING_ACTIVITIES:"STOP_AFTER_RUNNING_ACTIVITIES"
};



DO.TerminationMode_values = {
	STOP_IMMEDIATE:1,
	STOP_AFTER_RUNNING_ACTIVITIES:2
};

DO.TerminationMode_displayNames = {
	STOP_IMMEDIATE:"STOP_IMMEDIATE",
	STOP_AFTER_RUNNING_ACTIVITIES:"STOP_AFTER_RUNNING_ACTIVITIES"
};

DO.GatewayDirection = {
	UNDEFINED:"UNDEFINED",
	DIVERGING:"DIVERGING",
	CONVERGING:"CONVERGING"
};



DO.GatewayDirection_values = {
	UNDEFINED:0,
	DIVERGING:1,
	CONVERGING:2
};

DO.GatewayDirection_displayNames = {
	UNDEFINED:"UNDEFINED",
	DIVERGING:"DIVERGING",
	CONVERGING:"CONVERGING"
};

DO.ArrowType = {
	DIRECT:"DIRECT",
	DIAGONAL:"DIAGONAL",
	ELBOW:"ELBOW",
	DIAGONAL_WITH_ARROW:"DIAGONAL_WITH_ARROW",
	ARCH_WITH_ARROW:"ARCH_WITH_ARROW",
	NEGATIVE_ARCH_WITH_ARROW:"NEGATIVE_ARCH_WITH_ARROW",
	DIAGONAL_WITH_MOVING_ARROW:"DIAGONAL_WITH_MOVING_ARROW",
	DIRECT_WITH_MOVING_ARROW:"DIRECT_WITH_MOVING_ARROW"
};



DO.ArrowType_values = {
	DIRECT:1,
	DIAGONAL:2,
	ELBOW:3,
	DIAGONAL_WITH_ARROW:4,
	ARCH_WITH_ARROW:5,
	NEGATIVE_ARCH_WITH_ARROW:6,
	DIAGONAL_WITH_MOVING_ARROW:7,
	DIRECT_WITH_MOVING_ARROW:8
};

DO.ArrowType_displayNames = {
	DIRECT:"DIRECT",
	DIAGONAL:"DIAGONAL",
	ELBOW:"ELBOW",
	DIAGONAL_WITH_ARROW:"DIAGONAL_WITH_ARROW",
	ARCH_WITH_ARROW:"ARCH_WITH_ARROW",
	NEGATIVE_ARCH_WITH_ARROW:"NEGATIVE_ARCH_WITH_ARROW",
	DIAGONAL_WITH_MOVING_ARROW:"DIAGONAL_WITH_MOVING_ARROW",
	DIRECT_WITH_MOVING_ARROW:"DIRECT_WITH_MOVING_ARROW"
};

DO.FlowInstanceType = {
	ACTIVE:"ACTIVE",
	ARCHIVE:"ARCHIVE"
};



DO.FlowInstanceType_values = {
	ACTIVE:1,
	ARCHIVE:2
};

DO.FlowInstanceType_displayNames = {
	ACTIVE:"ACTIVE",
	ARCHIVE:"ARCHIVE"
};

DO.FlowObjectNames = {
	START:"START",
	END:"END",
	SPLIT:"SPLIT",
	MERGE:"MERGE",
	NODE:"NODE",
	OUTPORT:"OUTPORT",
	INPORT:"INPORT",
	ERRORPORT:"ERRORPORT"
};



DO.FlowObjectNames_values = {
	START:1,
	END:2,
	SPLIT:3,
	MERGE:4,
	NODE:5,
	OUTPORT:6,
	INPORT:7,
	ERRORPORT:8
};

DO.FlowObjectNames_displayNames = {
	START:"START",
	END:"END",
	SPLIT:"SPLIT",
	MERGE:"MERGE",
	NODE:"NODE",
	OUTPORT:"OUTPORT",
	INPORT:"INPORT",
	ERRORPORT:"ERRORPORT"
};

DO.WorkflowAuditCategory = {
	WORKFLOW_INSTANCE:"WORKFLOW_INSTANCE",
	WORKFLOW_ACTIVITY:"WORKFLOW_ACTIVITY",
	WORKFLOW_TOKEN_TRANSITION:"WORKFLOW_TOKEN_TRANSITION"
};



DO.WorkflowAuditCategory_values = {
	WORKFLOW_INSTANCE:1,
	WORKFLOW_ACTIVITY:2,
	WORKFLOW_TOKEN_TRANSITION:3
};

DO.WorkflowAuditCategory_displayNames = {
	WORKFLOW_INSTANCE:"WORKFLOW_INSTANCE",
	WORKFLOW_ACTIVITY:"WORKFLOW_ACTIVITY",
	WORKFLOW_TOKEN_TRANSITION:"WORKFLOW_TOKEN_TRANSITION"
};

DO.WorkflowAuditEvent = {
	UNKNOWN:"UNKNOWN",
	EXECUTION_STARTED:"EXECUTION_STARTED",
	EXECUTION_ENDED:"EXECUTION_ENDED",
	INSTANCE_STARTED:"INSTANCE_STARTED",
	INSTANCE_ENDED:"INSTANCE_ENDED",
	INSTANCE_ENDED_WITH_ERROR:"INSTANCE_ENDED_WITH_ERROR",
	TOKEN_CREATED:"TOKEN_CREATED",
	TOKEN_BEFORE:"TOKEN_BEFORE",
	TOKEN_WAITING:"TOKEN_WAITING",
	TOKEN_AFTER:"TOKEN_AFTER",
	TOKEN_TERMINATED:"TOKEN_TERMINATED"
};



DO.WorkflowAuditEvent_values = {
	UNKNOWN:0,
	EXECUTION_STARTED:1,
	EXECUTION_ENDED:2,
	INSTANCE_STARTED:3,
	INSTANCE_ENDED:4,
	INSTANCE_ENDED_WITH_ERROR:5,
	TOKEN_CREATED:6,
	TOKEN_BEFORE:7,
	TOKEN_WAITING:8,
	TOKEN_AFTER:9,
	TOKEN_TERMINATED:10
};

DO.WorkflowAuditEvent_displayNames = {
	UNKNOWN:"UNKNOWN",
	EXECUTION_STARTED:"EXECUTION_STARTED",
	EXECUTION_ENDED:"EXECUTION_ENDED",
	INSTANCE_STARTED:"INSTANCE_STARTED",
	INSTANCE_ENDED:"INSTANCE_ENDED",
	INSTANCE_ENDED_WITH_ERROR:"INSTANCE_ENDED_WITH_ERROR",
	TOKEN_CREATED:"TOKEN_CREATED",
	TOKEN_BEFORE:"TOKEN_BEFORE",
	TOKEN_WAITING:"TOKEN_WAITING",
	TOKEN_AFTER:"TOKEN_AFTER",
	TOKEN_TERMINATED:"TOKEN_TERMINATED"
};

DO.WorkflowPublicDefTypeIds = {
	FlowInstanceStatusDto:"FlowInstanceStatusDto",
	FlowInstanceDetailedStatusDto:"FlowInstanceDetailedStatusDto",
	FlowDto:"FlowDto",
	FlowTokenDto:"FlowTokenDto",
	BaseElement:"BaseElement",
	Lane:"Lane",
	LaneSet:"LaneSet",
	FlowElement:"FlowElement",
	Port:"Port",
	InPort:"InPort",
	SequenceFlow:"SequenceFlow",
	OutPort:"OutPort",
	ErrorOutPort:"ErrorOutPort",
	FlowNode:"FlowNode",
	StartNode:"StartNode",
	EndNode:"EndNode",
	BaseGateway:"BaseGateway",
	ParallelGateway:"ParallelGateway",
	BaseActivity:"BaseActivity",
	ExecutionActivity:"ExecutionActivity",
	WorkflowAuditRecord:"WorkflowAuditRecord",
	FlowInstanceDetailedStatus2:"FlowInstanceDetailedStatus2",
	FlowExecutorStatus:"FlowExecutorStatus",
	FlowExecutorDetailedStatus:"FlowExecutorDetailedStatus",
	WorkflowExecutorDto:"WorkflowExecutorDto",
	WorkflowExecutorConfig:"WorkflowExecutorConfig",
	FlowExecutorResumeContext:"FlowExecutorResumeContext"
};



DO.WorkflowPublicDefTypeIds_values = {
	FlowInstanceStatusDto:69003,
	FlowInstanceDetailedStatusDto:69004,
	FlowDto:69005,
	FlowTokenDto:69006,
	BaseElement:69007,
	Lane:69008,
	LaneSet:69009,
	FlowElement:69010,
	Port:69011,
	InPort:69012,
	SequenceFlow:69013,
	OutPort:69014,
	ErrorOutPort:69015,
	FlowNode:69016,
	StartNode:69017,
	EndNode:69018,
	BaseGateway:69019,
	ParallelGateway:69020,
	BaseActivity:69021,
	ExecutionActivity:69022,
	WorkflowAuditRecord:69023,
	FlowInstanceDetailedStatus2:69024,
	FlowExecutorStatus:69025,
	FlowExecutorDetailedStatus:69026,
	WorkflowExecutorDto:69031,
	WorkflowExecutorConfig:69032,
	FlowExecutorResumeContext:69033
};

DO.WorkflowPublicDefTypeIds_displayNames = {
	FlowInstanceStatusDto:"FlowInstanceStatusDto",
	FlowInstanceDetailedStatusDto:"FlowInstanceDetailedStatusDto",
	FlowDto:"FlowDto",
	FlowTokenDto:"FlowTokenDto",
	BaseElement:"BaseElement",
	Lane:"Lane",
	LaneSet:"LaneSet",
	FlowElement:"FlowElement",
	Port:"Port",
	InPort:"InPort",
	SequenceFlow:"SequenceFlow",
	OutPort:"OutPort",
	ErrorOutPort:"ErrorOutPort",
	FlowNode:"FlowNode",
	StartNode:"StartNode",
	EndNode:"EndNode",
	BaseGateway:"BaseGateway",
	ParallelGateway:"ParallelGateway",
	BaseActivity:"BaseActivity",
	ExecutionActivity:"ExecutionActivity",
	WorkflowAuditRecord:"WorkflowAuditRecord",
	FlowInstanceDetailedStatus2:"FlowInstanceDetailedStatus2",
	FlowExecutorStatus:"FlowExecutorStatus",
	FlowExecutorDetailedStatus:"FlowExecutorDetailedStatus",
	WorkflowExecutorDto:"WorkflowExecutorDto",
	WorkflowExecutorConfig:"WorkflowExecutorConfig",
	FlowExecutorResumeContext:"FlowExecutorResumeContext"
};

DO.ExecutorRuntimeListOptions = {
	RUNNING:"RUNNING",
	NON_PERSISTENT:"NON_PERSISTENT",
	WAITING_FOR_REATTACH:"WAITING_FOR_REATTACH",
	FINISHED:"FINISHED"
};



DO.ExecutorRuntimeListOptions_values = {
	RUNNING:1,
	NON_PERSISTENT:2,
	WAITING_FOR_REATTACH:4,
	FINISHED:8
};

DO.ExecutorRuntimeListOptions_displayNames = {
	RUNNING:"RUNNING",
	NON_PERSISTENT:"NON_PERSISTENT",
	WAITING_FOR_REATTACH:"WAITING_FOR_REATTACH",
	FINISHED:"FINISHED"
};

DO.ExecutionState = {
	UNKNOWN:"UNKNOWN",
	READY:"READY",
	STARTING:"STARTING",
	RESUMING:"RESUMING",
	RUNNING:"RUNNING",
	PAUSING:"PAUSING",
	STOPPING:"STOPPING",
	ABORTING:"ABORTING",
	WAITING_FOR_REATTACH:"WAITING_FOR_REATTACH",
	ATTACHING:"ATTACHING",
	FINAL_STATE_BASE:"FINAL_STATE_BASE",
	ABORTED:"ABORTED",
	COMPLETED:"COMPLETED",
	FAILED:"FAILED",
	FAILED_NOT_ATTACHABLE:"FAILED_NOT_ATTACHABLE",
	STOPPED:"STOPPED",
	FAILED_RECOVERABLE:"FAILED_RECOVERABLE",
	PAUSED:"PAUSED"
};



DO.ExecutionState_values = {
	UNKNOWN:0,
	READY:1,
	STARTING:2,
	RESUMING:3,
	RUNNING:4,
	PAUSING:5,
	STOPPING:7,
	ABORTING:8,
	WAITING_FOR_REATTACH:9,
	ATTACHING:10,
	FINAL_STATE_BASE:100,
	ABORTED:101,
	COMPLETED:102,
	FAILED:103,
	FAILED_NOT_ATTACHABLE:104,
	STOPPED:105,
	FAILED_RECOVERABLE:106,
	PAUSED:107
};

DO.ExecutionState_displayNames = {
	UNKNOWN:"UNKNOWN",
	READY:"READY",
	STARTING:"STARTING",
	RESUMING:"RESUMING",
	RUNNING:"RUNNING",
	PAUSING:"PAUSING",
	STOPPING:"STOPPING",
	ABORTING:"ABORTING",
	WAITING_FOR_REATTACH:"WAITING_FOR_REATTACH",
	ATTACHING:"ATTACHING",
	FINAL_STATE_BASE:"FINAL_STATE_BASE",
	ABORTED:"ABORTED",
	COMPLETED:"COMPLETED",
	FAILED:"FAILED",
	FAILED_NOT_ATTACHABLE:"FAILED_NOT_ATTACHABLE",
	STOPPED:"STOPPED",
	FAILED_RECOVERABLE:"FAILED_RECOVERABLE",
	PAUSED:"PAUSED"
};

DO.StatusDetailLevel = {
	SUMMARY:"SUMMARY",
	DETAILED:"DETAILED"
};



DO.StatusDetailLevel_values = {
	SUMMARY:1,
	DETAILED:2
};

DO.StatusDetailLevel_displayNames = {
	SUMMARY:"SUMMARY",
	DETAILED:"DETAILED"
};

DO.ExecutorPublicDefTypeIds = {
	ExecutorDto:"ExecutorDto",
	ProcessExecutorDto:"ProcessExecutorDto",
	MethodExecutorDto:"MethodExecutorDto",
	ExecutorOutputDto:"ExecutorOutputDto",
	ProcessExecutorOutput:"ProcessExecutorOutput",
	MethodExecutorOutput:"MethodExecutorOutput",
	ExecutionRuntimeDto:"ExecutionRuntimeDto",
	ExecutorStatus:"ExecutorStatus",
	ExecutorDetailedStatus:"ExecutorDetailedStatus",
	ExecutionServiceRuntimeDto:"ExecutionServiceRuntimeDto",
	ExecutorRuntimeDto:"ExecutorRuntimeDto",
	ExecutorData:"ExecutorData",
	AttachableExecutor:"AttachableExecutor",
	ExecutionServiceDto:"ExecutionServiceDto",
	ExecutorContext:"ExecutorContext",
	ResumeContext:"ResumeContext"
};



DO.ExecutorPublicDefTypeIds_values = {
	ExecutorDto:72001,
	ProcessExecutorDto:72002,
	MethodExecutorDto:72003,
	ExecutorOutputDto:72005,
	ProcessExecutorOutput:72006,
	MethodExecutorOutput:72007,
	ExecutionRuntimeDto:72009,
	ExecutorStatus:72010,
	ExecutorDetailedStatus:72011,
	ExecutionServiceRuntimeDto:72012,
	ExecutorRuntimeDto:72013,
	ExecutorData:72014,
	AttachableExecutor:72015,
	ExecutionServiceDto:72016,
	ExecutorContext:72017,
	ResumeContext:72018
};

DO.ExecutorPublicDefTypeIds_displayNames = {
	ExecutorDto:"ExecutorDto",
	ProcessExecutorDto:"ProcessExecutorDto",
	MethodExecutorDto:"MethodExecutorDto",
	ExecutorOutputDto:"ExecutorOutputDto",
	ProcessExecutorOutput:"ProcessExecutorOutput",
	MethodExecutorOutput:"MethodExecutorOutput",
	ExecutionRuntimeDto:"ExecutionRuntimeDto",
	ExecutorStatus:"ExecutorStatus",
	ExecutorDetailedStatus:"ExecutorDetailedStatus",
	ExecutionServiceRuntimeDto:"ExecutionServiceRuntimeDto",
	ExecutorRuntimeDto:"ExecutorRuntimeDto",
	ExecutorData:"ExecutorData",
	AttachableExecutor:"AttachableExecutor",
	ExecutionServiceDto:"ExecutionServiceDto",
	ExecutorContext:"ExecutorContext",
	ResumeContext:"ResumeContext"
};

DO.Comparison = {
	EQUALS:"EQUALS",
	NOT_EQUALS:"NOT_EQUALS",
	BIGGER:"BIGGER",
	SMALLER:"SMALLER",
	IN:"IN",
	NOT_IN:"NOT_IN"
};



DO.Comparison_values = {
	EQUALS:0,
	NOT_EQUALS:1,
	BIGGER:2,
	SMALLER:3,
	IN:4,
	NOT_IN:5
};

DO.Comparison_displayNames = {
	EQUALS:"EQUALS",
	NOT_EQUALS:"NOT_EQUALS",
	BIGGER:"BIGGER",
	SMALLER:"SMALLER",
	IN:"IN",
	NOT_IN:"NOT_IN"
};

DO.Direction = {
	NEWER_ITEMS:"NEWER_ITEMS",
	OLDER_ITEMS:"OLDER_ITEMS"
};



DO.Direction_values = {
	NEWER_ITEMS:1,
	OLDER_ITEMS:2
};

DO.Direction_displayNames = {
	NEWER_ITEMS:"NEWER_ITEMS",
	OLDER_ITEMS:"OLDER_ITEMS"
};

DO.MsgCenterPublicDefTypeIds = {
	MessageCenterDbConnection:"MessageCenterDbConnection",
	MessageCenterDbConnectionSqlite:"MessageCenterDbConnectionSqlite",
	MessageCenterDbConnectionSqlserver:"MessageCenterDbConnectionSqlserver",
	MessageCenterDTO:"MessageCenterDTO",
	MessageCenterRuntime:"MessageCenterRuntime"
};



DO.MsgCenterPublicDefTypeIds_values = {
	MessageCenterDbConnection:80001,
	MessageCenterDbConnectionSqlite:80002,
	MessageCenterDbConnectionSqlserver:80003,
	MessageCenterDTO:80004,
	MessageCenterRuntime:80005
};

DO.MsgCenterPublicDefTypeIds_displayNames = {
	MessageCenterDbConnection:"MessageCenterDbConnection",
	MessageCenterDbConnectionSqlite:"MessageCenterDbConnectionSqlite",
	MessageCenterDbConnectionSqlserver:"MessageCenterDbConnectionSqlserver",
	MessageCenterDTO:"MessageCenterDTO",
	MessageCenterRuntime:"MessageCenterRuntime"
};

DO.GlobalLicenseState = {
	LICENSE_DOES_NOT_EXIST:"LICENSE_DOES_NOT_EXIST",
	LICENSE_EXPIRED:"LICENSE_EXPIRED",
	VALID:"VALID",
	BAD_LICENSE_JSON:"BAD_LICENSE_JSON",
	SIGNATURE_NO_MATCH:"SIGNATURE_NO_MATCH",
	WRONG_PRODUCT:"WRONG_PRODUCT",
	LICENSE_PERIOD_ENDED:"LICENSE_PERIOD_ENDED",
	LICENSE_BAD_HOST:"LICENSE_BAD_HOST"
};



DO.GlobalLicenseState_values = {
	LICENSE_DOES_NOT_EXIST:1,
	LICENSE_EXPIRED:2,
	VALID:3,
	BAD_LICENSE_JSON:5,
	SIGNATURE_NO_MATCH:6,
	WRONG_PRODUCT:7,
	LICENSE_PERIOD_ENDED:8,
	LICENSE_BAD_HOST:9
};

DO.GlobalLicenseState_displayNames = {
	LICENSE_DOES_NOT_EXIST:"LICENSE_DOES_NOT_EXIST",
	LICENSE_EXPIRED:"LICENSE_EXPIRED",
	VALID:"VALID",
	BAD_LICENSE_JSON:"BAD_LICENSE_JSON",
	SIGNATURE_NO_MATCH:"SIGNATURE_NO_MATCH",
	WRONG_PRODUCT:"WRONG_PRODUCT",
	LICENSE_PERIOD_ENDED:"LICENSE_PERIOD_ENDED",
	LICENSE_BAD_HOST:"LICENSE_BAD_HOST"
};

DO.LicensePublicDefTypeIds = {
	AttunityLicense:"AttunityLicense",
	AttunityLicenseDto:"AttunityLicenseDto",
	AttunityLicenses:"AttunityLicenses"
};



DO.LicensePublicDefTypeIds_values = {
	AttunityLicense:82001,
	AttunityLicenseDto:82002,
	AttunityLicenses:82004
};

DO.LicensePublicDefTypeIds_displayNames = {
	AttunityLicense:"AttunityLicense",
	AttunityLicenseDto:"AttunityLicenseDto",
	AttunityLicenses:"AttunityLicenses"
};

DO.EnvironmentPublicDefTypeIds = {
	AppHostConfigurationDto:"AppHostConfigurationDto",
	MailServerSettings:"MailServerSettings"
};



DO.EnvironmentPublicDefTypeIds_values = {
	AppHostConfigurationDto:83001,
	MailServerSettings:83002
};

DO.EnvironmentPublicDefTypeIds_displayNames = {
	AppHostConfigurationDto:"AppHostConfigurationDto",
	MailServerSettings:"MailServerSettings"
};

DO.ApplicationTypes = {
	WEB:"WEB",
	MOBILE:"MOBILE"
};



DO.ApplicationTypes_values = {
	WEB:1,
	MOBILE:2
};

DO.ApplicationTypes_displayNames = {
	WEB:"WEB",
	MOBILE:"MOBILE"
};

DO.UserinfoPublicDefTypeIds = {
	UserInfoDto:"UserInfoDto"
};



DO.UserinfoPublicDefTypeIds_values = {
	UserInfoDto:84001
};

DO.UserinfoPublicDefTypeIds_displayNames = {
	UserInfoDto:"UserInfoDto"
};

DO.AuthorizationPublicDefTypeIds = {
	AuthorizationAclDto:"AuthorizationAclDto",
	RequiredUserRoleTypeOverridesDto:"RequiredUserRoleTypeOverridesDto",
	SuperUserDto:"SuperUserDto"
};



DO.AuthorizationPublicDefTypeIds_values = {
	AuthorizationAclDto:90001,
	RequiredUserRoleTypeOverridesDto:90002,
	SuperUserDto:90003
};

DO.AuthorizationPublicDefTypeIds_displayNames = {
	AuthorizationAclDto:"AuthorizationAclDto",
	RequiredUserRoleTypeOverridesDto:"RequiredUserRoleTypeOverridesDto",
	SuperUserDto:"SuperUserDto"
};

DO.DatabaseConfigDefTypeIds = {
	PostgreSQLConfigurationDto:"PostgreSQLConfigurationDto"
};



DO.DatabaseConfigDefTypeIds_values = {
	PostgreSQLConfigurationDto:119001
};

DO.DatabaseConfigDefTypeIds_displayNames = {
	PostgreSQLConfigurationDto:"PostgreSQLConfigurationDto"
};

DO.UserInfoSource = {
	UNSPECIFIED:"UNSPECIFIED",
	AUTO:"AUTO",
	DIRECTORY:"DIRECTORY",
	SPECIFIED:"SPECIFIED"
};



DO.UserInfoSource_values = {
	UNSPECIFIED:0,
	AUTO:1,
	DIRECTORY:2,
	SPECIFIED:3
};

DO.UserInfoSource_displayNames = {
	UNSPECIFIED:"UNSPECIFIED",
	AUTO:"AUTO",
	DIRECTORY:"DIRECTORY",
	SPECIFIED:"SPECIFIED"
};

DO.RuleOperators = {
	UNSPECIFIED:"UNSPECIFIED",
	EQUAL_TO:"EQUAL_TO",
	NOT_EQUAL_TO:"NOT_EQUAL_TO",
	GREATER_THAN:"GREATER_THAN",
	GREATER_THAN_OR_EQUAL:"GREATER_THAN_OR_EQUAL",
	LESS_THAN:"LESS_THAN",
	LESS_THAN_OR_EQUAL:"LESS_THAN_OR_EQUAL",
	IS_TRUE:"IS_TRUE",
	IS_FALSE:"IS_FALSE",
	CONTAINS:"CONTAINS",
	IS_MATCH:"IS_MATCH",
	ONE_OF:"ONE_OF",
	CONTAINS_ONE_OF:"CONTAINS_ONE_OF",
	IS_MIN_SERVER_VERSION:"IS_MIN_SERVER_VERSION",
	LOGICAL_AND:"LOGICAL_AND",
	LOGICAL_OR:"LOGICAL_OR"
};



DO.RuleOperators_values = {
	UNSPECIFIED:0,
	EQUAL_TO:1,
	NOT_EQUAL_TO:2,
	GREATER_THAN:3,
	GREATER_THAN_OR_EQUAL:4,
	LESS_THAN:5,
	LESS_THAN_OR_EQUAL:6,
	IS_TRUE:7,
	IS_FALSE:8,
	CONTAINS:21,
	IS_MATCH:22,
	ONE_OF:23,
	CONTAINS_ONE_OF:24,
	IS_MIN_SERVER_VERSION:25,
	LOGICAL_AND:41,
	LOGICAL_OR:42
};

DO.RuleOperators_displayNames = {
	UNSPECIFIED:"UNSPECIFIED",
	EQUAL_TO:"EQUAL_TO",
	NOT_EQUAL_TO:"NOT_EQUAL_TO",
	GREATER_THAN:"GREATER_THAN",
	GREATER_THAN_OR_EQUAL:"GREATER_THAN_OR_EQUAL",
	LESS_THAN:"LESS_THAN",
	LESS_THAN_OR_EQUAL:"LESS_THAN_OR_EQUAL",
	IS_TRUE:"IS_TRUE",
	IS_FALSE:"IS_FALSE",
	CONTAINS:"CONTAINS",
	IS_MATCH:"IS_MATCH",
	ONE_OF:"ONE_OF",
	CONTAINS_ONE_OF:"CONTAINS_ONE_OF",
	IS_MIN_SERVER_VERSION:"IS_MIN_SERVER_VERSION",
	LOGICAL_AND:"LOGICAL_AND",
	LOGICAL_OR:"LOGICAL_OR"
};

DO.AttCsharpDefTypeIds = {
	HostConfigurationDto:"HostConfigurationDto",
	DataTreeNodeDto:"DataTreeNodeDto",
	AttCsharpGenAttribute:"AttCsharpGenAttribute"
};



DO.AttCsharpDefTypeIds_values = {
	HostConfigurationDto:41001,
	DataTreeNodeDto:41004,
	AttCsharpGenAttribute:41005
};

DO.AttCsharpDefTypeIds_displayNames = {
	HostConfigurationDto:"HostConfigurationDto",
	DataTreeNodeDto:"DataTreeNodeDto",
	AttCsharpGenAttribute:"AttCsharpGenAttribute"
};

DO.db_role = {
	DB_ROLE_ALL:"DB_ROLE_ALL",
	SOURCE:"SOURCE",
	TARGET:"TARGET",
	BOTH:"BOTH"
};



DO.db_role_values = {
	DB_ROLE_ALL:0,
	SOURCE:1,
	TARGET:2,
	BOTH:3
};

DO.db_role_displayNames = {
	DB_ROLE_ALL:"DB_ROLE_ALL",
	SOURCE:"SOURCE",
	TARGET:"TARGET",
	BOTH:"BOTH"
};

DO.db_group = {
	DB_TYPE:"DB_TYPE",
	FILE_TYPE:"FILE_TYPE",
	DATA_WAREHOUSE_TYPE:"DATA_WAREHOUSE_TYPE",
	NOSQL_TYPE:"NOSQL_TYPE",
	CLOUD_TYPE:"CLOUD_TYPE",
	HADOOP_TYPE:"HADOOP_TYPE",
	QUEUE_TYPE:"QUEUE_TYPE",
	APPLICATION_TYPE:"APPLICATION_TYPE"
};



DO.db_group_values = {
	DB_TYPE:0,
	FILE_TYPE:1,
	DATA_WAREHOUSE_TYPE:2,
	NOSQL_TYPE:3,
	CLOUD_TYPE:4,
	HADOOP_TYPE:5,
	QUEUE_TYPE:6,
	APPLICATION_TYPE:7
};

DO.db_group_displayNames = {
	DB_TYPE:"DB_TYPE",
	FILE_TYPE:"FILE_TYPE",
	DATA_WAREHOUSE_TYPE:"DATA_WAREHOUSE_TYPE",
	NOSQL_TYPE:"NOSQL_TYPE",
	CLOUD_TYPE:"CLOUD_TYPE",
	HADOOP_TYPE:"HADOOP_TYPE",
	QUEUE_TYPE:"QUEUE_TYPE",
	APPLICATION_TYPE:"APPLICATION_TYPE"
};

DO.view_support_options = {
	NONE:"NONE",
	FULL_LOAD_ONLY:"FULL_LOAD_ONLY",
	FULL_LOAD_AND_CDC:"FULL_LOAD_AND_CDC"
};



DO.view_support_options_values = {
	NONE:0,
	FULL_LOAD_ONLY:1,
	FULL_LOAD_AND_CDC:2
};

DO.view_support_options_displayNames = {
	NONE:"NONE",
	FULL_LOAD_ONLY:"FULL_LOAD_ONLY",
	FULL_LOAD_AND_CDC:"FULL_LOAD_AND_CDC"
};

DO.column_expression_validation = {
	NONE:"NONE",
	CHECK_SINGLE_COLUMN:"CHECK_SINGLE_COLUMN",
	CHECK_ALL_COLUMNS:"CHECK_ALL_COLUMNS"
};



DO.column_expression_validation_values = {
	NONE:0,
	CHECK_SINGLE_COLUMN:1,
	CHECK_ALL_COLUMNS:2
};

DO.column_expression_validation_displayNames = {
	NONE:"NONE",
	CHECK_SINGLE_COLUMN:"CHECK_SINGLE_COLUMN",
	CHECK_ALL_COLUMNS:"CHECK_ALL_COLUMNS"
};

DO.connect_item_type = {
	STRING:"STRING",
	NUMBER:"NUMBER",
	ENUM:"ENUM",
	BOOL:"BOOL",
	NUMBER64:"NUMBER64",
	PAIRS:"PAIRS",
	MESSAGE:"MESSAGE"
};



DO.connect_item_type_values = {
	STRING:0,
	NUMBER:1,
	ENUM:2,
	BOOL:3,
	NUMBER64:4,
	PAIRS:5,
	MESSAGE:6
};

DO.connect_item_type_displayNames = {
	STRING:"STRING",
	NUMBER:"NUMBER",
	ENUM:"ENUM",
	BOOL:"BOOL",
	NUMBER64:"NUMBER64",
	PAIRS:"PAIRS",
	MESSAGE:"MESSAGE"
};

DO.connect_item_level = {
	REGULAR:"REGULAR",
	ADVANCED:"ADVANCED",
	INTERNAL:"INTERNAL"
};



DO.connect_item_level_values = {
	REGULAR:0,
	ADVANCED:1,
	INTERNAL:2
};

DO.connect_item_level_displayNames = {
	REGULAR:"REGULAR",
	ADVANCED:"ADVANCED",
	INTERNAL:"INTERNAL"
};

DO.browse_type = {
	NONE:"NONE",
	TIME_ZONE:"TIME_ZONE",
	FILE_SYSTEM:"FILE_SYSTEM",
	DATABASE:"DATABASE",
	LIST:"LIST"
};



DO.browse_type_values = {
	NONE:0,
	TIME_ZONE:1,
	FILE_SYSTEM:2,
	DATABASE:3,
	LIST:4
};

DO.browse_type_displayNames = {
	NONE:"NONE",
	TIME_ZONE:"TIME_ZONE",
	FILE_SYSTEM:"FILE_SYSTEM",
	DATABASE:"DATABASE",
	LIST:"LIST"
};

DO.cifta_compression_type = {
	DEFLATE:"DEFLATE",
	BZIP2:"BZIP2",
	NONE:"NONE"
};



DO.cifta_compression_type_values = {
	DEFLATE:0,
	BZIP2:1,
	NONE:2
};

DO.cifta_compression_type_displayNames = {
	DEFLATE:"DEFLATE",
	BZIP2:"BZIP2",
	NONE:"NONE"
};

DO.force_index_to_not_nullable = {
	FORCE_INDEX_NEVER:"FORCE_INDEX_NEVER",
	FORCE_INDEX_ONLY_PK:"FORCE_INDEX_ONLY_PK",
	FORCE_INDEX_ALWAYS:"FORCE_INDEX_ALWAYS"
};



DO.force_index_to_not_nullable_values = {
	FORCE_INDEX_NEVER:0,
	FORCE_INDEX_ONLY_PK:1,
	FORCE_INDEX_ALWAYS:2
};

DO.force_index_to_not_nullable_displayNames = {
	FORCE_INDEX_NEVER:"FORCE_INDEX_NEVER",
	FORCE_INDEX_ONLY_PK:"FORCE_INDEX_ONLY_PK",
	FORCE_INDEX_ALWAYS:"FORCE_INDEX_ALWAYS"
};

DO.bulk_update_syntax = {
	GENERIC_UPDATE:"GENERIC_UPDATE",
	FROM_AT_THE_BEGINNING:"FROM_AT_THE_BEGINNING",
	FROM_AT_THE_END:"FROM_AT_THE_END",
	USING_SUB_QUERY:"USING_SUB_QUERY",
	LOOP:"LOOP",
	INNER_JOIN:"INNER_JOIN",
	MERGE:"MERGE",
	FROM_AT_THE_END_WITH_TARGET_TABLE_NAME:"FROM_AT_THE_END_WITH_TARGET_TABLE_NAME",
	USING_SUB_QUERY_CAST_ON_WHERE:"USING_SUB_QUERY_CAST_ON_WHERE"
};



DO.bulk_update_syntax_values = {
	GENERIC_UPDATE:0,
	FROM_AT_THE_BEGINNING:1,
	FROM_AT_THE_END:2,
	USING_SUB_QUERY:3,
	LOOP:4,
	INNER_JOIN:5,
	MERGE:6,
	FROM_AT_THE_END_WITH_TARGET_TABLE_NAME:7,
	USING_SUB_QUERY_CAST_ON_WHERE:8
};

DO.bulk_update_syntax_displayNames = {
	GENERIC_UPDATE:"GENERIC_UPDATE",
	FROM_AT_THE_BEGINNING:"FROM_AT_THE_BEGINNING",
	FROM_AT_THE_END:"FROM_AT_THE_END",
	USING_SUB_QUERY:"USING_SUB_QUERY",
	LOOP:"LOOP",
	INNER_JOIN:"INNER_JOIN",
	MERGE:"MERGE",
	FROM_AT_THE_END_WITH_TARGET_TABLE_NAME:"FROM_AT_THE_END_WITH_TARGET_TABLE_NAME",
	USING_SUB_QUERY_CAST_ON_WHERE:"USING_SUB_QUERY_CAST_ON_WHERE"
};

DO.char_semantic = {
	DEFAULT:"DEFAULT",
	BYTES:"BYTES",
	CHARS:"CHARS"
};



DO.char_semantic_values = {
	DEFAULT:0,
	BYTES:1,
	CHARS:2
};

DO.char_semantic_displayNames = {
	DEFAULT:"DEFAULT",
	BYTES:"BYTES",
	CHARS:"CHARS"
};

DO.bulk_delete_syntax = {
	GENERIC_DELETE:"GENERIC_DELETE",
	TUPLES_IN_SQL_IN_CLAUSE:"TUPLES_IN_SQL_IN_CLAUSE",
	USING_CLAUSE:"USING_CLAUSE",
	FROM_CLAUSE:"FROM_CLAUSE",
	FROM_JOIN_ON:"FROM_JOIN_ON",
	MERGE:"MERGE",
	USING_SUB_QUERY_CAST_ON_WHERE:"USING_SUB_QUERY_CAST_ON_WHERE"
};



DO.bulk_delete_syntax_values = {
	GENERIC_DELETE:0,
	TUPLES_IN_SQL_IN_CLAUSE:1,
	USING_CLAUSE:2,
	FROM_CLAUSE:3,
	FROM_JOIN_ON:4,
	MERGE:5,
	USING_SUB_QUERY_CAST_ON_WHERE:6
};

DO.bulk_delete_syntax_displayNames = {
	GENERIC_DELETE:"GENERIC_DELETE",
	TUPLES_IN_SQL_IN_CLAUSE:"TUPLES_IN_SQL_IN_CLAUSE",
	USING_CLAUSE:"USING_CLAUSE",
	FROM_CLAUSE:"FROM_CLAUSE",
	FROM_JOIN_ON:"FROM_JOIN_ON",
	MERGE:"MERGE",
	USING_SUB_QUERY_CAST_ON_WHERE:"USING_SUB_QUERY_CAST_ON_WHERE"
};

DO.bulk_insert_syntax = {
	GENERIC_INSERT:"GENERIC_INSERT",
	USE_APPEND:"USE_APPEND"
};



DO.bulk_insert_syntax_values = {
	GENERIC_INSERT:0,
	USE_APPEND:1
};

DO.bulk_insert_syntax_displayNames = {
	GENERIC_INSERT:"GENERIC_INSERT",
	USE_APPEND:"USE_APPEND"
};

DO.ar_data_type_options = {
	KAR_DATA_TYPE_UNSPECIFIED:"KAR_DATA_TYPE_UNSPECIFIED",
	kAR_DATA_TYPE_BYTES:"kAR_DATA_TYPE_BYTES",
	kAR_DATA_TYPE_DATE:"kAR_DATA_TYPE_DATE",
	kAR_DATA_TYPE_TIME:"kAR_DATA_TYPE_TIME",
	kAR_DATA_TYPE_TIMESTAMP:"kAR_DATA_TYPE_TIMESTAMP",
	kAR_DATA_TYPE_I1:"kAR_DATA_TYPE_I1",
	kAR_DATA_TYPE_I2:"kAR_DATA_TYPE_I2",
	kAR_DATA_TYPE_I4:"kAR_DATA_TYPE_I4",
	kAR_DATA_TYPE_I8:"kAR_DATA_TYPE_I8",
	kAR_DATA_TYPE_NUMERIC:"kAR_DATA_TYPE_NUMERIC",
	kAR_DATA_TYPE_R4:"kAR_DATA_TYPE_R4",
	kAR_DATA_TYPE_R8:"kAR_DATA_TYPE_R8",
	kAR_DATA_TYPE_STR:"kAR_DATA_TYPE_STR",
	kAR_DATA_TYPE_UI1:"kAR_DATA_TYPE_UI1",
	kAR_DATA_TYPE_UI2:"kAR_DATA_TYPE_UI2",
	kAR_DATA_TYPE_UI4:"kAR_DATA_TYPE_UI4",
	kAR_DATA_TYPE_UI8:"kAR_DATA_TYPE_UI8",
	kAR_DATA_TYPE_WSTR:"kAR_DATA_TYPE_WSTR",
	kAR_DATA_TYPE_BLOB:"kAR_DATA_TYPE_BLOB",
	kAR_DATA_TYPE_NCLOB:"kAR_DATA_TYPE_NCLOB",
	kAR_DATA_TYPE_CLOB:"kAR_DATA_TYPE_CLOB",
	kAR_DATA_TYPE_BOOL:"kAR_DATA_TYPE_BOOL"
};



DO.ar_data_type_options_values = {
	KAR_DATA_TYPE_UNSPECIFIED:0,
	kAR_DATA_TYPE_BYTES:1,
	kAR_DATA_TYPE_DATE:2,
	kAR_DATA_TYPE_TIME:3,
	kAR_DATA_TYPE_TIMESTAMP:4,
	kAR_DATA_TYPE_I1:5,
	kAR_DATA_TYPE_I2:6,
	kAR_DATA_TYPE_I4:7,
	kAR_DATA_TYPE_I8:8,
	kAR_DATA_TYPE_NUMERIC:9,
	kAR_DATA_TYPE_R4:10,
	kAR_DATA_TYPE_R8:11,
	kAR_DATA_TYPE_STR:12,
	kAR_DATA_TYPE_UI1:13,
	kAR_DATA_TYPE_UI2:14,
	kAR_DATA_TYPE_UI4:15,
	kAR_DATA_TYPE_UI8:16,
	kAR_DATA_TYPE_WSTR:17,
	kAR_DATA_TYPE_BLOB:18,
	kAR_DATA_TYPE_NCLOB:19,
	kAR_DATA_TYPE_CLOB:20,
	kAR_DATA_TYPE_BOOL:21
};

DO.ar_data_type_options_displayNames = {
	KAR_DATA_TYPE_UNSPECIFIED:"UNSPECIFIED",
	kAR_DATA_TYPE_BYTES:"BYTES",
	kAR_DATA_TYPE_DATE:"DATE",
	kAR_DATA_TYPE_TIME:"TIME",
	kAR_DATA_TYPE_TIMESTAMP:"DATETIME",
	kAR_DATA_TYPE_I1:"INT1",
	kAR_DATA_TYPE_I2:"INT2",
	kAR_DATA_TYPE_I4:"INT4",
	kAR_DATA_TYPE_I8:"INT8",
	kAR_DATA_TYPE_NUMERIC:"NUMERIC",
	kAR_DATA_TYPE_R4:"REAL4",
	kAR_DATA_TYPE_R8:"REAL8",
	kAR_DATA_TYPE_STR:"STRING",
	kAR_DATA_TYPE_UI1:"UINT1",
	kAR_DATA_TYPE_UI2:"UINT2",
	kAR_DATA_TYPE_UI4:"UINT4",
	kAR_DATA_TYPE_UI8:"UINT8",
	kAR_DATA_TYPE_WSTR:"WSTRING",
	kAR_DATA_TYPE_BLOB:"BLOB",
	kAR_DATA_TYPE_NCLOB:"NCLOB",
	kAR_DATA_TYPE_CLOB:"CLOB",
	kAR_DATA_TYPE_BOOL:"BOOLEAN"
};

DO.ar_sub_data_type_options = {
	KAR_SUB_DATA_TYPE_UNSPECIFIED:"KAR_SUB_DATA_TYPE_UNSPECIFIED",
	KAR_SUB_DATA_TYPE_XML:"KAR_SUB_DATA_TYPE_XML",
	KAR_SUB_DATA_TYPE_JSON:"KAR_SUB_DATA_TYPE_JSON"
};



DO.ar_sub_data_type_options_values = {
	KAR_SUB_DATA_TYPE_UNSPECIFIED:0,
	KAR_SUB_DATA_TYPE_XML:1,
	KAR_SUB_DATA_TYPE_JSON:2
};

DO.ar_sub_data_type_options_displayNames = {
	KAR_SUB_DATA_TYPE_UNSPECIFIED:"Regular",
	KAR_SUB_DATA_TYPE_XML:"XML",
	KAR_SUB_DATA_TYPE_JSON:"JSON"
};

DO.binary_display = {
	PREFIXED_HEX:"PREFIXED_HEX",
	OCTAL:"OCTAL",
	PLAIN_HEX:"PLAIN_HEX"
};



DO.binary_display_values = {
	PREFIXED_HEX:0,
	OCTAL:1,
	PLAIN_HEX:2
};

DO.binary_display_displayNames = {
	PREFIXED_HEX:"PREFIXED_HEX",
	OCTAL:"OCTAL",
	PLAIN_HEX:"PLAIN_HEX"
};

DO.primary_key_order = {
	PRIMARY_KEY_ORDER_ASC:"PRIMARY_KEY_ORDER_ASC",
	PRIMARY_KEY_ORDER_DEC:"PRIMARY_KEY_ORDER_DEC"
};



DO.primary_key_order_values = {
	PRIMARY_KEY_ORDER_ASC:0,
	PRIMARY_KEY_ORDER_DEC:1
};

DO.primary_key_order_displayNames = {
	PRIMARY_KEY_ORDER_ASC:"PRIMARY_KEY_ORDER_ASC",
	PRIMARY_KEY_ORDER_DEC:"PRIMARY_KEY_ORDER_DEC"
};

DO.expression_editor_type = {
	EXPRESSION_EDITOR_TYPE_ALL:"EXPRESSION_EDITOR_TYPE_ALL",
	EXPRESSION_EDITOR_TYPE_TABLE_MANIPULATION:"EXPRESSION_EDITOR_TYPE_TABLE_MANIPULATION",
	EXPRESSION_EDITOR_TYPE_GLOBAL_MANIPULATION:"EXPRESSION_EDITOR_TYPE_GLOBAL_MANIPULATION",
	EXPRESSION_EDITOR_TYPE_FILTER:"EXPRESSION_EDITOR_TYPE_FILTER",
	EXPRESSION_EDITOR_TYPE_NOTIFICATION_RULES:"EXPRESSION_EDITOR_TYPE_NOTIFICATION_RULES",
	EXPRESSION_EDITOR_TYPE_NOTIFICATION_MSGS:"EXPRESSION_EDITOR_TYPE_NOTIFICATION_MSGS",
	EXPRESSION_EDITOR_TYPE_ADD_COLUMN:"EXPRESSION_EDITOR_TYPE_ADD_COLUMN",
	EXPRESSION_EDITOR_TYPE_QUEUE_MESSAGE:"EXPRESSION_EDITOR_TYPE_QUEUE_MESSAGE"
};



DO.expression_editor_type_values = {
	EXPRESSION_EDITOR_TYPE_ALL:0,
	EXPRESSION_EDITOR_TYPE_TABLE_MANIPULATION:1,
	EXPRESSION_EDITOR_TYPE_GLOBAL_MANIPULATION:2,
	EXPRESSION_EDITOR_TYPE_FILTER:3,
	EXPRESSION_EDITOR_TYPE_NOTIFICATION_RULES:4,
	EXPRESSION_EDITOR_TYPE_NOTIFICATION_MSGS:5,
	EXPRESSION_EDITOR_TYPE_ADD_COLUMN:6,
	EXPRESSION_EDITOR_TYPE_QUEUE_MESSAGE:7
};

DO.expression_editor_type_displayNames = {
	EXPRESSION_EDITOR_TYPE_ALL:"EXPRESSION_EDITOR_TYPE_ALL",
	EXPRESSION_EDITOR_TYPE_TABLE_MANIPULATION:"EXPRESSION_EDITOR_TYPE_TABLE_MANIPULATION",
	EXPRESSION_EDITOR_TYPE_GLOBAL_MANIPULATION:"EXPRESSION_EDITOR_TYPE_GLOBAL_MANIPULATION",
	EXPRESSION_EDITOR_TYPE_FILTER:"EXPRESSION_EDITOR_TYPE_FILTER",
	EXPRESSION_EDITOR_TYPE_NOTIFICATION_RULES:"EXPRESSION_EDITOR_TYPE_NOTIFICATION_RULES",
	EXPRESSION_EDITOR_TYPE_NOTIFICATION_MSGS:"EXPRESSION_EDITOR_TYPE_NOTIFICATION_MSGS",
	EXPRESSION_EDITOR_TYPE_ADD_COLUMN:"EXPRESSION_EDITOR_TYPE_ADD_COLUMN",
	EXPRESSION_EDITOR_TYPE_QUEUE_MESSAGE:"EXPRESSION_EDITOR_TYPE_QUEUE_MESSAGE"
};

DO.ee_hidden_type = {
	EE_TYPE_ALL:"EE_TYPE_ALL",
	EE_TYPE_COLUMN:"EE_TYPE_COLUMN",
	EE_TYPE_COLUMN_DATA:"EE_TYPE_COLUMN_DATA",
	EE_TYPE_DATATYPE_ATTR:"EE_TYPE_DATATYPE_ATTR"
};



DO.ee_hidden_type_values = {
	EE_TYPE_ALL:0,
	EE_TYPE_COLUMN:1,
	EE_TYPE_COLUMN_DATA:2,
	EE_TYPE_DATATYPE_ATTR:3
};

DO.ee_hidden_type_displayNames = {
	EE_TYPE_ALL:"EE_TYPE_ALL",
	EE_TYPE_COLUMN:"EE_TYPE_COLUMN",
	EE_TYPE_COLUMN_DATA:"EE_TYPE_COLUMN_DATA",
	EE_TYPE_DATATYPE_ATTR:"EE_TYPE_DATATYPE_ATTR"
};

DO.primary_key_origin_options = {
	primary_key_origin_unspecified:"primary_key_origin_unspecified",
	primary_key_origin_source_pk:"primary_key_origin_source_pk",
	primary_key_origin_source_unq_idx:"primary_key_origin_source_unq_idx"
};



DO.primary_key_origin_options_values = {
	primary_key_origin_unspecified:0,
	primary_key_origin_source_pk:1,
	primary_key_origin_source_unq_idx:2
};

DO.primary_key_origin_options_displayNames = {
	primary_key_origin_unspecified:"primary_key_origin_unspecified",
	primary_key_origin_source_pk:"primary_key_origin_source_pk",
	primary_key_origin_source_unq_idx:"primary_key_origin_source_unq_idx"
};

DO.unload_segments_type = {
	NO_SEGMENTATION:"NO_SEGMENTATION",
	RANGES:"RANGES",
	PARTITIONS_MANUAL:"PARTITIONS_MANUAL",
	PARTITIONS_AUTO:"PARTITIONS_AUTO",
	SUBPARTITIONS_AUTO:"SUBPARTITIONS_AUTO",
	VIEWS:"VIEWS"
};



DO.unload_segments_type_values = {
	NO_SEGMENTATION:0,
	RANGES:1,
	PARTITIONS_MANUAL:2,
	PARTITIONS_AUTO:3,
	SUBPARTITIONS_AUTO:4,
	VIEWS:5
};

DO.unload_segments_type_displayNames = {
	NO_SEGMENTATION:"NO_SEGMENTATION",
	RANGES:"RANGES",
	PARTITIONS_MANUAL:"PARTITIONS_MANUAL",
	PARTITIONS_AUTO:"PARTITIONS_AUTO",
	SUBPARTITIONS_AUTO:"SUBPARTITIONS_AUTO",
	VIEWS:"VIEWS"
};

DO.manipulation_action = {
	DEFAULT_ACTION:"DEFAULT_ACTION",
	KEEP:"KEEP",
	DROP:"DROP",
	ADD:"ADD",
	CALC:"CALC"
};



DO.manipulation_action_values = {
	DEFAULT_ACTION:0,
	KEEP:1,
	DROP:2,
	ADD:3,
	CALC:4
};

DO.manipulation_action_displayNames = {
	DEFAULT_ACTION:"DEFAULT_ACTION",
	KEEP:"KEEP",
	DROP:"DROP",
	ADD:"ADD",
	CALC:"CALC"
};

DO.global_manipulation_variables = {
	SCHEMA_NAME_VAR:"SCHEMA_NAME_VAR",
	TABLE_NAME_VAR:"TABLE_NAME_VAR",
	COLUMN_NAME_VAR:"COLUMN_NAME_VAR",
	COLUMN_DATATYPE_VAR:"COLUMN_DATATYPE_VAR",
	AR_H_USER:"AR_H_USER",
	AR_H_STREAM_POSITION:"AR_H_STREAM_POSITION",
	AR_H_TIMESTAMP:"AR_H_TIMESTAMP",
	AR_H_COMMIT_TIMESTAMP:"AR_H_COMMIT_TIMESTAMP",
	AR_H_OPERATION:"AR_H_OPERATION",
	AR_M_SOURCE_SCHEMA:"AR_M_SOURCE_SCHEMA",
	AR_M_SOURCE_TABLE_NAME:"AR_M_SOURCE_TABLE_NAME",
	AR_M_SOURCE_COLUMN_NAME:"AR_M_SOURCE_COLUMN_NAME",
	AR_M_SOURCE_DATATYPE_NAME:"AR_M_SOURCE_DATATYPE_NAME",
	AR_H_TRANSACTION_ID:"AR_H_TRANSACTION_ID",
	AR_H_CHANGE_SEQ:"AR_H_CHANGE_SEQ",
	AR_V_TASK_NAME:"AR_V_TASK_NAME",
	AR_V_TASK_UUID:"AR_V_TASK_UUID",
	AR_V_HOST_NAME:"AR_V_HOST_NAME",
	AR_V_SOURCE_NAME:"AR_V_SOURCE_NAME",
	AR_V_TARGET_NAME:"AR_V_TARGET_NAME",
	AR_V_TASK_START_TIME:"AR_V_TASK_START_TIME",
	AR_V_TASK_RELOAD_TIME:"AR_V_TASK_RELOAD_TIME",
	AR_M_SOURCE_COLUMN_DATA:"AR_M_SOURCE_COLUMN_DATA",
	AR_M_SCHEMA:"AR_M_SCHEMA",
	AR_M_TABLE_NAME:"AR_M_TABLE_NAME",
	AR_M_COLUMN_NAME:"AR_M_COLUMN_NAME",
	AR_M_SOURCE_DATATYPE_LENGTH:"AR_M_SOURCE_DATATYPE_LENGTH",
	AR_M_SOURCE_DATATYPE_SCALE:"AR_M_SOURCE_DATATYPE_SCALE",
	AR_M_SOURCE_DATATYPE_PRECISION:"AR_M_SOURCE_DATATYPE_PRECISION",
	AR_M_COLUMN_DATA:"AR_M_COLUMN_DATA",
	AR_M_DATATYPE_NAME:"AR_M_DATATYPE_NAME",
	AR_M_DATATYPE_LENGTH:"AR_M_DATATYPE_LENGTH",
	AR_M_DATATYPE_SCALE:"AR_M_DATATYPE_SCALE",
	AR_M_DATATYPE_PRECISION:"AR_M_DATATYPE_PRECISION",
	AR_M_SOURCE_SUBTYPE_NAME:"AR_M_SOURCE_SUBTYPE_NAME",
	AR_M_SUBTYPE_NAME:"AR_M_SUBTYPE_NAME"
};



DO.global_manipulation_variables_values = {
	SCHEMA_NAME_VAR:1,
	TABLE_NAME_VAR:2,
	COLUMN_NAME_VAR:3,
	COLUMN_DATATYPE_VAR:4,
	AR_H_USER:5,
	AR_H_STREAM_POSITION:6,
	AR_H_TIMESTAMP:7,
	AR_H_COMMIT_TIMESTAMP:8,
	AR_H_OPERATION:9,
	AR_M_SOURCE_SCHEMA:10,
	AR_M_SOURCE_TABLE_NAME:11,
	AR_M_SOURCE_COLUMN_NAME:12,
	AR_M_SOURCE_DATATYPE_NAME:13,
	AR_H_TRANSACTION_ID:14,
	AR_H_CHANGE_SEQ:15,
	AR_V_TASK_NAME:16,
	AR_V_TASK_UUID:17,
	AR_V_HOST_NAME:18,
	AR_V_SOURCE_NAME:19,
	AR_V_TARGET_NAME:20,
	AR_V_TASK_START_TIME:21,
	AR_V_TASK_RELOAD_TIME:22,
	AR_M_SOURCE_COLUMN_DATA:23,
	AR_M_SCHEMA:24,
	AR_M_TABLE_NAME:25,
	AR_M_COLUMN_NAME:26,
	AR_M_SOURCE_DATATYPE_LENGTH:27,
	AR_M_SOURCE_DATATYPE_SCALE:28,
	AR_M_SOURCE_DATATYPE_PRECISION:29,
	AR_M_COLUMN_DATA:30,
	AR_M_DATATYPE_NAME:31,
	AR_M_DATATYPE_LENGTH:32,
	AR_M_DATATYPE_SCALE:33,
	AR_M_DATATYPE_PRECISION:34,
	AR_M_SOURCE_SUBTYPE_NAME:35,
	AR_M_SUBTYPE_NAME:36
};

DO.global_manipulation_variables_displayNames = {
	SCHEMA_NAME_VAR:"SCHEMA_NAME_VAR",
	TABLE_NAME_VAR:"TABLE_NAME_VAR",
	COLUMN_NAME_VAR:"COLUMN_NAME_VAR",
	COLUMN_DATATYPE_VAR:"COLUMN_DATATYPE_VAR",
	AR_H_USER:"AR_H_USER",
	AR_H_STREAM_POSITION:"AR_H_STREAM_POSITION",
	AR_H_TIMESTAMP:"AR_H_TIMESTAMP",
	AR_H_COMMIT_TIMESTAMP:"AR_H_COMMIT_TIMESTAMP",
	AR_H_OPERATION:"AR_H_OPERATION",
	AR_M_SOURCE_SCHEMA:"AR_M_SOURCE_SCHEMA",
	AR_M_SOURCE_TABLE_NAME:"AR_M_SOURCE_TABLE_NAME",
	AR_M_SOURCE_COLUMN_NAME:"AR_M_SOURCE_COLUMN_NAME",
	AR_M_SOURCE_DATATYPE_NAME:"AR_M_SOURCE_DATATYPE_NAME",
	AR_H_TRANSACTION_ID:"AR_H_TRANSACTION_ID",
	AR_H_CHANGE_SEQ:"AR_H_CHANGE_SEQ",
	AR_V_TASK_NAME:"AR_V_TASK_NAME",
	AR_V_TASK_UUID:"AR_V_TASK_UUID",
	AR_V_HOST_NAME:"AR_V_HOST_NAME",
	AR_V_SOURCE_NAME:"AR_V_SOURCE_NAME",
	AR_V_TARGET_NAME:"AR_V_TARGET_NAME",
	AR_V_TASK_START_TIME:"AR_V_TASK_START_TIME",
	AR_V_TASK_RELOAD_TIME:"AR_V_TASK_RELOAD_TIME",
	AR_M_SOURCE_COLUMN_DATA:"AR_M_SOURCE_COLUMN_DATA",
	AR_M_SCHEMA:"AR_M_SCHEMA",
	AR_M_TABLE_NAME:"AR_M_TABLE_NAME",
	AR_M_COLUMN_NAME:"AR_M_COLUMN_NAME",
	AR_M_SOURCE_DATATYPE_LENGTH:"AR_M_SOURCE_DATATYPE_LENGTH",
	AR_M_SOURCE_DATATYPE_SCALE:"AR_M_SOURCE_DATATYPE_SCALE",
	AR_M_SOURCE_DATATYPE_PRECISION:"AR_M_SOURCE_DATATYPE_PRECISION",
	AR_M_COLUMN_DATA:"AR_M_COLUMN_DATA",
	AR_M_DATATYPE_NAME:"AR_M_DATATYPE_NAME",
	AR_M_DATATYPE_LENGTH:"AR_M_DATATYPE_LENGTH",
	AR_M_DATATYPE_SCALE:"AR_M_DATATYPE_SCALE",
	AR_M_DATATYPE_PRECISION:"AR_M_DATATYPE_PRECISION",
	AR_M_SOURCE_SUBTYPE_NAME:"AR_M_SOURCE_SUBTYPE_NAME",
	AR_M_SUBTYPE_NAME:"AR_M_SUBTYPE_NAME"
};

DO.global_manipulation_action = {
	RENAME_SCHEMA:"RENAME_SCHEMA",
	RENAME_TABLE:"RENAME_TABLE",
	RENAME_COLUMN:"RENAME_COLUMN",
	CHANGE_COLUMN_DATA_TYPE:"CHANGE_COLUMN_DATA_TYPE",
	ADD_COLUMN:"ADD_COLUMN",
	DROP_COLUMN:"DROP_COLUMN",
	CHANGE_TABLE_TABLESPACE:"CHANGE_TABLE_TABLESPACE",
	CHANGE_INDEX_TABLESPACE:"CHANGE_INDEX_TABLESPACE",
	RENAME_CHANGE_TABLE:"RENAME_CHANGE_TABLE",
	RENAME_CHANGE_TABLE_SCHEMA:"RENAME_CHANGE_TABLE_SCHEMA",
	REPLACE_COLUMN_VALUE:"REPLACE_COLUMN_VALUE",
	ADD_COLUMN_FILTER:"ADD_COLUMN_FILTER",
	ADD_TABLE_FILTER:"ADD_TABLE_FILTER"
};



DO.global_manipulation_action_values = {
	RENAME_SCHEMA:1,
	RENAME_TABLE:2,
	RENAME_COLUMN:3,
	CHANGE_COLUMN_DATA_TYPE:4,
	ADD_COLUMN:5,
	DROP_COLUMN:6,
	CHANGE_TABLE_TABLESPACE:7,
	CHANGE_INDEX_TABLESPACE:8,
	RENAME_CHANGE_TABLE:9,
	RENAME_CHANGE_TABLE_SCHEMA:10,
	REPLACE_COLUMN_VALUE:11,
	ADD_COLUMN_FILTER:12,
	ADD_TABLE_FILTER:13
};

DO.global_manipulation_action_displayNames = {
	RENAME_SCHEMA:"RENAME_SCHEMA",
	RENAME_TABLE:"RENAME_TABLE",
	RENAME_COLUMN:"RENAME_COLUMN",
	CHANGE_COLUMN_DATA_TYPE:"CHANGE_COLUMN_DATA_TYPE",
	ADD_COLUMN:"ADD_COLUMN",
	DROP_COLUMN:"DROP_COLUMN",
	CHANGE_TABLE_TABLESPACE:"CHANGE_TABLE_TABLESPACE",
	CHANGE_INDEX_TABLESPACE:"CHANGE_INDEX_TABLESPACE",
	RENAME_CHANGE_TABLE:"RENAME_CHANGE_TABLE",
	RENAME_CHANGE_TABLE_SCHEMA:"RENAME_CHANGE_TABLE_SCHEMA",
	REPLACE_COLUMN_VALUE:"REPLACE_COLUMN_VALUE",
	ADD_COLUMN_FILTER:"ADD_COLUMN_FILTER",
	ADD_TABLE_FILTER:"ADD_TABLE_FILTER"
};

DO.global_manipulation_sub_action = {
	RENAME:"RENAME",
	ADD_PREFIX:"ADD_PREFIX",
	REMOVE_PREFIX:"REMOVE_PREFIX",
	ADD_SUFFIX:"ADD_SUFFIX",
	REMOVE_SUFFIX:"REMOVE_SUFFIX",
	REPLACE_PREFIX:"REPLACE_PREFIX",
	REPLACE_SUFFIX:"REPLACE_SUFFIX",
	ADD_PARENT_PREFIX:"ADD_PARENT_PREFIX",
	ADVANCE:"ADVANCE",
	CONVERT_UPPER:"CONVERT_UPPER",
	CONVERT_LOWER:"CONVERT_LOWER",
	RENAME_EXPRESSION:"RENAME_EXPRESSION"
};



DO.global_manipulation_sub_action_values = {
	RENAME:1,
	ADD_PREFIX:2,
	REMOVE_PREFIX:3,
	ADD_SUFFIX:4,
	REMOVE_SUFFIX:5,
	REPLACE_PREFIX:6,
	REPLACE_SUFFIX:7,
	ADD_PARENT_PREFIX:8,
	ADVANCE:9,
	CONVERT_UPPER:10,
	CONVERT_LOWER:11,
	RENAME_EXPRESSION:12
};

DO.global_manipulation_sub_action_displayNames = {
	RENAME:"RENAME",
	ADD_PREFIX:"ADD_PREFIX",
	REMOVE_PREFIX:"REMOVE_PREFIX",
	ADD_SUFFIX:"ADD_SUFFIX",
	REMOVE_SUFFIX:"REMOVE_SUFFIX",
	REPLACE_PREFIX:"REPLACE_PREFIX",
	REPLACE_SUFFIX:"REPLACE_SUFFIX",
	ADD_PARENT_PREFIX:"ADD_PARENT_PREFIX",
	ADVANCE:"ADVANCE",
	CONVERT_UPPER:"CONVERT_UPPER",
	CONVERT_LOWER:"CONVERT_LOWER",
	RENAME_EXPRESSION:"RENAME_EXPRESSION"
};

DO.global_manipulation_where_datatype_group = {
	ALL_DATATYPES:"ALL_DATATYPES",
	SPECIFIC_DATATYPE:"SPECIFIC_DATATYPE"
};



DO.global_manipulation_where_datatype_group_values = {
	ALL_DATATYPES:0,
	SPECIFIC_DATATYPE:1
};

DO.global_manipulation_where_datatype_group_displayNames = {
	ALL_DATATYPES:"ALL_DATATYPES",
	SPECIFIC_DATATYPE:"SPECIFIC_DATATYPE"
};

DO.record_identifier = {
	RECORD_IDENTIFIER_NONE:"RECORD_IDENTIFIER_NONE",
	RECORD_IDENTIFIER_UNIQUE_INDEX:"RECORD_IDENTIFIER_UNIQUE_INDEX",
	RECORD_IDENTIFIER_CLUSTERED_PRIMARY_KEY:"RECORD_IDENTIFIER_CLUSTERED_PRIMARY_KEY",
	RECORD_IDENTIFIER_NON_CLUSTERED_PRIMARY_KEY:"RECORD_IDENTIFIER_NON_CLUSTERED_PRIMARY_KEY"
};



DO.record_identifier_values = {
	RECORD_IDENTIFIER_NONE:0,
	RECORD_IDENTIFIER_UNIQUE_INDEX:1,
	RECORD_IDENTIFIER_CLUSTERED_PRIMARY_KEY:2,
	RECORD_IDENTIFIER_NON_CLUSTERED_PRIMARY_KEY:3
};

DO.record_identifier_displayNames = {
	RECORD_IDENTIFIER_NONE:"None",
	RECORD_IDENTIFIER_UNIQUE_INDEX:"Unique index",
	RECORD_IDENTIFIER_CLUSTERED_PRIMARY_KEY:"Clustered primary key",
	RECORD_IDENTIFIER_NON_CLUSTERED_PRIMARY_KEY:"Non clustered primary key"
};

DO.ProtoDefSharedTypeIds = {
	MetaDefExt:"MetaDefExt"
};



DO.ProtoDefSharedTypeIds_values = {
	MetaDefExt:23059
};

DO.ProtoDefSharedTypeIds_displayNames = {
	MetaDefExt:"MetaDefExt"
};

DO.BigDataProjectTypes = {
	OPERATIONAL_DATASTORE:"OPERATIONAL_DATASTORE",
	HISTORICAL_DATASTORE_WITH_ACID:"HISTORICAL_DATASTORE_WITH_ACID",
	HISTORICAL_DATASTORE_WITHOUT_ACID:"HISTORICAL_DATASTORE_WITHOUT_ACID"
};



DO.BigDataProjectTypes_values = {
	OPERATIONAL_DATASTORE:0,
	HISTORICAL_DATASTORE_WITH_ACID:1,
	HISTORICAL_DATASTORE_WITHOUT_ACID:2
};

DO.BigDataProjectTypes_displayNames = {
	OPERATIONAL_DATASTORE:"Operational Data Store",
	HISTORICAL_DATASTORE_WITH_ACID:"Historical Data Store with ACID",
	HISTORICAL_DATASTORE_WITHOUT_ACID:"Historical Data Store "
};

DO.TargetOS = {
	MSWL:"MSWL",
	MSWE:"MSWE",
	UNIX:"UNIX"
};



DO.TargetOS_values = {
	MSWL:1,
	MSWE:2,
	UNIX:3
};

DO.TargetOS_displayNames = {
	MSWL:"MSWL",
	MSWE:"MSWE",
	UNIX:"UNIX"
};

DO.EngineLogLevel = {
	INFO:"INFO",
	DEBUG:"DEBUG",
	TRACE:"TRACE"
};



DO.EngineLogLevel_values = {
	INFO:1,
	DEBUG:2,
	TRACE:3
};

DO.EngineLogLevel_displayNames = {
	INFO:"INFO",
	DEBUG:"DEBUG",
	TRACE:"TRACE"
};

DO.DeliveryType = {
	NONE:"NONE",
	ONE_TIME_SNAPSHOT:"ONE_TIME_SNAPSHOT",
	HDS:"HDS",
	HDS_INCR:"HDS_INCR",
	ODS_INCR:"ODS_INCR"
};



DO.DeliveryType_values = {
	NONE:0,
	ONE_TIME_SNAPSHOT:1,
	HDS:2,
	HDS_INCR:3,
	ODS_INCR:4
};

DO.DeliveryType_displayNames = {
	NONE:"None",
	ONE_TIME_SNAPSHOT:"Snapshot",
	HDS:"HDS",
	HDS_INCR:"Incrementally Updated HDS",
	ODS_INCR:"Incrementally Updated ODS"
};

DO.ETLType = {
	None:"None",
	DataWarehouse:"DataWarehouse",
	DataWarehouse_CDC:"DataWarehouse_CDC",
	Delivery:"Delivery",
	DataMart:"DataMart",
	Workflow:"Workflow",
	Replicate_Task:"Replicate_Task",
	Command_Task:"Command_Task",
	Compactor:"Compactor",
	Storage_FL_CDC:"Storage_FL_CDC"
};



DO.ETLType_values = {
	None:0,
	DataWarehouse:1,
	DataWarehouse_CDC:2,
	Delivery:4,
	DataMart:8,
	Workflow:16,
	Replicate_Task:32,
	Command_Task:64,
	Compactor:128,
	Storage_FL_CDC:256
};

DO.ETLType_displayNames = {
	None:"None",
	DataWarehouse:"DataWarehouse",
	DataWarehouse_CDC:"DataWarehouse_CDC",
	Delivery:"Delivery",
	DataMart:"DataMart",
	Workflow:"Workflow",
	Replicate_Task:"Replicate_Task",
	Command_Task:"Command_Task",
	Compactor:"Compactor",
	Storage_FL_CDC:"Storage_FL_CDC"
};

DO.ETLStage = {
	None:"None",
	FULL_LOAD:"FULL_LOAD",
	CDC:"CDC"
};



DO.ETLStage_values = {
	None:0,
	FULL_LOAD:1,
	CDC:2
};

DO.ETLStage_displayNames = {
	None:"None",
	FULL_LOAD:"FULL_LOAD",
	CDC:"CDC"
};

DO.ETLCmdType = {
	Initial:"Initial",
	RunSQL:"RunSQL",
	RunDDL:"RunDDL",
	CALC:"CALC",
	Mopping:"Mopping",
	NOOP:"NOOP",
	Loop:"Loop",
	STOPWITHERROR:"STOPWITHERROR",
	STOP:"STOP",
	RunSP:"RunSP",
	RunSpark:"RunSpark",
	TEXT:"TEXT"
};



DO.ETLCmdType_values = {
	Initial:10,
	RunSQL:11,
	RunDDL:12,
	CALC:13,
	Mopping:14,
	NOOP:15,
	Loop:16,
	STOPWITHERROR:17,
	STOP:18,
	RunSP:19,
	RunSpark:20,
	TEXT:21
};

DO.ETLCmdType_displayNames = {
	Initial:"Initial",
	RunSQL:"RunSQL",
	RunDDL:"RunDDL",
	CALC:"CALC",
	Mopping:"Mopping",
	NOOP:"NOOP",
	Loop:"Loop",
	STOPWITHERROR:"STOPWITHERROR",
	STOP:"STOP",
	RunSP:"RunSP",
	RunSpark:"RunSpark",
	TEXT:"TEXT"
};

DO.TableWriteMode = {
	Append:"Append",
	Overwrite:"Overwrite",
	ErrorIfExists:"ErrorIfExists",
	Ignore:"Ignore"
};



DO.TableWriteMode_values = {
	Append:10,
	Overwrite:11,
	ErrorIfExists:12,
	Ignore:13
};

DO.TableWriteMode_displayNames = {
	Append:"Append",
	Overwrite:"Overwrite",
	ErrorIfExists:"ErrorIfExists",
	Ignore:"Ignore"
};

DO.TableUsage = {
	PERSISTENT:"PERSISTENT",
	VOLATILE:"VOLATILE"
};



DO.TableUsage_values = {
	PERSISTENT:1,
	VOLATILE:2
};

DO.TableUsage_displayNames = {
	PERSISTENT:"PERSISTENT",
	VOLATILE:"VOLATILE"
};

DO.ETLCommandStatus = {
	BUSY:"BUSY",
	DONE:"DONE",
	SKIPPED:"SKIPPED",
	STANDBY:"STANDBY",
	ERROR:"ERROR",
	WAITING:"WAITING",
	VALID:"VALID",
	LOADING:"LOADING",
	UNDEFINED:"UNDEFINED",
	__ALL__:"__ALL__"
};



DO.ETLCommandStatus_values = {
	BUSY:0,
	DONE:1,
	SKIPPED:2,
	STANDBY:3,
	ERROR:4,
	WAITING:5,
	VALID:6,
	LOADING:7,
	UNDEFINED:8,
	__ALL__:9
};

DO.ETLCommandStatus_displayNames = {
	BUSY:"BUSY",
	DONE:"DONE",
	SKIPPED:"SKIPPED",
	STANDBY:"STANDBY",
	ERROR:"ERROR",
	WAITING:"WAITING",
	VALID:"VALID",
	LOADING:"LOADING",
	UNDEFINED:"UNDEFINED",
	__ALL__:"__ALL__"
};

DO.DatabaseUsage = {
	ALL:"ALL",
	SOURCE:"SOURCE",
	REPOSITORY:"REPOSITORY",
	DATA_WAREHOUSE:"DATA_WAREHOUSE",
	DATA_MART:"DATA_MART",
	DELIVERY:"DELIVERY"
};



DO.DatabaseUsage_values = {
	ALL:0,
	SOURCE:1,
	REPOSITORY:2,
	DATA_WAREHOUSE:3,
	DATA_MART:4,
	DELIVERY:5
};

DO.DatabaseUsage_displayNames = {
	ALL:"ALL",
	SOURCE:"SOURCE",
	REPOSITORY:"REPOSITORY",
	DATA_WAREHOUSE:"DATA_WAREHOUSE",
	DATA_MART:"DATA_MART",
	DELIVERY:"DELIVERY"
};

DO.TemplateDatabaseType = {
	SQLSERVER:"SQLSERVER",
	DB2:"DB2",
	ORACLE:"ORACLE",
	NETEZZA:"NETEZZA",
	TERADATA:"TERADATA",
	MYSQL:"MYSQL",
	REDSHIFT:"REDSHIFT",
	AZURE:"AZURE",
	EMRHIVE:"EMRHIVE",
	HADOOPSPARK:"HADOOPSPARK",
	SNOWFLAKE:"SNOWFLAKE",
	DATABRICKSDELTA:"DATABRICKSDELTA",
	CDPHIVE:"CDPHIVE",
	BIGQUERY:"BIGQUERY",
	HDINSIGHTHIVE:"HDINSIGHTHIVE",
	DATAPROCHIVE:"DATAPROCHIVE",
	APACHEHIVE:"APACHEHIVE"
};



DO.TemplateDatabaseType_values = {
	SQLSERVER:1,
	DB2:2,
	ORACLE:4,
	NETEZZA:8,
	TERADATA:16,
	MYSQL:32,
	REDSHIFT:64,
	AZURE:128,
	EMRHIVE:256,
	HADOOPSPARK:512,
	SNOWFLAKE:1024,
	DATABRICKSDELTA:2048,
	CDPHIVE:4096,
	BIGQUERY:8192,
	HDINSIGHTHIVE:16384,
	DATAPROCHIVE:32768,
	APACHEHIVE:65536
};

DO.TemplateDatabaseType_displayNames = {
	SQLSERVER:"Microsoft SQL Server",
	DB2:"IBM DB2",
	ORACLE:"Oracle",
	NETEZZA:"IBM Netezza",
	TERADATA:"Teradata",
	MYSQL:"MySQL",
	REDSHIFT:"Amazon Redshift",
	AZURE:"Microsoft Azure Synapse Analytics",
	EMRHIVE:"EMR Hive",
	HADOOPSPARK:"Hadoop Spark",
	SNOWFLAKE:"Snowflake",
	DATABRICKSDELTA:"Databricks Delta",
	CDPHIVE:"CDP Hive",
	BIGQUERY:"Google Cloud BigQuery",
	HDINSIGHTHIVE:"Microsoft Azure HDInsight",
	DATAPROCHIVE:"Google Dataproc",
	APACHEHIVE:"Apache Hive"
};

DO.LandingType = {
	DATABASE:"DATABASE",
	SCHEMA:"SCHEMA"
};



DO.LandingType_values = {
	DATABASE:0,
	SCHEMA:1
};

DO.LandingType_displayNames = {
	DATABASE:"Database",
	SCHEMA:"Schema"
};

DO.ReplicateTaskType = {
	FULL_LOAD:"FULL_LOAD",
	CDC:"CDC",
	FULL_LOAD_AND_CDC:"FULL_LOAD_AND_CDC"
};



DO.ReplicateTaskType_values = {
	FULL_LOAD:0,
	CDC:1,
	FULL_LOAD_AND_CDC:2
};

DO.ReplicateTaskType_displayNames = {
	FULL_LOAD:"Full Load Only",
	CDC:"Change Processing",
	FULL_LOAD_AND_CDC:"Full Load and Change Processing"
};

DO.ChangeTablesPostProcessing = {
	DELETE:"DELETE",
	DO_NOTHING:"DO_NOTHING",
	ARCHIVE:"ARCHIVE",
	KEEP_CT:"KEEP_CT"
};



DO.ChangeTablesPostProcessing_values = {
	DELETE:0,
	DO_NOTHING:1,
	ARCHIVE:2,
	KEEP_CT:3
};

DO.ChangeTablesPostProcessing_displayNames = {
	DELETE:"DELETE",
	DO_NOTHING:"DO_NOTHING",
	ARCHIVE:"ARCHIVE",
	KEEP_CT:"KEEP_CT"
};

DO.DatalakeStorageType = {
	DATABRICKSDELTA:"DATABRICKSDELTA",
	PARQUET:"PARQUET",
	AVRO:"AVRO",
	ORC:"ORC"
};



DO.DatalakeStorageType_values = {
	DATABRICKSDELTA:0,
	PARQUET:1,
	AVRO:2,
	ORC:3
};

DO.DatalakeStorageType_displayNames = {
	DATABRICKSDELTA:"Delta Lake",
	PARQUET:"Parquet",
	AVRO:"Avro",
	ORC:"Hive ACID"
};

DO.SnowflakeVariantType = {
	JSON:"JSON",
	XML:"XML"
};



DO.SnowflakeVariantType_values = {
	JSON:0,
	XML:1
};

DO.SnowflakeVariantType_displayNames = {
	JSON:"JSON",
	XML:"XML"
};

DO.HadoopAuthenticationType = {
	HDINSIGHT:"HDINSIGHT",
	HDINSIGHT_REMOTE_AGENT:"HDINSIGHT_REMOTE_AGENT",
	DATABRICKS_DELTA:"DATABRICKS_DELTA",
	KERBEROS:"KERBEROS",
	KNOX:"KNOX",
	USERNAME:"USERNAME",
	USERNAMEPASS:"USERNAMEPASS"
};



DO.HadoopAuthenticationType_values = {
	HDINSIGHT:0,
	HDINSIGHT_REMOTE_AGENT:1,
	DATABRICKS_DELTA:2,
	KERBEROS:3,
	KNOX:4,
	USERNAME:5,
	USERNAMEPASS:6
};

DO.HadoopAuthenticationType_displayNames = {
	HDINSIGHT:"Azure HDInsight",
	HDINSIGHT_REMOTE_AGENT:"Azure HDInsight (with Agent on the cluster)",
	DATABRICKS_DELTA:"Databricks Delta",
	KERBEROS:"Kerberos",
	KNOX:"Knox",
	USERNAME:"User name",
	USERNAMEPASS:"User name and password"
};

DO.KDCServerType = {
	ACTIVE_DIRECTORY:"ACTIVE_DIRECTORY",
	MIT:"MIT"
};



DO.KDCServerType_values = {
	ACTIVE_DIRECTORY:0,
	MIT:1
};

DO.KDCServerType_displayNames = {
	ACTIVE_DIRECTORY:"ACTIVE_DIRECTORY",
	MIT:"MIT"
};

DO.DataStoreType = {
	NONE:"NONE",
	HIVE:"HIVE",
	HDFS:"HDFS",
	S3:"S3",
	AZURE_DATALAKE:"AZURE_DATALAKE",
	AZUREGEN2:"AZUREGEN2",
	GOOGLE:"GOOGLE",
	GOOGLEBIGQUERY:"GOOGLEBIGQUERY"
};



DO.DataStoreType_values = {
	NONE:0,
	HIVE:1,
	HDFS:2,
	S3:3,
	AZURE_DATALAKE:4,
	AZUREGEN2:5,
	GOOGLE:6,
	GOOGLEBIGQUERY:7
};

DO.DataStoreType_displayNames = {
	NONE:"None",
	HIVE:"Hive",
	HDFS:"HDFS",
	S3:"Amazon S3",
	AZURE_DATALAKE:"Microsoft Azure Data Lake Storage Gen1",
	AZUREGEN2:"Microsoft Azure Data Lake Storage Gen2",
	GOOGLE:"Google Storage",
	GOOGLEBIGQUERY:"Google Cloud BigQuery"
};

DO.ACDataType = {
	NotSupported:"NotSupported",
	Integer:"Integer",
	Bigint:"Bigint",
	Decimal:"Decimal",
	Varchar:"Varchar",
	Date:"Date",
	GUID:"GUID",
	DateTime:"DateTime",
	NVarchar:"NVarchar",
	Clob:"Clob",
	NClob:"NClob",
	BigIntAutoInc:"BigIntAutoInc",
	Byte:"Byte",
	Time:"Time",
	String:"String",
	Double:"Double",
	Boolean:"Boolean",
	DateTime_LTZ:"DateTime_LTZ",
	JSON:"JSON",
	XML:"XML",
	NONE:"NONE"
};



DO.ACDataType_values = {
	NotSupported:0,
	Integer:1,
	Bigint:2,
	Decimal:3,
	Varchar:4,
	Date:5,
	GUID:6,
	DateTime:7,
	NVarchar:8,
	Clob:9,
	NClob:10,
	BigIntAutoInc:11,
	Byte:12,
	Time:13,
	String:14,
	Double:15,
	Boolean:16,
	DateTime_LTZ:17,
	JSON:18,
	XML:19,
	NONE:99
};

DO.ACDataType_displayNames = {
	NotSupported:"NotSupported",
	Integer:"Integer",
	Bigint:"Bigint",
	Decimal:"Decimal",
	Varchar:"Varchar",
	Date:"Date",
	GUID:"GUID",
	DateTime:"DateTime",
	NVarchar:"NVarchar",
	Clob:"Clob",
	NClob:"NClob",
	BigIntAutoInc:"BigIntAutoInc",
	Byte:"Byte",
	Time:"Time",
	String:"String",
	Double:"Double",
	Boolean:"Boolean",
	DateTime_LTZ:"DateTime_LTZ",
	JSON:"JSON",
	XML:"XML",
	NONE:"NONE"
};

DO.TableType = {
	TABLE:"TABLE",
	VIEW:"VIEW",
	BOTH:"BOTH"
};



DO.TableType_values = {
	TABLE:1,
	VIEW:2,
	BOTH:3
};

DO.TableType_displayNames = {
	TABLE:"TABLE",
	VIEW:"VIEW",
	BOTH:"BOTH"
};

DO.ComposeBirDefTypeIds = {
	ETLCommandsInfoDto:"ETLCommandsInfoDto",
	ETLRunInfoDto:"ETLRunInfoDto",
	ArchiveSettings:"ArchiveSettings",
	HiveArchiveSettings:"HiveArchiveSettings",
	DbBaseSettings:"DbBaseSettings",
	SqlServerDbSettings:"SqlServerDbSettings",
	TeradataDbSettings:"TeradataDbSettings",
	HiveDbSettings:"HiveDbSettings",
	DatabaseDto:"DatabaseDto",
	Column:"Column",
	DwhColumn:"DwhColumn",
	AuthenticationSettings:"AuthenticationSettings",
	UserConfiguration:"UserConfiguration",
	UserAndPasswordConfiguration:"UserAndPasswordConfiguration",
	KerberosConfiguration:"KerberosConfiguration",
	HiveAuthenticationSettings:"HiveAuthenticationSettings",
	HiveUserConfiguration:"HiveUserConfiguration",
	HiveUserAndPasswordConfiguration:"HiveUserAndPasswordConfiguration",
	HiveKerberosConfiguration:"HiveKerberosConfiguration",
	HadoopAuthenticationSettings:"HadoopAuthenticationSettings",
	HadoopUserConfiguration:"HadoopUserConfiguration",
	HadoopUserAndPasswordConfiguration:"HadoopUserAndPasswordConfiguration",
	HadoopKerberosConfiguration:"HadoopKerberosConfiguration",
	TableData:"TableData",
	KnoxConfiguration:"KnoxConfiguration",
	SparkDbSettings:"SparkDbSettings",
	SparkArchiveSettings:"SparkArchiveSettings",
	SparkCommandBase:"SparkCommandBase",
	SparkCommandInitialLoad:"SparkCommandInitialLoad",
	SparkCommandCdc:"SparkCommandCdc",
	SparkCommandDelivery:"SparkCommandDelivery",
	SparkDDLCommandBase:"SparkDDLCommandBase",
	SparkCreateTable:"SparkCreateTable",
	DataSet:"DataSet",
	SourceDataSet:"SourceDataSet",
	TargetDataSet:"TargetDataSet",
	SparkLoadTransSaveTable:"SparkLoadTransSaveTable",
	SparkFlowAnchor:"SparkFlowAnchor",
	SparkInitialize:"SparkInitialize",
	SparkLoadTransCalcTable:"SparkLoadTransCalcTable",
	SparkRunInfo:"SparkRunInfo",
	HDInsightConfiguration:"HDInsightConfiguration",
	SSLConfiguration:"SSLConfiguration",
	DataStoreBase:"DataStoreBase",
	DataStoreHive:"DataStoreHive",
	DataStoreHdfs:"DataStoreHdfs",
	DataStoreS3:"DataStoreS3",
	ComposeBaseParams:"ComposeBaseParams",
	SparkLoadTransSaveTables:"SparkLoadTransSaveTables",
	SparkDeleteDeltaTableFiles:"SparkDeleteDeltaTableFiles",
	SparkSqlByJdbc:"SparkSqlByJdbc",
	SparkSetValueState:"SparkSetValueState",
	SparkGetValueState:"SparkGetValueState",
	DataStoreAzure:"DataStoreAzure",
	DataStoreAzureBase:"DataStoreAzureBase",
	DataStoreAzureDataLake:"DataStoreAzureDataLake",
	HDInsightConfigurationBase:"HDInsightConfigurationBase",
	HDInsightConfigurationRemote:"HDInsightConfigurationRemote",
	HDInsightConfigurationLocal:"HDInsightConfigurationLocal",
	HDInsightConfigurationRemoteAgent:"HDInsightConfigurationRemoteAgent",
	DataStoreGoogleStorage:"DataStoreGoogleStorage",
	AzureDWHDbSettings:"AzureDWHDbSettings",
	SnowflakeDbSettings:"SnowflakeDbSettings",
	OracleDbSettings:"OracleDbSettings",
	RedshiftDbSettings:"RedshiftDbSettings",
	DataStoreDatabricks:"DataStoreDatabricks",
	DatabricksConfiguration:"DatabricksConfiguration",
	DataStoreGoogleBigQuery:"DataStoreGoogleBigQuery",
	BigQueryDbSettings:"BigQueryDbSettings",
	DataStoreGen2:"DataStoreGen2",
	DatabricksDbSettings:"DatabricksDbSettings"
};



DO.ComposeBirDefTypeIds_values = {
	ETLCommandsInfoDto:85001,
	ETLRunInfoDto:85002,
	ArchiveSettings:85003,
	HiveArchiveSettings:85004,
	DbBaseSettings:85005,
	SqlServerDbSettings:85006,
	TeradataDbSettings:85007,
	HiveDbSettings:85008,
	DatabaseDto:85009,
	Column:85010,
	DwhColumn:85011,
	AuthenticationSettings:85012,
	UserConfiguration:85013,
	UserAndPasswordConfiguration:85014,
	KerberosConfiguration:85015,
	HiveAuthenticationSettings:85016,
	HiveUserConfiguration:85017,
	HiveUserAndPasswordConfiguration:85018,
	HiveKerberosConfiguration:85019,
	HadoopAuthenticationSettings:85020,
	HadoopUserConfiguration:85021,
	HadoopUserAndPasswordConfiguration:85022,
	HadoopKerberosConfiguration:85023,
	TableData:85024,
	KnoxConfiguration:85025,
	SparkDbSettings:85026,
	SparkArchiveSettings:85027,
	SparkCommandBase:85028,
	SparkCommandInitialLoad:85029,
	SparkCommandCdc:85030,
	SparkCommandDelivery:85031,
	SparkDDLCommandBase:85032,
	SparkCreateTable:85033,
	DataSet:85034,
	SourceDataSet:85035,
	TargetDataSet:85036,
	SparkLoadTransSaveTable:85037,
	SparkFlowAnchor:85038,
	SparkInitialize:85039,
	SparkLoadTransCalcTable:85040,
	SparkRunInfo:85041,
	HDInsightConfiguration:85042,
	SSLConfiguration:85043,
	DataStoreBase:85044,
	DataStoreHive:85045,
	DataStoreHdfs:85046,
	DataStoreS3:85047,
	ComposeBaseParams:85048,
	SparkLoadTransSaveTables:85049,
	SparkDeleteDeltaTableFiles:85050,
	SparkSqlByJdbc:85052,
	SparkSetValueState:85053,
	SparkGetValueState:85054,
	DataStoreAzure:85055,
	DataStoreAzureBase:85056,
	DataStoreAzureDataLake:85057,
	HDInsightConfigurationBase:85058,
	HDInsightConfigurationRemote:85059,
	HDInsightConfigurationLocal:85060,
	HDInsightConfigurationRemoteAgent:85061,
	DataStoreGoogleStorage:85062,
	AzureDWHDbSettings:85063,
	SnowflakeDbSettings:85064,
	OracleDbSettings:85065,
	RedshiftDbSettings:85066,
	DataStoreDatabricks:85068,
	DatabricksConfiguration:85070,
	DataStoreGoogleBigQuery:85072,
	BigQueryDbSettings:85073,
	DataStoreGen2:85074,
	DatabricksDbSettings:85075
};

DO.ComposeBirDefTypeIds_displayNames = {
	ETLCommandsInfoDto:"ETLCommandsInfoDto",
	ETLRunInfoDto:"ETLRunInfoDto",
	ArchiveSettings:"ArchiveSettings",
	HiveArchiveSettings:"HiveArchiveSettings",
	DbBaseSettings:"DbBaseSettings",
	SqlServerDbSettings:"SqlServerDbSettings",
	TeradataDbSettings:"TeradataDbSettings",
	HiveDbSettings:"HiveDbSettings",
	DatabaseDto:"DatabaseDto",
	Column:"Column",
	DwhColumn:"DwhColumn",
	AuthenticationSettings:"AuthenticationSettings",
	UserConfiguration:"UserConfiguration",
	UserAndPasswordConfiguration:"UserAndPasswordConfiguration",
	KerberosConfiguration:"KerberosConfiguration",
	HiveAuthenticationSettings:"HiveAuthenticationSettings",
	HiveUserConfiguration:"HiveUserConfiguration",
	HiveUserAndPasswordConfiguration:"HiveUserAndPasswordConfiguration",
	HiveKerberosConfiguration:"HiveKerberosConfiguration",
	HadoopAuthenticationSettings:"HadoopAuthenticationSettings",
	HadoopUserConfiguration:"HadoopUserConfiguration",
	HadoopUserAndPasswordConfiguration:"HadoopUserAndPasswordConfiguration",
	HadoopKerberosConfiguration:"HadoopKerberosConfiguration",
	TableData:"TableData",
	KnoxConfiguration:"KnoxConfiguration",
	SparkDbSettings:"SparkDbSettings",
	SparkArchiveSettings:"SparkArchiveSettings",
	SparkCommandBase:"SparkCommandBase",
	SparkCommandInitialLoad:"SparkCommandInitialLoad",
	SparkCommandCdc:"SparkCommandCdc",
	SparkCommandDelivery:"SparkCommandDelivery",
	SparkDDLCommandBase:"SparkDDLCommandBase",
	SparkCreateTable:"SparkCreateTable",
	DataSet:"DataSet",
	SourceDataSet:"SourceDataSet",
	TargetDataSet:"TargetDataSet",
	SparkLoadTransSaveTable:"SparkLoadTransSaveTable",
	SparkFlowAnchor:"SparkFlowAnchor",
	SparkInitialize:"SparkInitialize",
	SparkLoadTransCalcTable:"SparkLoadTransCalcTable",
	SparkRunInfo:"SparkRunInfo",
	HDInsightConfiguration:"HDInsightConfiguration",
	SSLConfiguration:"SSLConfiguration",
	DataStoreBase:"DataStoreBase",
	DataStoreHive:"DataStoreHive",
	DataStoreHdfs:"DataStoreHdfs",
	DataStoreS3:"DataStoreS3",
	ComposeBaseParams:"ComposeBaseParams",
	SparkLoadTransSaveTables:"SparkLoadTransSaveTables",
	SparkDeleteDeltaTableFiles:"SparkDeleteDeltaTableFiles",
	SparkSqlByJdbc:"SparkSqlByJdbc",
	SparkSetValueState:"SparkSetValueState",
	SparkGetValueState:"SparkGetValueState",
	DataStoreAzure:"DataStoreAzure",
	DataStoreAzureBase:"DataStoreAzureBase",
	DataStoreAzureDataLake:"DataStoreAzureDataLake",
	HDInsightConfigurationBase:"HDInsightConfigurationBase",
	HDInsightConfigurationRemote:"HDInsightConfigurationRemote",
	HDInsightConfigurationLocal:"HDInsightConfigurationLocal",
	HDInsightConfigurationRemoteAgent:"HDInsightConfigurationRemoteAgent",
	DataStoreGoogleStorage:"DataStoreGoogleStorage",
	AzureDWHDbSettings:"AzureDWHDbSettings",
	SnowflakeDbSettings:"SnowflakeDbSettings",
	OracleDbSettings:"OracleDbSettings",
	RedshiftDbSettings:"RedshiftDbSettings",
	DataStoreDatabricks:"DataStoreDatabricks",
	DatabricksConfiguration:"DatabricksConfiguration",
	DataStoreGoogleBigQuery:"DataStoreGoogleBigQuery",
	BigQueryDbSettings:"BigQueryDbSettings",
	DataStoreGen2:"DataStoreGen2",
	DatabricksDbSettings:"DatabricksDbSettings"
};

DO.AzurePrimaryIndexType = {
	HASH:"HASH",
	ROUND_ROBIN:"ROUND_ROBIN",
	REPLICATE:"REPLICATE"
};



DO.AzurePrimaryIndexType_values = {
	HASH:1,
	ROUND_ROBIN:2,
	REPLICATE:3
};

DO.AzurePrimaryIndexType_displayNames = {
	HASH:"HASH",
	ROUND_ROBIN:"ROUND_ROBIN",
	REPLICATE:"REPLICATE"
};

DO.RedshiftPrimaryIndexType = {
	EVEN:"EVEN",
	KEY:"KEY",
	ALL:"ALL"
};



DO.RedshiftPrimaryIndexType_values = {
	EVEN:1,
	KEY:2,
	ALL:3
};

DO.RedshiftPrimaryIndexType_displayNames = {
	EVEN:"EVEN",
	KEY:"KEY",
	ALL:"ALL"
};

DO.Dbms = {
	MSACCESS:"MSACCESS",
	SQLSERVER:"SQLSERVER",
	ORACLE:"ORACLE",
	NETEZZA:"NETEZZA",
	MYSQL:"MYSQL",
	DB2:"DB2",
	REDSHIFT:"REDSHIFT",
	AZURE:"AZURE",
	DUMMY:"DUMMY",
	HADOOP:"HADOOP",
	SNOWFLAKE:"SNOWFLAKE",
	BIGQUERY:"BIGQUERY",
	HADOOPSPARK:"HADOOPSPARK",
	DATABRICKSDELTA:"DATABRICKSDELTA",
	EMRHIVE:"EMRHIVE",
	CDPHIVE:"CDPHIVE",
	HDINSIGHTHIVE:"HDINSIGHTHIVE",
	DATAPROCHIVE:"DATAPROCHIVE",
	_LAST:"_LAST"
};



DO.Dbms_values = {
	MSACCESS:0,
	SQLSERVER:1,
	ORACLE:2,
	NETEZZA:3,
	MYSQL:5,
	DB2:6,
	REDSHIFT:7,
	AZURE:8,
	DUMMY:9,
	HADOOP:10,
	SNOWFLAKE:11,
	BIGQUERY:12,
	HADOOPSPARK:21,
	DATABRICKSDELTA:22,
	EMRHIVE:23,
	CDPHIVE:24,
	HDINSIGHTHIVE:25,
	DATAPROCHIVE:26,
	_LAST:99
};

DO.Dbms_displayNames = {
	MSACCESS:"MSACCESS",
	SQLSERVER:"SQLSERVER",
	ORACLE:"ORACLE",
	NETEZZA:"NETEZZA",
	MYSQL:"MYSQL",
	DB2:"DB2",
	REDSHIFT:"REDSHIFT",
	AZURE:"AZURE",
	DUMMY:"DUMMY",
	HADOOP:"HADOOP",
	SNOWFLAKE:"SNOWFLAKE",
	BIGQUERY:"BIGQUERY",
	HADOOPSPARK:"HADOOPSPARK",
	DATABRICKSDELTA:"DATABRICKSDELTA",
	EMRHIVE:"EMRHIVE",
	CDPHIVE:"CDPHIVE",
	HDINSIGHTHIVE:"HDINSIGHTHIVE",
	DATAPROCHIVE:"DATAPROCHIVE",
	_LAST:"_LAST"
};

DO.ComposeSharedTypeIds = {
	DistributionInfo:"DistributionInfo",
	DBMetaDataDto:"DBMetaDataDto",
	RedshiftDistributionInfo:"RedshiftDistributionInfo",
	DiscoverTablePattern:"DiscoverTablePattern",
	TableMetaData:"TableMetaData",
	TableSettings:"TableSettings",
	HiveTableSettings:"HiveTableSettings"
};



DO.ComposeSharedTypeIds_values = {
	DistributionInfo:127001,
	DBMetaDataDto:127002,
	RedshiftDistributionInfo:127004,
	DiscoverTablePattern:127005,
	TableMetaData:127006,
	TableSettings:127007,
	HiveTableSettings:127008
};

DO.ComposeSharedTypeIds_displayNames = {
	DistributionInfo:"DistributionInfo",
	DBMetaDataDto:"DBMetaDataDto",
	RedshiftDistributionInfo:"RedshiftDistributionInfo",
	DiscoverTablePattern:"DiscoverTablePattern",
	TableMetaData:"TableMetaData",
	TableSettings:"TableSettings",
	HiveTableSettings:"HiveTableSettings"
};

DO.RceConnectionInfoItemBrowseType = {
	NONE:"NONE",
	LIST:"LIST",
	FILE_SYSTEM:"FILE_SYSTEM"
};



DO.RceConnectionInfoItemBrowseType_values = {
	NONE:0,
	LIST:1,
	FILE_SYSTEM:2
};

DO.RceConnectionInfoItemBrowseType_displayNames = {
	NONE:"NONE",
	LIST:"LIST",
	FILE_SYSTEM:"FILE_SYSTEM"
};

DO.RceConnectionInfoItemType = {
	STRING:"STRING",
	NUMBER:"NUMBER",
	ENUM:"ENUM",
	BOOL:"BOOL",
	BINARY:"BINARY"
};



DO.RceConnectionInfoItemType_values = {
	STRING:0,
	NUMBER:1,
	ENUM:2,
	BOOL:3,
	BINARY:4
};

DO.RceConnectionInfoItemType_displayNames = {
	STRING:"STRING",
	NUMBER:"NUMBER",
	ENUM:"ENUM",
	BOOL:"BOOL",
	BINARY:"BINARY"
};

DO.VersionControlType = {
	Git:"Git"
};



DO.VersionControlType_values = {
	Git:0
};

DO.VersionControlType_displayNames = {
	Git:"Git"
};

DO.LicenseType = {
	PERMANENT:"PERMANENT",
	EVALUATION:"EVALUATION"
};



DO.LicenseType_values = {
	PERMANENT:1,
	EVALUATION:2
};

DO.LicenseType_displayNames = {
	PERMANENT:"PERMANENT",
	EVALUATION:"EVALUATION"
};

DO.Product = {
	Company:"Company",
	ProductName:"ProductName",
	Monitor:"Monitor",
	Design:"Design"
};



DO.Product_values = {
	Company:1,
	ProductName:2,
	Monitor:3,
	Design:4
};

DO.Product_displayNames = {
	Company:"Qlik",
	ProductName:"Compose",
	Monitor:"Monitor",
	Design:"Design"
};

DO.DWH_TABLE_TYPE = {
	HUB:"HUB",
	SAT:"SAT",
	LNK:"LNK"
};



DO.DWH_TABLE_TYPE_values = {
	HUB:0,
	SAT:1,
	LNK:2
};

DO.DWH_TABLE_TYPE_displayNames = {
	HUB:"HUB",
	SAT:"SAT",
	LNK:"LNK"
};

DO.DmTableType = {
	DIMENSION:"DIMENSION",
	FACT:"FACT",
	AGGREGATED_FACT:"AGGREGATED_FACT"
};



DO.DmTableType_values = {
	DIMENSION:0,
	FACT:1,
	AGGREGATED_FACT:2
};

DO.DmTableType_displayNames = {
	DIMENSION:"DIMENSION",
	FACT:"FACT",
	AGGREGATED_FACT:"AGGREGATED_FACT"
};

DO.TLOG_OPERATION_TYPE = {
	U:"U",
	I:"I",
	D:"D"
};



DO.TLOG_OPERATION_TYPE_values = {
	U:0,
	I:1,
	D:2
};

DO.TLOG_OPERATION_TYPE_displayNames = {
	U:"U",
	I:"I",
	D:"D"
};

DO.TLOG_TABLE_TYPE = {
	DEL:"DEL",
	TDWH:"TDWH",
	TDWM:"TDWM"
};



DO.TLOG_TABLE_TYPE_values = {
	DEL:0,
	TDWH:1,
	TDWM:2
};

DO.TLOG_TABLE_TYPE_displayNames = {
	DEL:"DEL",
	TDWH:"TDWH",
	TDWM:"TDWM"
};

DO.POPULATE_OPERATION = {
	INSERTS:"INSERTS",
	UPDATES:"UPDATES",
	DELETES:"DELETES"
};



DO.POPULATE_OPERATION_values = {
	INSERTS:0,
	UPDATES:1,
	DELETES:2
};

DO.POPULATE_OPERATION_displayNames = {
	INSERTS:"INSERTS",
	UPDATES:"UPDATES",
	DELETES:"DELETES"
};

DO.RULE_ACTION = {
	REJECT_AND_REPORT:"REJECT_AND_REPORT",
	REJECT_SILENTLY:"REJECT_SILENTLY",
	REJECT_AND_ABORT:"REJECT_AND_ABORT",
	ACCEPT_AND_REPORT:"ACCEPT_AND_REPORT"
};



DO.RULE_ACTION_values = {
	REJECT_AND_REPORT:0,
	REJECT_SILENTLY:1,
	REJECT_AND_ABORT:2,
	ACCEPT_AND_REPORT:3
};

DO.RULE_ACTION_displayNames = {
	REJECT_AND_REPORT:"REJECT_AND_REPORT",
	REJECT_SILENTLY:"REJECT_SILENTLY",
	REJECT_AND_ABORT:"REJECT_AND_ABORT",
	ACCEPT_AND_REPORT:"ACCEPT_AND_REPORT"
};

DO.CLEANSING_RULE_ACTION = {
	CLEANSE_SILENTLY:"CLEANSE_SILENTLY",
	CLEANSE_AND_REPORT:"CLEANSE_AND_REPORT"
};



DO.CLEANSING_RULE_ACTION_values = {
	CLEANSE_SILENTLY:0,
	CLEANSE_AND_REPORT:1
};

DO.CLEANSING_RULE_ACTION_displayNames = {
	CLEANSE_SILENTLY:"CLEANSE_SILENTLY",
	CLEANSE_AND_REPORT:"CLEANSE_AND_REPORT"
};

DO.TASK_TYPE = {
	DW:"DW",
	DM:"DM",
	WF:"WF",
	STORAGE:"STORAGE"
};



DO.TASK_TYPE_values = {
	DW:0,
	DM:1,
	WF:2,
	STORAGE:3
};

DO.TASK_TYPE_displayNames = {
	DW:"DW",
	DM:"DM",
	WF:"WF",
	STORAGE:"STORAGE"
};

DO.CSV_TYPE = {
	ALL:"ALL",
	MODEL:"MODEL",
	MAPPINGS:"MAPPINGS",
	DATAMARTS:"DATAMARTS",
	DATAWAREHOUSETASKS:"DATAWAREHOUSETASKS",
	DATAWAREHOUSE:"DATAWAREHOUSE"
};



DO.CSV_TYPE_values = {
	ALL:0,
	MODEL:1,
	MAPPINGS:2,
	DATAMARTS:3,
	DATAWAREHOUSETASKS:4,
	DATAWAREHOUSE:5
};

DO.CSV_TYPE_displayNames = {
	ALL:"ALL",
	MODEL:"MODEL",
	MAPPINGS:"MAPPINGS",
	DATAMARTS:"DATAMARTS",
	DATAWAREHOUSETASKS:"DATAWAREHOUSETASKS",
	DATAWAREHOUSE:"DATAWAREHOUSE"
};

DO.CSV_MODEL_FILE_TYPE = {
	ALL:"ALL",
	ATTRIBUTESDOMAIN:"ATTRIBUTESDOMAIN",
	ENTITIES:"ENTITIES",
	ATTRIBUTES:"ATTRIBUTES",
	RELATIONSHIPS:"RELATIONSHIPS",
	REUSABLETRANSFORMATIONS:"REUSABLETRANSFORMATIONS",
	REUSABLETRANSFORMATIONPARAMS:"REUSABLETRANSFORMATIONPARAMS"
};



DO.CSV_MODEL_FILE_TYPE_values = {
	ALL:0,
	ATTRIBUTESDOMAIN:1,
	ENTITIES:2,
	ATTRIBUTES:3,
	RELATIONSHIPS:4,
	REUSABLETRANSFORMATIONS:5,
	REUSABLETRANSFORMATIONPARAMS:6
};

DO.CSV_MODEL_FILE_TYPE_displayNames = {
	ALL:"ALL",
	ATTRIBUTESDOMAIN:"ATTRIBUTESDOMAIN",
	ENTITIES:"ENTITIES",
	ATTRIBUTES:"ATTRIBUTES",
	RELATIONSHIPS:"RELATIONSHIPS",
	REUSABLETRANSFORMATIONS:"REUSABLETRANSFORMATIONS",
	REUSABLETRANSFORMATIONPARAMS:"REUSABLETRANSFORMATIONPARAMS"
};

DO.CSV_MAPPING_FILE_TYPE = {
	ALL:"ALL",
	MAPPINGSMETADATA:"MAPPINGSMETADATA",
	MAPPINGS:"MAPPINGS"
};



DO.CSV_MAPPING_FILE_TYPE_values = {
	ALL:0,
	MAPPINGSMETADATA:1,
	MAPPINGS:2
};

DO.CSV_MAPPING_FILE_TYPE_displayNames = {
	ALL:"ALL",
	MAPPINGSMETADATA:"MAPPINGSMETADATA",
	MAPPINGS:"MAPPINGS"
};

DO.CSV_DATAMART_FILE_TYPE = {
	ALL:"ALL",
	DATAMARTS:"DATAMARTS",
	FACTS:"FACTS",
	STARSCHEMAS:"STARSCHEMAS",
	FACTATTRIBUTES:"FACTATTRIBUTES",
	DIMENSIONATTRIBUTES:"DIMENSIONATTRIBUTES",
	TASKSETTINGS:"TASKSETTINGS",
	CUSTOMETL:"CUSTOMETL"
};



DO.CSV_DATAMART_FILE_TYPE_values = {
	ALL:0,
	DATAMARTS:1,
	FACTS:3,
	STARSCHEMAS:4,
	FACTATTRIBUTES:5,
	DIMENSIONATTRIBUTES:6,
	TASKSETTINGS:7,
	CUSTOMETL:8
};

DO.CSV_DATAMART_FILE_TYPE_displayNames = {
	ALL:"ALL",
	DATAMARTS:"DATAMARTS",
	FACTS:"FACTS",
	STARSCHEMAS:"STARSCHEMAS",
	FACTATTRIBUTES:"FACTATTRIBUTES",
	DIMENSIONATTRIBUTES:"DIMENSIONATTRIBUTES",
	TASKSETTINGS:"TASKSETTINGS",
	CUSTOMETL:"CUSTOMETL"
};

DO.CSV_DWH_TASK_FILE_TYPE = {
	ALL:"ALL",
	TASKS:"TASKS",
	TASKSETTINGS:"TASKSETTINGS",
	TASKMAPPINGS:"TASKMAPPINGS",
	TASKDATAWAREHOUSETABLES:"TASKDATAWAREHOUSETABLES",
	TASKCUSTOMETL:"TASKCUSTOMETL",
	CUSTOMETL:"CUSTOMETL"
};



DO.CSV_DWH_TASK_FILE_TYPE_values = {
	ALL:0,
	TASKS:1,
	TASKSETTINGS:2,
	TASKMAPPINGS:3,
	TASKDATAWAREHOUSETABLES:4,
	TASKCUSTOMETL:5,
	CUSTOMETL:6
};

DO.CSV_DWH_TASK_FILE_TYPE_displayNames = {
	ALL:"ALL",
	TASKS:"TASKS",
	TASKSETTINGS:"TASKSETTINGS",
	TASKMAPPINGS:"TASKMAPPINGS",
	TASKDATAWAREHOUSETABLES:"TASKDATAWAREHOUSETABLES",
	TASKCUSTOMETL:"TASKCUSTOMETL",
	CUSTOMETL:"CUSTOMETL"
};

DO.OPERATION_TYPE = {
	DiscoverModel:"DiscoverModel",
	ERWinImport:"ERWinImport",
	CreateDWH:"CreateDWH",
	GenerateDWH:"GenerateDWH",
	PopulateDWH:"PopulateDWH",
	AdjustDWH:"AdjustDWH",
	CompareDWH:"CompareDWH",
	DropDWH:"DropDWH",
	DropModel:"DropModel",
	DropEtlTables:"DropEtlTables",
	DropLogTables:"DropLogTables",
	CreateEtlTables:"CreateEtlTables",
	CreateLogTables:"CreateLogTables",
	DropTempTables:"DropTempTables",
	CreateDataMart:"CreateDataMart",
	GenerateETL:"GenerateETL",
	CleanDWH:"CleanDWH",
	None:"None",
	DropErrorMarts:"DropErrorMarts",
	RecreateDLViews:"RecreateDLViews"
};



DO.OPERATION_TYPE_values = {
	DiscoverModel:0,
	ERWinImport:1,
	CreateDWH:2,
	GenerateDWH:3,
	PopulateDWH:4,
	AdjustDWH:5,
	CompareDWH:6,
	DropDWH:7,
	DropModel:8,
	DropEtlTables:9,
	DropLogTables:10,
	CreateEtlTables:11,
	CreateLogTables:12,
	DropTempTables:13,
	CreateDataMart:14,
	GenerateETL:15,
	CleanDWH:16,
	None:17,
	DropErrorMarts:18,
	RecreateDLViews:19
};

DO.OPERATION_TYPE_displayNames = {
	DiscoverModel:"DiscoverModel",
	ERWinImport:"ERWinImport",
	CreateDWH:"CreateDWH",
	GenerateDWH:"GenerateDWH",
	PopulateDWH:"PopulateDWH",
	AdjustDWH:"AdjustDWH",
	CompareDWH:"CompareDWH",
	DropDWH:"DropDWH",
	DropModel:"DropModel",
	DropEtlTables:"DropEtlTables",
	DropLogTables:"DropLogTables",
	CreateEtlTables:"CreateEtlTables",
	CreateLogTables:"CreateLogTables",
	DropTempTables:"DropTempTables",
	CreateDataMart:"CreateDataMart",
	GenerateETL:"GenerateETL",
	CleanDWH:"CleanDWH",
	None:"None",
	DropErrorMarts:"DropErrorMarts",
	RecreateDLViews:"RecreateDLViews"
};

DO.RULE_TYPE = {
	EXPRESSION:"EXPRESSION"
};



DO.RULE_TYPE_values = {
	EXPRESSION:0
};

DO.RULE_TYPE_displayNames = {
	EXPRESSION:"EXPRESSION"
};

DO.CustomeETLType = {
	PreStaging:"PreStaging",
	PostStaging:"PostStaging",
	PreDWH:"PreDWH",
	PostDWH:"PostDWH",
	PreDataMart:"PreDataMart",
	PostDataMart:"PostDataMart",
	__ALL_:"__ALL_"
};



DO.CustomeETLType_values = {
	PreStaging:0,
	PostStaging:1,
	PreDWH:2,
	PostDWH:3,
	PreDataMart:4,
	PostDataMart:5,
	__ALL_:6
};

DO.CustomeETLType_displayNames = {
	PreStaging:"PreStaging",
	PostStaging:"PostStaging",
	PreDWH:"PreDWH",
	PostDWH:"PostDWH",
	PreDataMart:"PreDataMart",
	PostDataMart:"PostDataMart",
	__ALL_:"__ALL_"
};

DO.ETLProcessType = {
	None:"None",
	Initial:"Initial",
	RunSql:"RunSql",
	RunLDR:"RunLDR",
	RUNDDL:"RUNDDL",
	MAPPING:"MAPPING",
	CALC:"CALC",
	MOPPING:"MOPPING"
};



DO.ETLProcessType_values = {
	None:0,
	Initial:1,
	RunSql:2,
	RunLDR:3,
	RUNDDL:4,
	MAPPING:5,
	CALC:6,
	MOPPING:7
};

DO.ETLProcessType_displayNames = {
	None:"None",
	Initial:"Initial",
	RunSql:"RunSql",
	RunLDR:"RunLDR",
	RUNDDL:"RUNDDL",
	MAPPING:"MAPPING",
	CALC:"CALC",
	MOPPING:"MOPPING"
};

DO.CompType = {
	FAILED:"FAILED",
	EQ:"EQ",
	LT:"LT",
	GT:"GT"
};



DO.CompType_values = {
	FAILED:0,
	EQ:1,
	LT:2,
	GT:3
};

DO.CompType_displayNames = {
	FAILED:"FAILED",
	EQ:"EQ",
	LT:"LT",
	GT:"GT"
};

DO.db_object = {
	TABLE:"TABLE",
	VIEW:"VIEW",
	INDEX:"INDEX"
};



DO.db_object_values = {
	TABLE:0,
	VIEW:1,
	INDEX:2
};

DO.db_object_displayNames = {
	TABLE:"TABLE",
	VIEW:"VIEW",
	INDEX:"INDEX"
};

DO.AggregatedFunction = {
	GROUPBY:"GROUPBY",
	SUM:"SUM",
	COUNT:"COUNT",
	MAX:"MAX",
	MIN:"MIN",
	COUNT_DISTINCT:"COUNT_DISTINCT"
};



DO.AggregatedFunction_values = {
	GROUPBY:0,
	SUM:1,
	COUNT:2,
	MAX:3,
	MIN:4,
	COUNT_DISTINCT:5
};

DO.AggregatedFunction_displayNames = {
	GROUPBY:"GROUPBY",
	SUM:"SUM",
	COUNT:"COUNT",
	MAX:"MAX",
	MIN:"MIN",
	COUNT_DISTINCT:"COUNT_DISTINCT"
};

DO.DuplicateEtlType = {
	FULL_LOAD_AND_CDC:"FULL_LOAD_AND_CDC",
	FULL_LOAD:"FULL_LOAD",
	CDC_ONLY:"CDC_ONLY"
};



DO.DuplicateEtlType_values = {
	FULL_LOAD_AND_CDC:0,
	FULL_LOAD:1,
	CDC_ONLY:2
};

DO.DuplicateEtlType_displayNames = {
	FULL_LOAD_AND_CDC:"Full Load and Change Tables",
	FULL_LOAD:"Full Load Only",
	CDC_ONLY:"Change Tables Only"
};

DO.MappingType = {
	TABLE:"TABLE",
	VIEW:"VIEW",
	QUERY:"QUERY"
};



DO.MappingType_values = {
	TABLE:0,
	VIEW:1,
	QUERY:2
};

DO.MappingType_displayNames = {
	TABLE:"TABLE",
	VIEW:"VIEW",
	QUERY:"QUERY"
};

DO.DatalakeDeploymentType = {
	Azure:"Azure",
	AWS:"AWS",
	ONPREMISE:"ONPREMISE",
	GCP:"GCP"
};



DO.DatalakeDeploymentType_values = {
	Azure:0,
	AWS:1,
	ONPREMISE:2,
	GCP:3
};

DO.DatalakeDeploymentType_displayNames = {
	Azure:"Microsoft Azure",
	AWS:"Amazon Web Services (AWS)",
	ONPREMISE:"On-premises",
	GCP:"Google Cloud Platform (GCP)"
};

DO.DatalakeComputeType = {
	DATABRICKS:"DATABRICKS",
	EMR:"EMR",
	CDP:"CDP",
	DATAPROC:"DATAPROC",
	HDINSIGHT:"HDINSIGHT"
};



DO.DatalakeComputeType_values = {
	DATABRICKS:0,
	EMR:1,
	CDP:2,
	DATAPROC:3,
	HDINSIGHT:4
};

DO.DatalakeComputeType_displayNames = {
	DATABRICKS:"Databricks",
	EMR:"Amazon EMR",
	CDP:"Cloudera Data Platform (CDP)",
	DATAPROC:"Dataproc",
	HDINSIGHT:"HDInsight"
};

DO.DeleteType = {
	DONOTHING:"DONOTHING",
	SOFTDELETE:"SOFTDELETE",
	HARDDELETE:"HARDDELETE"
};



DO.DeleteType_values = {
	DONOTHING:0,
	SOFTDELETE:1,
	HARDDELETE:2
};

DO.DeleteType_displayNames = {
	DONOTHING:"DONOTHING",
	SOFTDELETE:"SOFTDELETE",
	HARDDELETE:"HARDDELETE"
};

DO.ProjectType = {
	DWH:"DWH",
	DL:"DL"
};



DO.ProjectType_values = {
	DWH:0,
	DL:1
};

DO.ProjectType_displayNames = {
	DWH:"Data Warehouse",
	DL:"Data Lake"
};

DO.EnvironmentType = {
	OTHER:"OTHER",
	DEVELOPMENT:"DEVELOPMENT",
	TEST:"TEST",
	ACCEPTANCE:"ACCEPTANCE",
	PRODUCTION:"PRODUCTION"
};



DO.EnvironmentType_values = {
	OTHER:0,
	DEVELOPMENT:1,
	TEST:2,
	ACCEPTANCE:3,
	PRODUCTION:4
};

DO.EnvironmentType_displayNames = {
	OTHER:"Other",
	DEVELOPMENT:"Development",
	TEST:"Test",
	ACCEPTANCE:"Acceptance",
	PRODUCTION:"Production"
};

DO.TableModifierTypes = {
	NONE:"NONE",
	CUSTOM:"CUSTOM"
};



DO.TableModifierTypes_values = {
	NONE:1,
	CUSTOM:2
};

DO.TableModifierTypes_displayNames = {
	NONE:"No table modifier",
	CUSTOM:"Custom"
};

DO.CheckProjectErrors = {
	NO_ERROR:"NO_ERROR",
	ENTITY_NO_ATTRIBUTES:"ENTITY_NO_ATTRIBUTES",
	ENTITY_NO_PK:"ENTITY_NO_PK",
	ATTRIBUTE_NOT_IN_USE:"ATTRIBUTE_NOT_IN_USE",
	ENTITY_WITH_DUPLICATE_COLUMN_NAME:"ENTITY_WITH_DUPLICATE_COLUMN_NAME",
	ENTITY_WITH_CYCLE_RELATIONS:"ENTITY_WITH_CYCLE_RELATIONS",
	BLOCK_DIFFERENT_HISTORY:"BLOCK_DIFFERENT_HISTORY",
	PK_DEFINED_WITH_HISTORY:"PK_DEFINED_WITH_HISTORY",
	ATTRIBUTE_NAME_EXCEED_MAX_LENGTH:"ATTRIBUTE_NAME_EXCEED_MAX_LENGTH",
	ENTITY_NAME_EXCEED_MAX_LENGTH:"ENTITY_NAME_EXCEED_MAX_LENGTH",
	FACT_DIM_TABLE_NO_COLUMNS:"FACT_DIM_TABLE_NO_COLUMNS",
	MAPPING_WITH_NO_CONNECTION:"MAPPING_WITH_NO_CONNECTION",
	NO_SOURCE_FOR_STAGING_COLUMN:"NO_SOURCE_FOR_STAGING_COLUMN",
	NO_SOURCE_FOR_PRIMARY_COLUMN:"NO_SOURCE_FOR_PRIMARY_COLUMN",
	NON_TRANSACTIONAL_FACT_DATE_DEFINED:"NON_TRANSACTIONAL_FACT_DATE_DEFINED",
	TRANSACTIONAL_FACT_DATE_NOT_DEFINED:"TRANSACTIONAL_FACT_DATE_NOT_DEFINED",
	MAPPING_TO_UNDEFINED_ENVIRONMENT:"MAPPING_TO_UNDEFINED_ENVIRONMENT",
	MAPPING_TO_UNDEFINED_TABLE:"MAPPING_TO_UNDEFINED_TABLE",
	MAPPING_TO_UNDEFINED_COLUMN:"MAPPING_TO_UNDEFINED_COLUMN",
	MAPPING_TO_DIFFERENET_DATA_TYPE:"MAPPING_TO_DIFFERENET_DATA_TYPE",
	ENTITY_RESERVED_NAME:"ENTITY_RESERVED_NAME",
	ATTRIBUTE_RESERVED_NAME:"ATTRIBUTE_RESERVED_NAME",
	MULTI_PK_WITH_ATT_NO_HISTORY:"MULTI_PK_WITH_ATT_NO_HISTORY",
	VARCHAR_COLUMN_EXCEEDED_MAX_LENGTH:"VARCHAR_COLUMN_EXCEEDED_MAX_LENGTH",
	AMBIGUOUS_FILTER_COLUMN_NAME:"AMBIGUOUS_FILTER_COLUMN_NAME",
	SOURCE_TARGET_DIFFERENT_SERVER:"SOURCE_TARGET_DIFFERENT_SERVER",
	EXPRESSION_NOT_DEFINED:"EXPRESSION_NOT_DEFINED",
	DUPLICATE_VIEW_NAME:"DUPLICATE_VIEW_NAME",
	DUPLICATE_TABLE_NAME:"DUPLICATE_TABLE_NAME",
	AGG_FUNC_TYPE_NOT_VALID:"AGG_FUNC_TYPE_NOT_VALID",
	NO_GROUP_BY_COLUMNS:"NO_GROUP_BY_COLUMNS",
	MAPPING_NOT_DEFINED:"MAPPING_NOT_DEFINED",
	ENTITY_EXCEED_MAX_OF_ATTRIBUTES:"ENTITY_EXCEED_MAX_OF_ATTRIBUTES",
	ERROR_DUPLICATE_ENTITY_NAME:"ERROR_DUPLICATE_ENTITY_NAME",
	DUPLICATE_COLUMN_NAME:"DUPLICATE_COLUMN_NAME",
	ENTITY_EXCEED_MAX_ROW_SIZE:"ENTITY_EXCEED_MAX_ROW_SIZE",
	COLUMN_NOT_VALID:"COLUMN_NOT_VALID",
	STAR_SCHEMA_NOT_VALID:"STAR_SCHEMA_NOT_VALID",
	DATA_MART_EXPRESSION_NEED_TO_BE_ADJUSTED:"DATA_MART_EXPRESSION_NEED_TO_BE_ADJUSTED",
	DECIMAL_COLUMN_EXCEEDED_MAX_PRECISION:"DECIMAL_COLUMN_EXCEEDED_MAX_PRECISION",
	BINARY_COLUMN_EXCEEDED_MAX_LENGTH:"BINARY_COLUMN_EXCEEDED_MAX_LENGTH",
	NO_MAPPINGS_DEFINED:"NO_MAPPINGS_DEFINED",
	RECURSIVE_DERIVED_ATTRIBUTE:"RECURSIVE_DERIVED_ATTRIBUTE",
	DIMENSION_SHOULD_BE_DELETED:"DIMENSION_SHOULD_BE_DELETED",
	ENTITY_NAME_INCLUDE_INVALID_CHARACTER:"ENTITY_NAME_INCLUDE_INVALID_CHARACTER",
	ATTRIBUTE_NAME_INCLUDE_INVALID_CHARACTER:"ATTRIBUTE_NAME_INCLUDE_INVALID_CHARACTER",
	DIFF_DIMENSION_HISTORY_TYPE_FROM_ENTITY:"DIFF_DIMENSION_HISTORY_TYPE_FROM_ENTITY",
	LOOKUP_RESULT_MISSING:"LOOKUP_RESULT_MISSING",
	LOOKUP_CONDITION_MISSING:"LOOKUP_CONDITION_MISSING",
	LOOKUP_TABLE_MISSING:"LOOKUP_TABLE_MISSING",
	LOOKUP_CONDITION_INCORRECT:"LOOKUP_CONDITION_INCORRECT",
	LOOKUP_RESULT_INCORRECT_TYPE:"LOOKUP_RESULT_INCORRECT_TYPE",
	LOOKUP_RESULT_INCORRECT_SYNTAX:"LOOKUP_RESULT_INCORRECT_SYNTAX",
	TRANSACTION_DATE_COLUMN_NOT_VALID:"TRANSACTION_DATE_COLUMN_NOT_VALID",
	TRANSFORMATION_INVALID:"TRANSFORMATION_INVALID",
	TRANSFORMATION_NOT_FOUND:"TRANSFORMATION_NOT_FOUND",
	TRANSFORMATION_PARAM_NUMBER_INCORRECT:"TRANSFORMATION_PARAM_NUMBER_INCORRECT",
	TRANSFORMATION_BRACKETS_ERROR:"TRANSFORMATION_BRACKETS_ERROR",
	TRANSFORMATION_ILLEGAL_RECUSION:"TRANSFORMATION_ILLEGAL_RECUSION",
	TRANSFORMATION_UNDEFINED_DATATYPE:"TRANSFORMATION_UNDEFINED_DATATYPE",
	PHYSICAL_TABLE_PROPERTIES_INDEX_TYPE:"PHYSICAL_TABLE_PROPERTIES_INDEX_TYPE",
	DECIMAL_COLUMN_SCALE_EXCEEDED_PRECISION:"DECIMAL_COLUMN_SCALE_EXCEEDED_PRECISION",
	PHYSICAL_TABLE_PROPERTIES_SORT_KEY:"PHYSICAL_TABLE_PROPERTIES_SORT_KEY",
	INIT_LOAD_LOOKUP:"INIT_LOAD_LOOKUP",
	INIT_LOAD_DATA_QUALITY:"INIT_LOAD_DATA_QUALITY",
	INIT_LOAD_DERIVED_ATTRIBUTES:"INIT_LOAD_DERIVED_ATTRIBUTES",
	INIT_LOAD_CLEANSING:"INIT_LOAD_CLEANSING",
	INIT_LOAD_DUPLICATES:"INIT_LOAD_DUPLICATES",
	INIT_LOAD_MAPPINGS:"INIT_LOAD_MAPPINGS",
	INIT_LOAD_MAPPING_FROM_QUERY:"INIT_LOAD_MAPPING_FROM_QUERY",
	CDC_ETL_MAPPING_QUERY:"CDC_ETL_MAPPING_QUERY",
	FACT_DIMENSION_EXCEED_MAX_OF_COLUMNS:"FACT_DIMENSION_EXCEED_MAX_OF_COLUMNS",
	ARCHIVE_CT_NAME_EXCEED_MAX_OF_ATTRIBUTES:"ARCHIVE_CT_NAME_EXCEED_MAX_OF_ATTRIBUTES",
	CORRUPTED_ROLE:"CORRUPTED_ROLE",
	ENTITY_NAME_CONTAINS_SPACE:"ENTITY_NAME_CONTAINS_SPACE",
	ATTRIBUTE_NAME_CONTAINS_SPACE:"ATTRIBUTE_NAME_CONTAINS_SPACE",
	TASK_INCLUDE_MAPPINGS_FROM_DIFFERNT_SOURCES:"TASK_INCLUDE_MAPPINGS_FROM_DIFFERNT_SOURCES",
	TOO_MANY_ERRORS:"TOO_MANY_ERRORS",
	CONSOLIDATION_MAPPING_ON_QUERY:"CONSOLIDATION_MAPPING_ON_QUERY",
	CONSOLIDATION_LANDING_SCHEMA_ASTERIK:"CONSOLIDATION_LANDING_SCHEMA_ASTERIK",
	STATE_ORIENTED_FACT_WITHOUT_DATES:"STATE_ORIENTED_FACT_WITHOUT_DATES",
	FACT_DIM_COLUMN_DUPLICATES:"FACT_DIM_COLUMN_DUPLICATES",
	FCT_DIM_RECURSION_ERROR:"FCT_DIM_RECURSION_ERROR"
};



DO.CheckProjectErrors_values = {
	NO_ERROR:0,
	ENTITY_NO_ATTRIBUTES:1,
	ENTITY_NO_PK:2,
	ATTRIBUTE_NOT_IN_USE:3,
	ENTITY_WITH_DUPLICATE_COLUMN_NAME:4,
	ENTITY_WITH_CYCLE_RELATIONS:5,
	BLOCK_DIFFERENT_HISTORY:6,
	PK_DEFINED_WITH_HISTORY:7,
	ATTRIBUTE_NAME_EXCEED_MAX_LENGTH:8,
	ENTITY_NAME_EXCEED_MAX_LENGTH:9,
	FACT_DIM_TABLE_NO_COLUMNS:10,
	MAPPING_WITH_NO_CONNECTION:11,
	NO_SOURCE_FOR_STAGING_COLUMN:12,
	NO_SOURCE_FOR_PRIMARY_COLUMN:13,
	NON_TRANSACTIONAL_FACT_DATE_DEFINED:14,
	TRANSACTIONAL_FACT_DATE_NOT_DEFINED:15,
	MAPPING_TO_UNDEFINED_ENVIRONMENT:16,
	MAPPING_TO_UNDEFINED_TABLE:17,
	MAPPING_TO_UNDEFINED_COLUMN:18,
	MAPPING_TO_DIFFERENET_DATA_TYPE:19,
	ENTITY_RESERVED_NAME:20,
	ATTRIBUTE_RESERVED_NAME:21,
	MULTI_PK_WITH_ATT_NO_HISTORY:22,
	VARCHAR_COLUMN_EXCEEDED_MAX_LENGTH:23,
	AMBIGUOUS_FILTER_COLUMN_NAME:24,
	SOURCE_TARGET_DIFFERENT_SERVER:25,
	EXPRESSION_NOT_DEFINED:26,
	DUPLICATE_VIEW_NAME:27,
	DUPLICATE_TABLE_NAME:28,
	AGG_FUNC_TYPE_NOT_VALID:29,
	NO_GROUP_BY_COLUMNS:30,
	MAPPING_NOT_DEFINED:31,
	ENTITY_EXCEED_MAX_OF_ATTRIBUTES:32,
	ERROR_DUPLICATE_ENTITY_NAME:33,
	DUPLICATE_COLUMN_NAME:34,
	ENTITY_EXCEED_MAX_ROW_SIZE:35,
	COLUMN_NOT_VALID:36,
	STAR_SCHEMA_NOT_VALID:37,
	DATA_MART_EXPRESSION_NEED_TO_BE_ADJUSTED:38,
	DECIMAL_COLUMN_EXCEEDED_MAX_PRECISION:39,
	BINARY_COLUMN_EXCEEDED_MAX_LENGTH:40,
	NO_MAPPINGS_DEFINED:41,
	RECURSIVE_DERIVED_ATTRIBUTE:42,
	DIMENSION_SHOULD_BE_DELETED:43,
	ENTITY_NAME_INCLUDE_INVALID_CHARACTER:44,
	ATTRIBUTE_NAME_INCLUDE_INVALID_CHARACTER:45,
	DIFF_DIMENSION_HISTORY_TYPE_FROM_ENTITY:46,
	LOOKUP_RESULT_MISSING:47,
	LOOKUP_CONDITION_MISSING:48,
	LOOKUP_TABLE_MISSING:49,
	LOOKUP_CONDITION_INCORRECT:50,
	LOOKUP_RESULT_INCORRECT_TYPE:52,
	LOOKUP_RESULT_INCORRECT_SYNTAX:53,
	TRANSACTION_DATE_COLUMN_NOT_VALID:54,
	TRANSFORMATION_INVALID:55,
	TRANSFORMATION_NOT_FOUND:56,
	TRANSFORMATION_PARAM_NUMBER_INCORRECT:57,
	TRANSFORMATION_BRACKETS_ERROR:58,
	TRANSFORMATION_ILLEGAL_RECUSION:59,
	TRANSFORMATION_UNDEFINED_DATATYPE:60,
	PHYSICAL_TABLE_PROPERTIES_INDEX_TYPE:61,
	DECIMAL_COLUMN_SCALE_EXCEEDED_PRECISION:62,
	PHYSICAL_TABLE_PROPERTIES_SORT_KEY:63,
	INIT_LOAD_LOOKUP:64,
	INIT_LOAD_DATA_QUALITY:65,
	INIT_LOAD_DERIVED_ATTRIBUTES:66,
	INIT_LOAD_CLEANSING:67,
	INIT_LOAD_DUPLICATES:68,
	INIT_LOAD_MAPPINGS:69,
	INIT_LOAD_MAPPING_FROM_QUERY:70,
	CDC_ETL_MAPPING_QUERY:71,
	FACT_DIMENSION_EXCEED_MAX_OF_COLUMNS:72,
	ARCHIVE_CT_NAME_EXCEED_MAX_OF_ATTRIBUTES:73,
	CORRUPTED_ROLE:74,
	ENTITY_NAME_CONTAINS_SPACE:75,
	ATTRIBUTE_NAME_CONTAINS_SPACE:76,
	TASK_INCLUDE_MAPPINGS_FROM_DIFFERNT_SOURCES:77,
	TOO_MANY_ERRORS:78,
	CONSOLIDATION_MAPPING_ON_QUERY:79,
	CONSOLIDATION_LANDING_SCHEMA_ASTERIK:80,
	STATE_ORIENTED_FACT_WITHOUT_DATES:81,
	FACT_DIM_COLUMN_DUPLICATES:82,
	FCT_DIM_RECURSION_ERROR:83
};

DO.CheckProjectErrors_displayNames = {
	NO_ERROR:"NO_ERROR",
	ENTITY_NO_ATTRIBUTES:"ENTITY_NO_ATTRIBUTES",
	ENTITY_NO_PK:"ENTITY_NO_PK",
	ATTRIBUTE_NOT_IN_USE:"ATTRIBUTE_NOT_IN_USE",
	ENTITY_WITH_DUPLICATE_COLUMN_NAME:"ENTITY_WITH_DUPLICATE_COLUMN_NAME",
	ENTITY_WITH_CYCLE_RELATIONS:"ENTITY_WITH_CYCLE_RELATIONS",
	BLOCK_DIFFERENT_HISTORY:"BLOCK_DIFFERENT_HISTORY",
	PK_DEFINED_WITH_HISTORY:"PK_DEFINED_WITH_HISTORY",
	ATTRIBUTE_NAME_EXCEED_MAX_LENGTH:"ATTRIBUTE_NAME_EXCEED_MAX_LENGTH",
	ENTITY_NAME_EXCEED_MAX_LENGTH:"ENTITY_NAME_EXCEED_MAX_LENGTH",
	FACT_DIM_TABLE_NO_COLUMNS:"FACT_DIM_TABLE_NO_COLUMNS",
	MAPPING_WITH_NO_CONNECTION:"MAPPING_WITH_NO_CONNECTION",
	NO_SOURCE_FOR_STAGING_COLUMN:"NO_SOURCE_FOR_STAGING_COLUMN",
	NO_SOURCE_FOR_PRIMARY_COLUMN:"NO_SOURCE_FOR_PRIMARY_COLUMN",
	NON_TRANSACTIONAL_FACT_DATE_DEFINED:"NON_TRANSACTIONAL_FACT_DATE_DEFINED",
	TRANSACTIONAL_FACT_DATE_NOT_DEFINED:"TRANSACTIONAL_FACT_DATE_NOT_DEFINED",
	MAPPING_TO_UNDEFINED_ENVIRONMENT:"MAPPING_TO_UNDEFINED_ENVIRONMENT",
	MAPPING_TO_UNDEFINED_TABLE:"MAPPING_TO_UNDEFINED_TABLE",
	MAPPING_TO_UNDEFINED_COLUMN:"MAPPING_TO_UNDEFINED_COLUMN",
	MAPPING_TO_DIFFERENET_DATA_TYPE:"MAPPING_TO_DIFFERENET_DATA_TYPE",
	ENTITY_RESERVED_NAME:"ENTITY_RESERVED_NAME",
	ATTRIBUTE_RESERVED_NAME:"ATTRIBUTE_RESERVED_NAME",
	MULTI_PK_WITH_ATT_NO_HISTORY:"MULTI_PK_WITH_ATT_NO_HISTORY",
	VARCHAR_COLUMN_EXCEEDED_MAX_LENGTH:"VARCHAR_COLUMN_EXCEEDED_MAX_LENGTH",
	AMBIGUOUS_FILTER_COLUMN_NAME:"AMBIGUOUS_FILTER_COLUMN_NAME",
	SOURCE_TARGET_DIFFERENT_SERVER:"SOURCE_TARGET_DIFFERENT_SERVER",
	EXPRESSION_NOT_DEFINED:"EXPRESSION_NOT_DEFINED",
	DUPLICATE_VIEW_NAME:"DUPLICATE_VIEW_NAME",
	DUPLICATE_TABLE_NAME:"DUPLICATE_TABLE_NAME",
	AGG_FUNC_TYPE_NOT_VALID:"AGG_FUNC_TYPE_NOT_VALID",
	NO_GROUP_BY_COLUMNS:"NO_GROUP_BY_COLUMNS",
	MAPPING_NOT_DEFINED:"MAPPING_NOT_DEFINED",
	ENTITY_EXCEED_MAX_OF_ATTRIBUTES:"ENTITY_EXCEED_MAX_OF_ATTRIBUTES",
	ERROR_DUPLICATE_ENTITY_NAME:"ERROR_DUPLICATE_ENTITY_NAME",
	DUPLICATE_COLUMN_NAME:"DUPLICATE_COLUMN_NAME",
	ENTITY_EXCEED_MAX_ROW_SIZE:"ENTITY_EXCEED_MAX_ROW_SIZE",
	COLUMN_NOT_VALID:"COLUMN_NOT_VALID",
	STAR_SCHEMA_NOT_VALID:"STAR_SCHEMA_NOT_VALID",
	DATA_MART_EXPRESSION_NEED_TO_BE_ADJUSTED:"DATA_MART_EXPRESSION_NEED_TO_BE_ADJUSTED",
	DECIMAL_COLUMN_EXCEEDED_MAX_PRECISION:"DECIMAL_COLUMN_EXCEEDED_MAX_PRECISION",
	BINARY_COLUMN_EXCEEDED_MAX_LENGTH:"BINARY_COLUMN_EXCEEDED_MAX_LENGTH",
	NO_MAPPINGS_DEFINED:"NO_MAPPINGS_DEFINED",
	RECURSIVE_DERIVED_ATTRIBUTE:"RECURSIVE_DERIVED_ATTRIBUTE",
	DIMENSION_SHOULD_BE_DELETED:"DIMENSION_SHOULD_BE_DELETED",
	ENTITY_NAME_INCLUDE_INVALID_CHARACTER:"ENTITY_NAME_INCLUDE_INVALID_CHARACTER",
	ATTRIBUTE_NAME_INCLUDE_INVALID_CHARACTER:"ATTRIBUTE_NAME_INCLUDE_INVALID_CHARACTER",
	DIFF_DIMENSION_HISTORY_TYPE_FROM_ENTITY:"DIFF_DIMENSION_HISTORY_TYPE_FROM_ENTITY",
	LOOKUP_RESULT_MISSING:"LOOKUP_RESULT_MISSING",
	LOOKUP_CONDITION_MISSING:"LOOKUP_CONDITION_MISSING",
	LOOKUP_TABLE_MISSING:"LOOKUP_TABLE_MISSING",
	LOOKUP_CONDITION_INCORRECT:"LOOKUP_CONDITION_INCORRECT",
	LOOKUP_RESULT_INCORRECT_TYPE:"LOOKUP_RESULT_INCORRECT_TYPE",
	LOOKUP_RESULT_INCORRECT_SYNTAX:"LOOKUP_RESULT_INCORRECT_SYNTAX",
	TRANSACTION_DATE_COLUMN_NOT_VALID:"TRANSACTION_DATE_COLUMN_NOT_VALID",
	TRANSFORMATION_INVALID:"TRANSFORMATION_INVALID",
	TRANSFORMATION_NOT_FOUND:"TRANSFORMATION_NOT_FOUND",
	TRANSFORMATION_PARAM_NUMBER_INCORRECT:"TRANSFORMATION_PARAM_NUMBER_INCORRECT",
	TRANSFORMATION_BRACKETS_ERROR:"TRANSFORMATION_BRACKETS_ERROR",
	TRANSFORMATION_ILLEGAL_RECUSION:"TRANSFORMATION_ILLEGAL_RECUSION",
	TRANSFORMATION_UNDEFINED_DATATYPE:"TRANSFORMATION_UNDEFINED_DATATYPE",
	PHYSICAL_TABLE_PROPERTIES_INDEX_TYPE:"PHYSICAL_TABLE_PROPERTIES_INDEX_TYPE",
	DECIMAL_COLUMN_SCALE_EXCEEDED_PRECISION:"DECIMAL_COLUMN_SCALE_EXCEEDED_PRECISION",
	PHYSICAL_TABLE_PROPERTIES_SORT_KEY:"PHYSICAL_TABLE_PROPERTIES_SORT_KEY",
	INIT_LOAD_LOOKUP:"INIT_LOAD_LOOKUP",
	INIT_LOAD_DATA_QUALITY:"INIT_LOAD_DATA_QUALITY",
	INIT_LOAD_DERIVED_ATTRIBUTES:"INIT_LOAD_DERIVED_ATTRIBUTES",
	INIT_LOAD_CLEANSING:"INIT_LOAD_CLEANSING",
	INIT_LOAD_DUPLICATES:"INIT_LOAD_DUPLICATES",
	INIT_LOAD_MAPPINGS:"INIT_LOAD_MAPPINGS",
	INIT_LOAD_MAPPING_FROM_QUERY:"INIT_LOAD_MAPPING_FROM_QUERY",
	CDC_ETL_MAPPING_QUERY:"CDC_ETL_MAPPING_QUERY",
	FACT_DIMENSION_EXCEED_MAX_OF_COLUMNS:"FACT_DIMENSION_EXCEED_MAX_OF_COLUMNS",
	ARCHIVE_CT_NAME_EXCEED_MAX_OF_ATTRIBUTES:"ARCHIVE_CT_NAME_EXCEED_MAX_OF_ATTRIBUTES",
	CORRUPTED_ROLE:"CORRUPTED_ROLE",
	ENTITY_NAME_CONTAINS_SPACE:"ENTITY_NAME_CONTAINS_SPACE",
	ATTRIBUTE_NAME_CONTAINS_SPACE:"ATTRIBUTE_NAME_CONTAINS_SPACE",
	TASK_INCLUDE_MAPPINGS_FROM_DIFFERNT_SOURCES:"TASK_INCLUDE_MAPPINGS_FROM_DIFFERNT_SOURCES",
	TOO_MANY_ERRORS:"TOO_MANY_ERRORS",
	CONSOLIDATION_MAPPING_ON_QUERY:"CONSOLIDATION_MAPPING_ON_QUERY",
	CONSOLIDATION_LANDING_SCHEMA_ASTERIK:"CONSOLIDATION_LANDING_SCHEMA_ASTERIK",
	STATE_ORIENTED_FACT_WITHOUT_DATES:"STATE_ORIENTED_FACT_WITHOUT_DATES",
	FACT_DIM_COLUMN_DUPLICATES:"FACT_DIM_COLUMN_DUPLICATES",
	FCT_DIM_RECURSION_ERROR:"FCT_DIM_RECURSION_ERROR"
};

DO.CompareDwhErrors = {
	ENTITY_WILL_BE_DELETED:"ENTITY_WILL_BE_DELETED",
	ATTRIBUTE_WILL_BE_DELETED:"ATTRIBUTE_WILL_BE_DELETED",
	ENTITY_WILL_BE_CHANGED:"ENTITY_WILL_BE_CHANGED",
	ATTRIBUTE_WILL_BE_CHANGED:"ATTRIBUTE_WILL_BE_CHANGED",
	ATTRIBUTE_WILL_BE_ADDED:"ATTRIBUTE_WILL_BE_ADDED",
	ENTITY_WILL_BE_ADDED:"ENTITY_WILL_BE_ADDED",
	ENTITY_WILL_BE_RENAMED:"ENTITY_WILL_BE_RENAMED",
	ATTRIBUTE_WILL_BE_RENAMED:"ATTRIBUTE_WILL_BE_RENAMED",
	ATTRIBUTE_BLOCK_WILL_BE_CHANGED:"ATTRIBUTE_BLOCK_WILL_BE_CHANGED",
	ATTRIBUTE_DATA_TYPE_WILL_BE_CHANGED:"ATTRIBUTE_DATA_TYPE_WILL_BE_CHANGED",
	COLUMN_IS_NOT_PRIMARY_KEY_IN_DWH:"COLUMN_IS_NOT_PRIMARY_KEY_IN_DWH",
	COLUMN_IS_NOT_PRIMARY_KEY_IN_MODEL:"COLUMN_IS_NOT_PRIMARY_KEY_IN_MODEL",
	DISTRIBUTION_INDEX_WAS_CHANGED:"DISTRIBUTION_INDEX_WAS_CHANGED",
	SOFT_DELETE_COLUMN_IS_MISSING:"SOFT_DELETE_COLUMN_IS_MISSING",
	SAVE_HISTORY_CHANGED:"SAVE_HISTORY_CHANGED",
	PRECURSE_USAGE_CHANGED:"PRECURSE_USAGE_CHANGED",
	PRIMARY_KEY_WAS_CHANGED:"PRIMARY_KEY_WAS_CHANGED"
};



DO.CompareDwhErrors_values = {
	ENTITY_WILL_BE_DELETED:1,
	ATTRIBUTE_WILL_BE_DELETED:2,
	ENTITY_WILL_BE_CHANGED:3,
	ATTRIBUTE_WILL_BE_CHANGED:4,
	ATTRIBUTE_WILL_BE_ADDED:5,
	ENTITY_WILL_BE_ADDED:6,
	ENTITY_WILL_BE_RENAMED:7,
	ATTRIBUTE_WILL_BE_RENAMED:8,
	ATTRIBUTE_BLOCK_WILL_BE_CHANGED:9,
	ATTRIBUTE_DATA_TYPE_WILL_BE_CHANGED:10,
	COLUMN_IS_NOT_PRIMARY_KEY_IN_DWH:11,
	COLUMN_IS_NOT_PRIMARY_KEY_IN_MODEL:12,
	DISTRIBUTION_INDEX_WAS_CHANGED:13,
	SOFT_DELETE_COLUMN_IS_MISSING:14,
	SAVE_HISTORY_CHANGED:15,
	PRECURSE_USAGE_CHANGED:16,
	PRIMARY_KEY_WAS_CHANGED:17
};

DO.CompareDwhErrors_displayNames = {
	ENTITY_WILL_BE_DELETED:"Will be deleted",
	ATTRIBUTE_WILL_BE_DELETED:"Will be deleted",
	ENTITY_WILL_BE_CHANGED:"Will be changed",
	ATTRIBUTE_WILL_BE_CHANGED:"Will be changed",
	ATTRIBUTE_WILL_BE_ADDED:"Will be added",
	ENTITY_WILL_BE_ADDED:"Will be added",
	ENTITY_WILL_BE_RENAMED:"Will be renamed",
	ATTRIBUTE_WILL_BE_RENAMED:"Will be renamed",
	ATTRIBUTE_BLOCK_WILL_BE_CHANGED:"Satellite will be changed",
	ATTRIBUTE_DATA_TYPE_WILL_BE_CHANGED:"Data type will be changed",
	COLUMN_IS_NOT_PRIMARY_KEY_IN_DWH:"Column is not a primary key in the data warehouse",
	COLUMN_IS_NOT_PRIMARY_KEY_IN_MODEL:"Column is not a primary key in the model",
	DISTRIBUTION_INDEX_WAS_CHANGED:"Distribution index was changed",
	SOFT_DELETE_COLUMN_IS_MISSING:"Soft delete column is missing",
	SAVE_HISTORY_CHANGED:"Save history changed",
	PRECURSE_USAGE_CHANGED:"Using Precursor rows changed",
	PRIMARY_KEY_WAS_CHANGED:"Primary Key was changed"
};

DO.ValidateDMErros = {
	TABLE_NOT_EXIST_IN_MODEL:"TABLE_NOT_EXIST_IN_MODEL",
	COLUMN_NOT_EXIST_IN_MODEL:"COLUMN_NOT_EXIST_IN_MODEL"
};



DO.ValidateDMErros_values = {
	TABLE_NOT_EXIST_IN_MODEL:1,
	COLUMN_NOT_EXIST_IN_MODEL:2
};

DO.ValidateDMErros_displayNames = {
	TABLE_NOT_EXIST_IN_MODEL:"TABLE_NOT_EXIST_IN_MODEL",
	COLUMN_NOT_EXIST_IN_MODEL:"COLUMN_NOT_EXIST_IN_MODEL"
};

DO.CheckProjectSeverity = {
	ERROR:"ERROR",
	WARNING:"WARNING"
};



DO.CheckProjectSeverity_values = {
	ERROR:1,
	WARNING:2
};

DO.CheckProjectSeverity_displayNames = {
	ERROR:"ERROR",
	WARNING:"WARNING"
};

DO.CheckProjectResolve = {
	EDIT_MODEL:"EDIT_MODEL",
	EDIT_ATTRIBUTE:"EDIT_ATTRIBUTE",
	EDIT_MAPPING:"EDIT_MAPPING",
	EDIT_DATAMART:"EDIT_DATAMART",
	MANAGE_DATAMART:"MANAGE_DATAMART",
	MANAGE_ETL:"MANAGE_ETL",
	EDIT_TRANSACTION_DATE:"EDIT_TRANSACTION_DATE",
	EDIT_TRANSFORMATION:"EDIT_TRANSFORMATION",
	EDIT_PHYSICAL_MODEL:"EDIT_PHYSICAL_MODEL",
	EDIT_PHYSICAL_DATAMART:"EDIT_PHYSICAL_DATAMART",
	DELETE_STAR_SCHEMA:"DELETE_STAR_SCHEMA",
	DELETE_DIMENSION:"DELETE_DIMENSION",
	DELETE_ROLE:"DELETE_ROLE",
	MANAGE_DATABASE:"MANAGE_DATABASE"
};



DO.CheckProjectResolve_values = {
	EDIT_MODEL:1,
	EDIT_ATTRIBUTE:2,
	EDIT_MAPPING:3,
	EDIT_DATAMART:4,
	MANAGE_DATAMART:5,
	MANAGE_ETL:6,
	EDIT_TRANSACTION_DATE:7,
	EDIT_TRANSFORMATION:8,
	EDIT_PHYSICAL_MODEL:9,
	EDIT_PHYSICAL_DATAMART:10,
	DELETE_STAR_SCHEMA:11,
	DELETE_DIMENSION:12,
	DELETE_ROLE:13,
	MANAGE_DATABASE:14
};

DO.CheckProjectResolve_displayNames = {
	EDIT_MODEL:"EDIT_MODEL",
	EDIT_ATTRIBUTE:"EDIT_ATTRIBUTE",
	EDIT_MAPPING:"EDIT_MAPPING",
	EDIT_DATAMART:"EDIT_DATAMART",
	MANAGE_DATAMART:"MANAGE_DATAMART",
	MANAGE_ETL:"MANAGE_ETL",
	EDIT_TRANSACTION_DATE:"EDIT_TRANSACTION_DATE",
	EDIT_TRANSFORMATION:"EDIT_TRANSFORMATION",
	EDIT_PHYSICAL_MODEL:"EDIT_PHYSICAL_MODEL",
	EDIT_PHYSICAL_DATAMART:"EDIT_PHYSICAL_DATAMART",
	DELETE_STAR_SCHEMA:"DELETE_STAR_SCHEMA",
	DELETE_DIMENSION:"DELETE_DIMENSION",
	DELETE_ROLE:"DELETE_ROLE",
	MANAGE_DATABASE:"MANAGE_DATABASE"
};

DO.CompareDMError = {
	DATA_MART_DIMENSION_WILL_BE_DELETED:"DATA_MART_DIMENSION_WILL_BE_DELETED",
	FACT_DIM_INTERNAL_COLUMN_WILL_BE_RENAMED:"FACT_DIM_INTERNAL_COLUMN_WILL_BE_RENAMED",
	FACT_TABLE_WILL_BE_CREATED:"FACT_TABLE_WILL_BE_CREATED",
	DIMENSION_TABLE_WILL_BE_CREATED:"DIMENSION_TABLE_WILL_BE_CREATED",
	TRANSACTION_DATE_IS_NOT_VALID_STAR_SCHEMA_WILL_BE_DELETED:"TRANSACTION_DATE_IS_NOT_VALID_STAR_SCHEMA_WILL_BE_DELETED",
	STAR_SCHEMA_WILL_BE_DELETED:"STAR_SCHEMA_WILL_BE_DELETED",
	RELATIONSHIP_WILL_BE_DELETED:"RELATIONSHIP_WILL_BE_DELETED",
	FACT_DIM_TABLE_PREFIX_WILL_BE_CHANGED:"FACT_DIM_TABLE_PREFIX_WILL_BE_CHANGED",
	DIMENSION_TABLE_WILL_BE_RENAMED:"DIMENSION_TABLE_WILL_BE_RENAMED",
	FACT_DIM_COLUMN_WILL_BE_ADDED:"FACT_DIM_COLUMN_WILL_BE_ADDED",
	FACT_DIM_COLUMN_WILL_BE_REMOVED:"FACT_DIM_COLUMN_WILL_BE_REMOVED",
	VIRTUAL_TABLE_WILL_BE_RECREATED:"VIRTUAL_TABLE_WILL_BE_RECREATED",
	DATA_TYPE_WILL_BE_CHANGED:"DATA_TYPE_WILL_BE_CHANGED",
	FACT_COLUMN_WILL_BE_REMOVED:"FACT_COLUMN_WILL_BE_REMOVED",
	PHYSICAL_COLUMN_WILL_BE_REMOVED:"PHYSICAL_COLUMN_WILL_BE_REMOVED",
	ATTRIBUE_WILL_BE_CHANGED:"ATTRIBUE_WILL_BE_CHANGED"
};



DO.CompareDMError_values = {
	DATA_MART_DIMENSION_WILL_BE_DELETED:1,
	FACT_DIM_INTERNAL_COLUMN_WILL_BE_RENAMED:2,
	FACT_TABLE_WILL_BE_CREATED:3,
	DIMENSION_TABLE_WILL_BE_CREATED:4,
	TRANSACTION_DATE_IS_NOT_VALID_STAR_SCHEMA_WILL_BE_DELETED:5,
	STAR_SCHEMA_WILL_BE_DELETED:6,
	RELATIONSHIP_WILL_BE_DELETED:7,
	FACT_DIM_TABLE_PREFIX_WILL_BE_CHANGED:8,
	DIMENSION_TABLE_WILL_BE_RENAMED:9,
	FACT_DIM_COLUMN_WILL_BE_ADDED:10,
	FACT_DIM_COLUMN_WILL_BE_REMOVED:11,
	VIRTUAL_TABLE_WILL_BE_RECREATED:12,
	DATA_TYPE_WILL_BE_CHANGED:13,
	FACT_COLUMN_WILL_BE_REMOVED:14,
	PHYSICAL_COLUMN_WILL_BE_REMOVED:15,
	ATTRIBUE_WILL_BE_CHANGED:16
};

DO.CompareDMError_displayNames = {
	DATA_MART_DIMENSION_WILL_BE_DELETED:"DATA_MART_DIMENSION_WILL_BE_DELETED",
	FACT_DIM_INTERNAL_COLUMN_WILL_BE_RENAMED:"FACT_DIM_INTERNAL_COLUMN_WILL_BE_RENAMED",
	FACT_TABLE_WILL_BE_CREATED:"FACT_TABLE_WILL_BE_CREATED",
	DIMENSION_TABLE_WILL_BE_CREATED:"DIMENSION_TABLE_WILL_BE_CREATED",
	TRANSACTION_DATE_IS_NOT_VALID_STAR_SCHEMA_WILL_BE_DELETED:"TRANSACTION_DATE_IS_NOT_VALID_STAR_SCHEMA_WILL_BE_DELETED",
	STAR_SCHEMA_WILL_BE_DELETED:"STAR_SCHEMA_WILL_BE_DELETED",
	RELATIONSHIP_WILL_BE_DELETED:"RELATIONSHIP_WILL_BE_DELETED",
	FACT_DIM_TABLE_PREFIX_WILL_BE_CHANGED:"FACT_DIM_TABLE_PREFIX_WILL_BE_CHANGED",
	DIMENSION_TABLE_WILL_BE_RENAMED:"DIMENSION_TABLE_WILL_BE_RENAMED",
	FACT_DIM_COLUMN_WILL_BE_ADDED:"FACT_DIM_COLUMN_WILL_BE_ADDED",
	FACT_DIM_COLUMN_WILL_BE_REMOVED:"FACT_DIM_COLUMN_WILL_BE_REMOVED",
	VIRTUAL_TABLE_WILL_BE_RECREATED:"VIRTUAL_TABLE_WILL_BE_RECREATED",
	DATA_TYPE_WILL_BE_CHANGED:"DATA_TYPE_WILL_BE_CHANGED",
	FACT_COLUMN_WILL_BE_REMOVED:"FACT_COLUMN_WILL_BE_REMOVED",
	PHYSICAL_COLUMN_WILL_BE_REMOVED:"PHYSICAL_COLUMN_WILL_BE_REMOVED",
	ATTRIBUE_WILL_BE_CHANGED:"ATTRIBUE_WILL_BE_CHANGED"
};

DO.DwhIndexType = {
	N:"N",
	UNIQUE:"UNIQUE",
	F:"F"
};



DO.DwhIndexType_values = {
	N:0,
	UNIQUE:1,
	F:2
};

DO.DwhIndexType_displayNames = {
	N:"N",
	UNIQUE:"UNIQUE",
	F:"F"
};

DO.MessageType = {
	STATUS_MSG:"STATUS_MSG",
	EXIT_MSG:"EXIT_MSG",
	WARNING:"WARNING",
	EXIT_MSG_ERROR:"EXIT_MSG_ERROR",
	MSG_INFO:"MSG_INFO",
	EXIT_ERROR_WITH_DETAILS:"EXIT_ERROR_WITH_DETAILS"
};



DO.MessageType_values = {
	STATUS_MSG:1,
	EXIT_MSG:2,
	WARNING:3,
	EXIT_MSG_ERROR:4,
	MSG_INFO:5,
	EXIT_ERROR_WITH_DETAILS:6
};

DO.MessageType_displayNames = {
	STATUS_MSG:"STATUS_MSG",
	EXIT_MSG:"EXIT_MSG",
	WARNING:"WARNING",
	EXIT_MSG_ERROR:"EXIT_MSG_ERROR",
	MSG_INFO:"MSG_INFO",
	EXIT_ERROR_WITH_DETAILS:"EXIT_ERROR_WITH_DETAILS"
};

DO.Role = {
	SOURCE:"SOURCE",
	TARGET:"TARGET",
	BOTH:"BOTH"
};



DO.Role_values = {
	SOURCE:0,
	TARGET:1,
	BOTH:2
};

DO.Role_displayNames = {
	SOURCE:"SOURCE",
	TARGET:"TARGET",
	BOTH:"BOTH"
};

DO.ConnectionStringTestType = {
	All:"All",
	JDBC:"JDBC",
	ODBC:"ODBC"
};



DO.ConnectionStringTestType_values = {
	All:1,
	JDBC:2,
	ODBC:3
};

DO.ConnectionStringTestType_displayNames = {
	All:"All",
	JDBC:"JDBC",
	ODBC:"ODBC"
};

DO.CanNotPopulateReason = {
	CAN_POPULATE:"CAN_POPULATE",
	NOT_GENERATED:"NOT_GENERATED",
	DWH_TABLES_NOT_CREATED:"DWH_TABLES_NOT_CREATED",
	DMA_TABLES_NOT_CREATED:"DMA_TABLES_NOT_CREATED",
	DMA_TASK_IS_RUNNING:"DMA_TASK_IS_RUNNING",
	DWH_TASK_IS_RUNNING:"DWH_TASK_IS_RUNNING",
	NOT_VALID:"NOT_VALID",
	ERROR_MART_TABLES_WERE_NOT_CREATED:"ERROR_MART_TABLES_WERE_NOT_CREATED"
};



DO.CanNotPopulateReason_values = {
	CAN_POPULATE:0,
	NOT_GENERATED:1,
	DWH_TABLES_NOT_CREATED:2,
	DMA_TABLES_NOT_CREATED:4,
	DMA_TASK_IS_RUNNING:8,
	DWH_TASK_IS_RUNNING:16,
	NOT_VALID:32,
	ERROR_MART_TABLES_WERE_NOT_CREATED:64
};

DO.CanNotPopulateReason_displayNames = {
	CAN_POPULATE:"CAN_POPULATE",
	NOT_GENERATED:"NOT_GENERATED",
	DWH_TABLES_NOT_CREATED:"DWH_TABLES_NOT_CREATED",
	DMA_TABLES_NOT_CREATED:"DMA_TABLES_NOT_CREATED",
	DMA_TASK_IS_RUNNING:"DMA_TASK_IS_RUNNING",
	DWH_TASK_IS_RUNNING:"DWH_TASK_IS_RUNNING",
	NOT_VALID:"NOT_VALID",
	ERROR_MART_TABLES_WERE_NOT_CREATED:"ERROR_MART_TABLES_WERE_NOT_CREATED"
};

DO.RedshiftSortType = {
	NONE:"NONE",
	COMPOUND:"COMPOUND",
	INTERLEAVED:"INTERLEAVED"
};



DO.RedshiftSortType_values = {
	NONE:1,
	COMPOUND:2,
	INTERLEAVED:3
};

DO.RedshiftSortType_displayNames = {
	NONE:"NONE",
	COMPOUND:"COMPOUND",
	INTERLEAVED:"INTERLEAVED"
};

DO.EntityTableModifierType = {
	PROJECT_SETTINGS_DEFAULT:"PROJECT_SETTINGS_DEFAULT",
	CUSTOM:"CUSTOM",
	PLATFORM_PHYSICAL_PROPERTIES:"PLATFORM_PHYSICAL_PROPERTIES"
};



DO.EntityTableModifierType_values = {
	PROJECT_SETTINGS_DEFAULT:1,
	CUSTOM:2,
	PLATFORM_PHYSICAL_PROPERTIES:3
};

DO.EntityTableModifierType_displayNames = {
	PROJECT_SETTINGS_DEFAULT:"Project settings default",
	CUSTOM:"Custom",
	PLATFORM_PHYSICAL_PROPERTIES:"Platform Distribution Key"
};

DO.HistoryType = {
	N:"N",
	S:"S"
};



DO.HistoryType_values = {
	N:1,
	S:2
};

DO.HistoryType_displayNames = {
	N:"Type 1",
	S:"Type 2"
};

DO.FactType = {
	T:"T",
	S:"S"
};



DO.FactType_values = {
	T:1,
	S:2
};

DO.FactType_displayNames = {
	T:"Transaction",
	S:"S"
};

DO.PhysicalEntitySelectFilters = {
	NONE:"NONE",
	FD_TD:"FD_TD"
};



DO.PhysicalEntitySelectFilters_values = {
	NONE:0,
	FD_TD:1
};

DO.PhysicalEntitySelectFilters_displayNames = {
	NONE:"NONE",
	FD_TD:"FD_TD"
};

DO.ErwinModelType = {
	LOGICAL:"LOGICAL",
	PHYSICAL:"PHYSICAL"
};



DO.ErwinModelType_values = {
	LOGICAL:0,
	PHYSICAL:1
};

DO.ErwinModelType_displayNames = {
	LOGICAL:"LOGICAL",
	PHYSICAL:"PHYSICAL"
};

DO.MappingNullBehaviour = {
	USE_ETL_SETTING:"USE_ETL_SETTING",
	INHIRIT_VALUE:"INHIRIT_VALUE",
	UPDATE_TO_NULL:"UPDATE_TO_NULL"
};



DO.MappingNullBehaviour_values = {
	USE_ETL_SETTING:1,
	INHIRIT_VALUE:2,
	UPDATE_TO_NULL:3
};

DO.MappingNullBehaviour_displayNames = {
	USE_ETL_SETTING:"USE_ETL_SETTING",
	INHIRIT_VALUE:"INHIRIT_VALUE",
	UPDATE_TO_NULL:"UPDATE_TO_NULL"
};

DO.FieldMappingType = {
	DIRECT:"DIRECT",
	EXPRESSION:"EXPRESSION",
	LOOKUP:"LOOKUP"
};



DO.FieldMappingType_values = {
	DIRECT:1,
	EXPRESSION:2,
	LOOKUP:3
};

DO.FieldMappingType_displayNames = {
	DIRECT:"DIRECT",
	EXPRESSION:"EXPRESSION",
	LOOKUP:"LOOKUP"
};

DO.EtlMappingType = {
	UNMAPPED:"UNMAPPED",
	DIRECT:"DIRECT",
	MAPPING_EXPR:"MAPPING_EXPR",
	LOOKUP:"LOOKUP",
	DERIVED_EXPR:"DERIVED_EXPR",
	DELETED_EXPR:"DELETED_EXPR"
};



DO.EtlMappingType_values = {
	UNMAPPED:1,
	DIRECT:2,
	MAPPING_EXPR:3,
	LOOKUP:4,
	DERIVED_EXPR:5,
	DELETED_EXPR:6
};

DO.EtlMappingType_displayNames = {
	UNMAPPED:"UNMAPPED",
	DIRECT:"DIRECT",
	MAPPING_EXPR:"MAPPING_EXPR",
	LOOKUP:"LOOKUP",
	DERIVED_EXPR:"DERIVED_EXPR",
	DELETED_EXPR:"DELETED_EXPR"
};

DO.LookupExpressionMode = {
	BASIC:"BASIC",
	ADVANCED:"ADVANCED"
};



DO.LookupExpressionMode_values = {
	BASIC:1,
	ADVANCED:2
};

DO.LookupExpressionMode_displayNames = {
	BASIC:"BASIC",
	ADVANCED:"ADVANCED"
};

DO.FactDimStatus = {
	VALID:"VALID",
	NOT_VALID:"NOT_VALID",
	NEED_VALIDATE:"NEED_VALIDATE"
};



DO.FactDimStatus_values = {
	VALID:1,
	NOT_VALID:2,
	NEED_VALIDATE:3
};

DO.FactDimStatus_displayNames = {
	VALID:"VALID",
	NOT_VALID:"NOT_VALID",
	NEED_VALIDATE:"NEED_VALIDATE"
};

DO.TreeNodeLevel = {
	All:"All",
	ROOTS:"ROOTS",
	ROOT_ENTITY_CHILDRENS:"ROOT_ENTITY_CHILDRENS"
};



DO.TreeNodeLevel_values = {
	All:0,
	ROOTS:1,
	ROOT_ENTITY_CHILDRENS:2
};

DO.TreeNodeLevel_displayNames = {
	All:"All",
	ROOTS:"ROOTS",
	ROOT_ENTITY_CHILDRENS:"ROOT_ENTITY_CHILDRENS"
};

DO.TreeNodeCategory = {
	DENORMALIZED:"DENORMALIZED",
	INDEPENDENT:"INDEPENDENT",
	INDEPENDENT_AND_DENORMALIZED:"INDEPENDENT_AND_DENORMALIZED"
};



DO.TreeNodeCategory_values = {
	DENORMALIZED:1,
	INDEPENDENT:2,
	INDEPENDENT_AND_DENORMALIZED:3
};

DO.TreeNodeCategory_displayNames = {
	DENORMALIZED:"DENORMALIZED",
	INDEPENDENT:"INDEPENDENT",
	INDEPENDENT_AND_DENORMALIZED:"INDEPENDENT_AND_DENORMALIZED"
};

DO.StarSchemaType = {
	TRANSACTIONAL:"TRANSACTIONAL",
	STATE_ORIENTED:"STATE_ORIENTED",
	AGGREGATED:"AGGREGATED"
};



DO.StarSchemaType_values = {
	TRANSACTIONAL:0,
	STATE_ORIENTED:1,
	AGGREGATED:2
};

DO.StarSchemaType_displayNames = {
	TRANSACTIONAL:"TRANSACTIONAL",
	STATE_ORIENTED:"STATE_ORIENTED",
	AGGREGATED:"AGGREGATED"
};

DO.ComposeLoggerModules = {
	Services:"Services",
	Repository:"Repository",
	Scheduler:"Scheduler",
	Notification:"Notification",
	Audit:"Audit",
	Workflow:"Workflow",
	Execution:"Execution",
	MessageCenter:"MessageCenter",
	Authorization:"Authorization",
	License:"License",
	Compose:"Compose",
	DBUtil:"DBUtil",
	UserInteraction:"UserInteraction",
	Metadata:"Metadata",
	Engine:"Engine",
	Manager:"Manager",
	DataWarehouse:"DataWarehouse",
	DataMart:"DataMart",
	Csv:"Csv",
	Performance:"Performance",
	SchemaEvolution:"SchemaEvolution"
};



DO.ComposeLoggerModules_values = {
	Services:30,
	Repository:31,
	Scheduler:32,
	Notification:33,
	Audit:34,
	Workflow:35,
	Execution:36,
	MessageCenter:37,
	Authorization:38,
	License:39,
	Compose:100,
	DBUtil:101,
	UserInteraction:102,
	Metadata:103,
	Engine:104,
	Manager:105,
	DataWarehouse:106,
	DataMart:107,
	Csv:108,
	Performance:109,
	SchemaEvolution:110
};

DO.ComposeLoggerModules_displayNames = {
	Services:"Services",
	Repository:"Repository",
	Scheduler:"Scheduler",
	Notification:"Notification",
	Audit:"Audit",
	Workflow:"Workflow",
	Execution:"Execution",
	MessageCenter:"MessageCenter",
	Authorization:"Authorization",
	License:"License",
	Compose:"Compose",
	DBUtil:"DBUtil",
	UserInteraction:"UserInteraction",
	Metadata:"Metadata",
	Engine:"Engine",
	Manager:"Manager",
	DataWarehouse:"DataWarehouse",
	DataMart:"DataMart",
	Csv:"Csv",
	Performance:"Performance",
	SchemaEvolution:"SchemaEvolution"
};

DO.ETLStatus = {
	NOT_AVAILABLE:"NOT_AVAILABLE",
	COMPLETED:"COMPLETED",
	ACTIVE:"ACTIVE",
	ERROR:"ERROR"
};



DO.ETLStatus_values = {
	NOT_AVAILABLE:0,
	COMPLETED:1,
	ACTIVE:2,
	ERROR:3
};

DO.ETLStatus_displayNames = {
	NOT_AVAILABLE:"NOT_AVAILABLE",
	COMPLETED:"COMPLETED",
	ACTIVE:"ACTIVE",
	ERROR:"ERROR"
};

DO.AttributeColumnMappingFlags = {
	DEFAULT:"DEFAULT",
	ADD:"ADD"
};



DO.AttributeColumnMappingFlags_values = {
	DEFAULT:0,
	ADD:1
};

DO.AttributeColumnMappingFlags_displayNames = {
	DEFAULT:"DEFAULT",
	ADD:"ADD"
};

DO.DDLType = {
	ALTER_TABLE:"ALTER_TABLE",
	CREATE_TABLE:"CREATE_TABLE",
	DROP_TABLE:"DROP_TABLE",
	TRUNCATE_TABLE:"TRUNCATE_TABLE"
};



DO.DDLType_values = {
	ALTER_TABLE:0,
	CREATE_TABLE:1,
	DROP_TABLE:2,
	TRUNCATE_TABLE:3
};

DO.DDLType_displayNames = {
	ALTER_TABLE:"ALTER_TABLE",
	CREATE_TABLE:"CREATE_TABLE",
	DROP_TABLE:"DROP_TABLE",
	TRUNCATE_TABLE:"TRUNCATE_TABLE"
};

DO.SchemaEvolutionAction = {
	APPLY_TO_MODEL_AND_MAPPINGS:"APPLY_TO_MODEL_AND_MAPPINGS",
	APPLY_TO_MODEL_MAPPINGS_ADJUST_STORAGE:"APPLY_TO_MODEL_MAPPINGS_ADJUST_STORAGE",
	APPLY_TO_MODEL_MAPPINGS_ADJUST_STORAGE_GENERATE_TASKS:"APPLY_TO_MODEL_MAPPINGS_ADJUST_STORAGE_GENERATE_TASKS",
	IGNORE_CHANGES:"IGNORE_CHANGES"
};



DO.SchemaEvolutionAction_values = {
	APPLY_TO_MODEL_AND_MAPPINGS:10,
	APPLY_TO_MODEL_MAPPINGS_ADJUST_STORAGE:11,
	APPLY_TO_MODEL_MAPPINGS_ADJUST_STORAGE_GENERATE_TASKS:12,
	IGNORE_CHANGES:13
};

DO.SchemaEvolutionAction_displayNames = {
	APPLY_TO_MODEL_AND_MAPPINGS:"APPLY_TO_MODEL_AND_MAPPINGS",
	APPLY_TO_MODEL_MAPPINGS_ADJUST_STORAGE:"APPLY_TO_MODEL_MAPPINGS_ADJUST_STORAGE",
	APPLY_TO_MODEL_MAPPINGS_ADJUST_STORAGE_GENERATE_TASKS:"APPLY_TO_MODEL_MAPPINGS_ADJUST_STORAGE_GENERATE_TASKS",
	IGNORE_CHANGES:"IGNORE_CHANGES"
};

DO.ComposeEventTypes = {
	ETL_TASK_STARTED:"ETL_TASK_STARTED",
	ETL_TASK_FINISHED:"ETL_TASK_FINISHED",
	ETL_TASK_FINISHED_WITH_ERROR:"ETL_TASK_FINISHED_WITH_ERROR"
};



DO.ComposeEventTypes_values = {
	ETL_TASK_STARTED:10,
	ETL_TASK_FINISHED:11,
	ETL_TASK_FINISHED_WITH_ERROR:12
};

DO.ComposeEventTypes_displayNames = {
	ETL_TASK_STARTED:"ETL_TASK_STARTED",
	ETL_TASK_FINISHED:"ETL_TASK_FINISHED",
	ETL_TASK_FINISHED_WITH_ERROR:"ETL_TASK_FINISHED_WITH_ERROR"
};

DO.ComposeEventId = {
	TASK_ENDEED_WITH_ERROR:"TASK_ENDEED_WITH_ERROR",
	TASK_STARTED:"TASK_STARTED",
	TASK_COMPLETED_SUCCESSFULLY:"TASK_COMPLETED_SUCCESSFULLY"
};



DO.ComposeEventId_values = {
	TASK_ENDEED_WITH_ERROR:261,
	TASK_STARTED:400,
	TASK_COMPLETED_SUCCESSFULLY:406
};

DO.ComposeEventId_displayNames = {
	TASK_ENDEED_WITH_ERROR:"TASK_ENDEED_WITH_ERROR",
	TASK_STARTED:"TASK_STARTED",
	TASK_COMPLETED_SUCCESSFULLY:"TASK_COMPLETED_SUCCESSFULLY"
};

DO.ComposeTaskNotificationVariables = {
	PROJECT_NAME:"PROJECT_NAME",
	TASK_NAME:"TASK_NAME",
	INSERTED:"INSERTED",
	UPDATED:"UPDATED",
	DELETED:"DELETED",
	ERROR_CODE:"ERROR_CODE",
	ERROR_DETAILS:"ERROR_DETAILS",
	EVENT_TYPE:"EVENT_TYPE",
	EVENT_TYPE_DESCRIPTION:"EVENT_TYPE_DESCRIPTION",
	EVENT_TIME:"EVENT_TIME",
	LINK:"LINK"
};



DO.ComposeTaskNotificationVariables_values = {
	PROJECT_NAME:10,
	TASK_NAME:11,
	INSERTED:12,
	UPDATED:13,
	DELETED:14,
	ERROR_CODE:15,
	ERROR_DETAILS:16,
	EVENT_TYPE:17,
	EVENT_TYPE_DESCRIPTION:18,
	EVENT_TIME:19,
	LINK:20
};

DO.ComposeTaskNotificationVariables_displayNames = {
	PROJECT_NAME:"PROJECT_NAME",
	TASK_NAME:"TASK_NAME",
	INSERTED:"INSERTED",
	UPDATED:"UPDATED",
	DELETED:"DELETED",
	ERROR_CODE:"ERROR_CODE",
	ERROR_DETAILS:"ERROR_DETAILS",
	EVENT_TYPE:"EVENT_TYPE",
	EVENT_TYPE_DESCRIPTION:"EVENT_TYPE_DESCRIPTION",
	EVENT_TIME:"EVENT_TIME",
	LINK:"LINK"
};

DO.ComposeWorkflowNotificationVariables = {
	PROJECT_NAME:"PROJECT_NAME",
	WORKFLOW_NAME:"WORKFLOW_NAME",
	ERROR_DETAILS:"ERROR_DETAILS",
	EVENT_TYPE:"EVENT_TYPE",
	EVENT_TYPE_DESCRIPTION:"EVENT_TYPE_DESCRIPTION",
	EVENT_TIME:"EVENT_TIME",
	LINK:"LINK"
};



DO.ComposeWorkflowNotificationVariables_values = {
	PROJECT_NAME:10,
	WORKFLOW_NAME:11,
	ERROR_DETAILS:12,
	EVENT_TYPE:13,
	EVENT_TYPE_DESCRIPTION:14,
	EVENT_TIME:15,
	LINK:16
};

DO.ComposeWorkflowNotificationVariables_displayNames = {
	PROJECT_NAME:"PROJECT_NAME",
	WORKFLOW_NAME:"WORKFLOW_NAME",
	ERROR_DETAILS:"ERROR_DETAILS",
	EVENT_TYPE:"EVENT_TYPE",
	EVENT_TYPE_DESCRIPTION:"EVENT_TYPE_DESCRIPTION",
	EVENT_TIME:"EVENT_TIME",
	LINK:"LINK"
};

DO.ComposeAuditErrorType = {
	GENERAL_ERROR:"GENERAL_ERROR",
	CANNOT_RUN:"CANNOT_RUN",
	FAILED_TO_START:"FAILED_TO_START"
};



DO.ComposeAuditErrorType_values = {
	GENERAL_ERROR:0,
	CANNOT_RUN:1,
	FAILED_TO_START:2
};

DO.ComposeAuditErrorType_displayNames = {
	GENERAL_ERROR:"GENERAL_ERROR",
	CANNOT_RUN:"CANNOT_RUN",
	FAILED_TO_START:"FAILED_TO_START"
};

DO.DataProfilingColumnType = {
	NULLS:"NULLS",
	COUNT_DISTINCT:"COUNT_DISTINCT",
	DUPLICATE:"DUPLICATE",
	MIN:"MIN",
	MAX:"MAX",
	MIN_LENGTH:"MIN_LENGTH",
	MAX_LENGTH:"MAX_LENGTH"
};



DO.DataProfilingColumnType_values = {
	NULLS:10,
	COUNT_DISTINCT:11,
	DUPLICATE:12,
	MIN:13,
	MAX:14,
	MIN_LENGTH:15,
	MAX_LENGTH:16
};

DO.DataProfilingColumnType_displayNames = {
	NULLS:"NULLS",
	COUNT_DISTINCT:"COUNT_DISTINCT",
	DUPLICATE:"DUPLICATE",
	MIN:"MIN",
	MAX:"MAX",
	MIN_LENGTH:"MIN_LENGTH",
	MAX_LENGTH:"MAX_LENGTH"
};

DO.EnvironmentVariablesFileType = {
	ALL:"ALL",
	PREDEFINED:"PREDEFINED"
};



DO.EnvironmentVariablesFileType_values = {
	ALL:10,
	PREDEFINED:11
};

DO.EnvironmentVariablesFileType_displayNames = {
	ALL:"ALL",
	PREDEFINED:"PREDEFINED"
};

DO.GenerateDocumentationOption = {
	MODEL:"MODEL",
	ETL_SET:"ETL_SET",
	DATA_MART:"DATA_MART",
	APPENDIX:"APPENDIX"
};



DO.GenerateDocumentationOption_values = {
	MODEL:1,
	ETL_SET:4,
	DATA_MART:2,
	APPENDIX:8
};

DO.GenerateDocumentationOption_displayNames = {
	MODEL:"Model",
	ETL_SET:"Data Warehouse Tasks",
	DATA_MART:"Data Mart Tasks",
	APPENDIX:"Appendix - Databases"
};

DO.EntityState = {
	BEFORE_LOADING:"BEFORE_LOADING",
	LOADING_STAGING:"LOADING_STAGING",
	LOADING_STAGING_PRIME:"LOADING_STAGING_PRIME",
	LOADING_HUB:"LOADING_HUB",
	LOADING_SATELLITES:"LOADING_SATELLITES",
	LOADING_STAR_SCHEMA:"LOADING_STAR_SCHEMA",
	LOADING_DIMENSION:"LOADING_DIMENSION",
	LOADING:"LOADING",
	DONE:"DONE",
	ERROR:"ERROR",
	SKIPPED:"SKIPPED",
	CANCELED:"CANCELED"
};



DO.EntityState_values = {
	BEFORE_LOADING:0,
	LOADING_STAGING:1,
	LOADING_STAGING_PRIME:2,
	LOADING_HUB:3,
	LOADING_SATELLITES:4,
	LOADING_STAR_SCHEMA:5,
	LOADING_DIMENSION:6,
	LOADING:7,
	DONE:8,
	ERROR:9,
	SKIPPED:10,
	CANCELED:11
};

DO.EntityState_displayNames = {
	BEFORE_LOADING:"Before loading",
	LOADING_STAGING:"Loading staging",
	LOADING_STAGING_PRIME:"Preparing data",
	LOADING_HUB:"Loading hub",
	LOADING_SATELLITES:"Loading satellites",
	LOADING_STAR_SCHEMA:"Loading star schema",
	LOADING_DIMENSION:"Loading dimension",
	LOADING:"Loading",
	DONE:"Done",
	ERROR:"Error",
	SKIPPED:"Skipped",
	CANCELED:"Canceled"
};

DO.ReplicateTaskState = {
	STOPPED:"STOPPED",
	STARTING:"STARTING",
	RUNNING:"RUNNING",
	PAUSED:"PAUSED",
	STOPPING:"STOPPING",
	ERROR:"ERROR",
	NOT_EXIST:"NOT_EXIST",
	RECOVERY:"RECOVERY"
};



DO.ReplicateTaskState_values = {
	STOPPED:0,
	STARTING:1,
	RUNNING:2,
	PAUSED:3,
	STOPPING:4,
	ERROR:5,
	NOT_EXIST:6,
	RECOVERY:7
};

DO.ReplicateTaskState_displayNames = {
	STOPPED:"STOPPED",
	STARTING:"STARTING",
	RUNNING:"RUNNING",
	PAUSED:"PAUSED",
	STOPPING:"STOPPING",
	ERROR:"ERROR",
	NOT_EXIST:"NOT_EXIST",
	RECOVERY:"RECOVERY"
};

DO.ReplicateTaskStopReason = {
	NORMAL:"NORMAL",
	RECOVERABLE_ERROR:"RECOVERABLE_ERROR",
	FATAL_ERROR:"FATAL_ERROR",
	FULL_LOAD_ONLY_FINISHED:"FULL_LOAD_ONLY_FINISHED",
	STOPPED_AFTER_FULL_LOAD:"STOPPED_AFTER_FULL_LOAD",
	STOPPED_AFTER_CACHED_EVENTS:"STOPPED_AFTER_CACHED_EVENTS",
	EXPRESS_LICENSE_LIMITS_REACHED:"EXPRESS_LICENSE_LIMITS_REACHED"
};



DO.ReplicateTaskStopReason_values = {
	NORMAL:0,
	RECOVERABLE_ERROR:1,
	FATAL_ERROR:2,
	FULL_LOAD_ONLY_FINISHED:3,
	STOPPED_AFTER_FULL_LOAD:4,
	STOPPED_AFTER_CACHED_EVENTS:5,
	EXPRESS_LICENSE_LIMITS_REACHED:6
};

DO.ReplicateTaskStopReason_displayNames = {
	NORMAL:"NORMAL",
	RECOVERABLE_ERROR:"RECOVERABLE_ERROR",
	FATAL_ERROR:"FATAL_ERROR",
	FULL_LOAD_ONLY_FINISHED:"FULL_LOAD_ONLY_FINISHED",
	STOPPED_AFTER_FULL_LOAD:"STOPPED_AFTER_FULL_LOAD",
	STOPPED_AFTER_CACHED_EVENTS:"STOPPED_AFTER_CACHED_EVENTS",
	EXPRESS_LICENSE_LIMITS_REACHED:"EXPRESS_LICENSE_LIMITS_REACHED"
};

DO.Load_Flag = {
	NONE:"NONE",
	TYPE1_NO_INHERITANCE:"TYPE1_NO_INHERITANCE",
	NO_INHERITANCE:"NO_INHERITANCE",
	NO_INHERITANCE_RIS:"NO_INHERITANCE_RIS"
};



DO.Load_Flag_values = {
	NONE:0,
	TYPE1_NO_INHERITANCE:1,
	NO_INHERITANCE:2,
	NO_INHERITANCE_RIS:3
};

DO.Load_Flag_displayNames = {
	NONE:"NONE",
	TYPE1_NO_INHERITANCE:"TYPE1_NO_INHERITANCE",
	NO_INHERITANCE:"NO_INHERITANCE",
	NO_INHERITANCE_RIS:"NO_INHERITANCE_RIS"
};

DO.ComposeDefTypeIds = {
	ComposeHostConfigurationDto:"ComposeHostConfigurationDto",
	ACProjectSettings:"ACProjectSettings",
	ETLInfoDto:"ETLInfoDto",
	InspectETL:"InspectETL",
	RunnerLog:"RunnerLog",
	CustomETLDto:"CustomETLDto",
	GetCustomETLTablesReq:"GetCustomETLTablesReq",
	CustomETLTableData:"CustomETLTableData",
	GetCustomETLColumnsReq:"GetCustomETLColumnsReq",
	EntityDto:"EntityDto",
	EntityFull:"EntityFull",
	TableColumnExtened:"TableColumnExtened",
	TableColumnDto:"TableColumnDto",
	DomainAttributeDto:"DomainAttributeDto",
	MappingDto:"MappingDto",
	StagingColumn:"StagingColumn",
	DataMartInfoDto:"DataMartInfoDto",
	FactDimInfo:"FactDimInfo",
	ComposeLoggers:"ComposeLoggers",
	ComposeLicense:"ComposeLicense",
	AttributeColumnMappingDto:"AttributeColumnMappingDto",
	EntityGlobalMappingDto:"EntityGlobalMappingDto",
	EtlCommandExecutionData:"EtlCommandExecutionData",
	ComposeAuditRecord:"ComposeAuditRecord",
	TableColumnExtended:"TableColumnExtended",
	PI_Status:"PI_Status",
	DWH_PI_Status:"DWH_PI_Status",
	DM_PI_Status:"DM_PI_Status",
	DWHEtlStatus:"DWHEtlStatus",
	DmEtlStatus:"DmEtlStatus",
	ProjectETLStatus:"ProjectETLStatus",
	ProjectEtlStatus:"ProjectEtlStatus",
	DWHProjectEtlStatus:"DWHProjectEtlStatus",
	DmProjectEtlStatus:"DmProjectEtlStatus",
	AddSourceDatabaseParams:"AddSourceDatabaseParams",
	AddDatabase:"AddDatabase",
	AddDwhDatabaseParams:"AddDwhDatabaseParams",
	AddDatabaseParams:"AddDatabaseParams",
	AddDatabaseSrcTrg:"AddDatabaseSrcTrg",
	AddSrcTrgDatabaseParams:"AddSrcTrgDatabaseParams",
	AddDatabaseReq:"AddDatabaseReq",
	AddDatabaseRsp:"AddDatabaseRsp",
	AddDwhDatabaseReq:"AddDwhDatabaseReq",
	AddDwhDatabaseRsp:"AddDwhDatabaseRsp",
	DeleteDatabaseParams:"DeleteDatabaseParams",
	DeleteDatabaseRsp:"DeleteDatabaseRsp",
	DeleteDwhDatabaseParams:"DeleteDwhDatabaseParams",
	DeleteDwhDatabaseRsp:"DeleteDwhDatabaseRsp",
	UpdateDatabaseParams:"UpdateDatabaseParams",
	UpdateDatabaseRsp:"UpdateDatabaseRsp",
	UpdateDwhDatabaseParams:"UpdateDwhDatabaseParams",
	UpdateDwhDatabaseRsp:"UpdateDwhDatabaseRsp",
	UpdateDatabaseReq:"UpdateDatabaseReq",
	UpdateDwhDatabaseReq:"UpdateDwhDatabaseReq",
	EntityFullDocumentation:"EntityFullDocumentation",
	List:"List",
	DataBaseInnerList:"DataBaseInnerList",
	DataBaseList:"DataBaseList",
	SchedulingList:"SchedulingList",
	NotificationList:"NotificationList",
	ModelEntitiesList:"ModelEntitiesList",
	ModelEntityList:"ModelEntityList",
	DomainAttributeList:"DomainAttributeList",
	DWHLineageInfoDocumentation:"DWHLineageInfoDocumentation",
	RelationsDocumentation:"RelationsDocumentation",
	EntityDWHLineageInfoDocumentation:"EntityDWHLineageInfoDocumentation",
	EntityRelationsInfoDocumentation:"EntityRelationsInfoDocumentation",
	EntityAttributesDocumentation:"EntityAttributesDocumentation",
	EtlInfoDtoList:"EtlInfoDtoList",
	JavaServerConfiguration:"JavaServerConfiguration",
	MappingList:"MappingList",
	MappingEntityList:"MappingEntityList",
	ModelList:"ModelList",
	DateWarehouse:"DateWarehouse",
	ETLSets:"ETLSets",
	DataMarts:"DataMarts",
	Appendix:"Appendix",
	GlobalMappings:"GlobalMappings",
	GlobalProjectSettings:"GlobalProjectSettings",
	EtlMappingList:"EtlMappingList",
	CustomETLList:"CustomETLList",
	ETLInfo:"ETLInfo",
	ETLMappingList:"ETLMappingList",
	ETLInfoDtoList:"ETLInfoDtoList",
	EtlInfoSettings:"EtlInfoSettings",
	StarSchemaList:"StarSchemaList",
	DimentionsList:"DimentionsList",
	DataMartInfoList:"DataMartInfoList",
	ETLInfoList:"ETLInfoList",
	DataMartsList:"DataMartsList",
	NodeList:"NodeList",
	LeafList:"LeafList",
	NodesList:"NodesList",
	LeafsList:"LeafsList",
	NodesLeafList:"NodesLeafList",
	AttributesList:"AttributesList",
	DocItem:"DocItem",
	DocDomainAttributeDto:"DocDomainAttributeDto",
	EtlTaskExecutorStatusDto:"EtlTaskExecutorStatusDto",
	ETLRunTimeData:"ETLRunTimeData",
	ObjectList:"ObjectList",
	RuleBase:"RuleBase",
	DataQualityRule:"DataQualityRule",
	CleansingRule:"CleansingRule",
	ReplicateServerConfigurationDto:"ReplicateServerConfigurationDto",
	ReplicateTaskExecutorDto:"ReplicateTaskExecutorDto",
	ReplicateTaskExecutorStatusDto:"ReplicateTaskExecutorStatusDto",
	ReusableTransformationsDto:"ReusableTransformationsDto",
	CommandTaskExecutorStatusDto:"CommandTaskExecutorStatusDto",
	CommandTaskInfoDto:"CommandTaskInfoDto",
	CommandTaskExecutorDto:"CommandTaskExecutorDto",
	tx_usage_base:"tx_usage_base",
	usage_in_derived_attribute:"usage_in_derived_attribute",
	TxUsageBase:"TxUsageBase",
	UsageInDerivedAttribute:"UsageInDerivedAttribute",
	UsageInMapping:"UsageInMapping",
	UsageInMappingColumnExpression:"UsageInMappingColumnExpression",
	UsageInMappingColumnLookup:"UsageInMappingColumnLookup",
	UsageInMappingFilter:"UsageInMappingFilter",
	UsageInMappingDataQuality:"UsageInMappingDataQuality",
	UsageInMappingDataCleansing:"UsageInMappingDataCleansing",
	UsageInDataMartBase:"UsageInDataMartBase",
	UsageInDataMartStarSchemaColumn:"UsageInDataMartStarSchemaColumn",
	UsageInDataMartStarSchemaFilter:"UsageInDataMartStarSchemaFilter",
	UsageInDataMartStarSchemaAggregateFilter:"UsageInDataMartStarSchemaAggregateFilter",
	UsageInDataMartDimensionColumn:"UsageInDataMartDimensionColumn",
	UsageInDataMartDimensionFilter:"UsageInDataMartDimensionFilter",
	UsageInTransformation:"UsageInTransformation",
	PhysicalProperties:"PhysicalProperties",
	PhysicalPropertiesDto:"PhysicalPropertiesDto",
	PhysicalColumns:"PhysicalColumns",
	PhysicalColumnInfo:"PhysicalColumnInfo",
	RedshiftPhysicalProperties:"RedshiftPhysicalProperties",
	BaseDDLResp:"BaseDDLResp",
	CreateDataWarehouseResp:"CreateDataWarehouseResp",
	CreatePhysicalDMAResp:"CreatePhysicalDMAResp",
	AdjustDWHResp:"AdjustDWHResp",
	AdjustDMResp:"AdjustDMResp",
	DropTablesResp:"DropTablesResp",
	BaseResp:"BaseResp",
	GenerateDWHETLsResp:"GenerateDWHETLsResp",
	DocTransformationDto:"DocTransformationDto",
	FactDimDto:"FactDimDto",
	VersionControlDto:"VersionControlDto",
	TdwmColumnsDto:"TdwmColumnsDto",
	TdwmTablesDto:"TdwmTablesDto",
	PrepareAllDataMartsResp:"PrepareAllDataMartsResp",
	AzureDistributionInfo:"AzureDistributionInfo",
	AzurePhysicalProperties:"AzurePhysicalProperties",
	TestRemoteConnectionParams:"TestRemoteConnectionParams",
	GetComposeTaskInfoParams:"GetComposeTaskInfoParams",
	HivePhysicalProperties:"HivePhysicalProperties",
	ClearDBMetaDataParams:"ClearDBMetaDataParams",
	FillStorageMetadataFromDatabaseParams:"FillStorageMetadataFromDatabaseParams",
	SchemaEvolutionContextDicDto:"SchemaEvolutionContextDicDto",
	AutomaticSchemaEvolutionScanParams:"AutomaticSchemaEvolutionScanParams",
	TableModifiers:"TableModifiers",
	RecreateViewsResp:"RecreateViewsResp",
	PutReplicateServerSettingsParams:"PutReplicateServerSettingsParams",
	DeleteReplicateServerConfParams:"DeleteReplicateServerConfParams",
	GetReplicateServerSettingParams:"GetReplicateServerSettingParams",
	GetReplicateServersParams:"GetReplicateServersParams",
	GetReplicateTasksParams:"GetReplicateTasksParams",
	TestReplicateConnectionParams:"TestReplicateConnectionParams",
	ReplicateServersManagerDto:"ReplicateServersManagerDto",
	TemplateVariablesDto:"TemplateVariablesDto",
	ExportProjectRepositoryParams:"ExportProjectRepositoryParams"
};



DO.ComposeDefTypeIds_values = {
	ComposeHostConfigurationDto:50001,
	ACProjectSettings:50002,
	ETLInfoDto:50004,
	InspectETL:50005,
	RunnerLog:50006,
	CustomETLDto:50007,
	GetCustomETLTablesReq:50008,
	CustomETLTableData:50009,
	GetCustomETLColumnsReq:50010,
	EntityDto:50014,
	EntityFull:50015,
	TableColumnExtened:50016,
	TableColumnDto:50017,
	DomainAttributeDto:50018,
	MappingDto:50019,
	StagingColumn:50020,
	DataMartInfoDto:50021,
	FactDimInfo:50022,
	ComposeLoggers:50023,
	ComposeLicense:50024,
	AttributeColumnMappingDto:50025,
	EntityGlobalMappingDto:50026,
	EtlCommandExecutionData:50027,
	ComposeAuditRecord:50028,
	TableColumnExtended:50029,
	PI_Status:50030,
	DWH_PI_Status:50031,
	DM_PI_Status:50032,
	DWHEtlStatus:50033,
	DmEtlStatus:50034,
	ProjectETLStatus:50035,
	ProjectEtlStatus:50036,
	DWHProjectEtlStatus:50037,
	DmProjectEtlStatus:50038,
	AddSourceDatabaseParams:50039,
	AddDatabase:50040,
	AddDwhDatabaseParams:50041,
	AddDatabaseParams:50042,
	AddDatabaseSrcTrg:50043,
	AddSrcTrgDatabaseParams:50044,
	AddDatabaseReq:50045,
	AddDatabaseRsp:50046,
	AddDwhDatabaseReq:50047,
	AddDwhDatabaseRsp:50048,
	DeleteDatabaseParams:50049,
	DeleteDatabaseRsp:50050,
	DeleteDwhDatabaseParams:50051,
	DeleteDwhDatabaseRsp:50052,
	UpdateDatabaseParams:50053,
	UpdateDatabaseRsp:50054,
	UpdateDwhDatabaseParams:50055,
	UpdateDwhDatabaseRsp:50056,
	UpdateDatabaseReq:50057,
	UpdateDwhDatabaseReq:50058,
	EntityFullDocumentation:50060,
	List:50061,
	DataBaseInnerList:50062,
	DataBaseList:50063,
	SchedulingList:50064,
	NotificationList:50065,
	ModelEntitiesList:50066,
	ModelEntityList:50067,
	DomainAttributeList:50068,
	DWHLineageInfoDocumentation:50069,
	RelationsDocumentation:50070,
	EntityDWHLineageInfoDocumentation:50071,
	EntityRelationsInfoDocumentation:50072,
	EntityAttributesDocumentation:50073,
	EtlInfoDtoList:50074,
	JavaServerConfiguration:50075,
	MappingList:50077,
	MappingEntityList:50078,
	ModelList:50079,
	DateWarehouse:50080,
	ETLSets:50081,
	DataMarts:50082,
	Appendix:50083,
	GlobalMappings:50084,
	GlobalProjectSettings:50085,
	EtlMappingList:50086,
	CustomETLList:50087,
	ETLInfo:50088,
	ETLMappingList:50089,
	ETLInfoDtoList:50090,
	EtlInfoSettings:50091,
	StarSchemaList:50092,
	DimentionsList:50093,
	DataMartInfoList:50094,
	ETLInfoList:50095,
	DataMartsList:50096,
	NodeList:50097,
	LeafList:50098,
	NodesList:50099,
	LeafsList:50100,
	NodesLeafList:50101,
	AttributesList:50102,
	DocItem:50103,
	DocDomainAttributeDto:50104,
	EtlTaskExecutorStatusDto:50105,
	ETLRunTimeData:50106,
	ObjectList:50107,
	RuleBase:50108,
	DataQualityRule:50109,
	CleansingRule:50111,
	ReplicateServerConfigurationDto:50112,
	ReplicateTaskExecutorDto:50113,
	ReplicateTaskExecutorStatusDto:50114,
	ReusableTransformationsDto:50115,
	CommandTaskExecutorStatusDto:50116,
	CommandTaskInfoDto:50117,
	CommandTaskExecutorDto:50118,
	tx_usage_base:50119,
	usage_in_derived_attribute:50120,
	TxUsageBase:50121,
	UsageInDerivedAttribute:50122,
	UsageInMapping:50123,
	UsageInMappingColumnExpression:50124,
	UsageInMappingColumnLookup:50125,
	UsageInMappingFilter:50126,
	UsageInMappingDataQuality:50127,
	UsageInMappingDataCleansing:50128,
	UsageInDataMartBase:50129,
	UsageInDataMartStarSchemaColumn:50130,
	UsageInDataMartStarSchemaFilter:50131,
	UsageInDataMartStarSchemaAggregateFilter:50132,
	UsageInDataMartDimensionColumn:50133,
	UsageInDataMartDimensionFilter:50134,
	UsageInTransformation:50135,
	PhysicalProperties:50136,
	PhysicalPropertiesDto:50138,
	PhysicalColumns:50139,
	PhysicalColumnInfo:50140,
	RedshiftPhysicalProperties:50143,
	BaseDDLResp:50144,
	CreateDataWarehouseResp:50145,
	CreatePhysicalDMAResp:50146,
	AdjustDWHResp:50147,
	AdjustDMResp:50148,
	DropTablesResp:50149,
	BaseResp:50153,
	GenerateDWHETLsResp:50154,
	DocTransformationDto:50155,
	FactDimDto:50156,
	VersionControlDto:50157,
	TdwmColumnsDto:50158,
	TdwmTablesDto:50159,
	PrepareAllDataMartsResp:50160,
	AzureDistributionInfo:50161,
	AzurePhysicalProperties:50162,
	TestRemoteConnectionParams:50163,
	GetComposeTaskInfoParams:50164,
	HivePhysicalProperties:50165,
	ClearDBMetaDataParams:50166,
	FillStorageMetadataFromDatabaseParams:50167,
	SchemaEvolutionContextDicDto:50169,
	AutomaticSchemaEvolutionScanParams:50170,
	TableModifiers:50171,
	RecreateViewsResp:50172,
	PutReplicateServerSettingsParams:50173,
	DeleteReplicateServerConfParams:50174,
	GetReplicateServerSettingParams:50175,
	GetReplicateServersParams:50176,
	GetReplicateTasksParams:50177,
	TestReplicateConnectionParams:50178,
	ReplicateServersManagerDto:50179,
	TemplateVariablesDto:50180,
	ExportProjectRepositoryParams:50181
};

DO.ComposeDefTypeIds_displayNames = {
	ComposeHostConfigurationDto:"ComposeHostConfigurationDto",
	ACProjectSettings:"ACProjectSettings",
	ETLInfoDto:"ETLInfoDto",
	InspectETL:"InspectETL",
	RunnerLog:"RunnerLog",
	CustomETLDto:"CustomETLDto",
	GetCustomETLTablesReq:"GetCustomETLTablesReq",
	CustomETLTableData:"CustomETLTableData",
	GetCustomETLColumnsReq:"GetCustomETLColumnsReq",
	EntityDto:"EntityDto",
	EntityFull:"EntityFull",
	TableColumnExtened:"TableColumnExtened",
	TableColumnDto:"TableColumnDto",
	DomainAttributeDto:"DomainAttributeDto",
	MappingDto:"MappingDto",
	StagingColumn:"StagingColumn",
	DataMartInfoDto:"DataMartInfoDto",
	FactDimInfo:"FactDimInfo",
	ComposeLoggers:"ComposeLoggers",
	ComposeLicense:"ComposeLicense",
	AttributeColumnMappingDto:"AttributeColumnMappingDto",
	EntityGlobalMappingDto:"EntityGlobalMappingDto",
	EtlCommandExecutionData:"EtlCommandExecutionData",
	ComposeAuditRecord:"ComposeAuditRecord",
	TableColumnExtended:"TableColumnExtended",
	PI_Status:"PI_Status",
	DWH_PI_Status:"DWH_PI_Status",
	DM_PI_Status:"DM_PI_Status",
	DWHEtlStatus:"DWHEtlStatus",
	DmEtlStatus:"DmEtlStatus",
	ProjectETLStatus:"ProjectETLStatus",
	ProjectEtlStatus:"ProjectEtlStatus",
	DWHProjectEtlStatus:"DWHProjectEtlStatus",
	DmProjectEtlStatus:"DmProjectEtlStatus",
	AddSourceDatabaseParams:"AddSourceDatabaseParams",
	AddDatabase:"AddDatabase",
	AddDwhDatabaseParams:"AddDwhDatabaseParams",
	AddDatabaseParams:"AddDatabaseParams",
	AddDatabaseSrcTrg:"AddDatabaseSrcTrg",
	AddSrcTrgDatabaseParams:"AddSrcTrgDatabaseParams",
	AddDatabaseReq:"AddDatabaseReq",
	AddDatabaseRsp:"AddDatabaseRsp",
	AddDwhDatabaseReq:"AddDwhDatabaseReq",
	AddDwhDatabaseRsp:"AddDwhDatabaseRsp",
	DeleteDatabaseParams:"DeleteDatabaseParams",
	DeleteDatabaseRsp:"DeleteDatabaseRsp",
	DeleteDwhDatabaseParams:"DeleteDwhDatabaseParams",
	DeleteDwhDatabaseRsp:"DeleteDwhDatabaseRsp",
	UpdateDatabaseParams:"UpdateDatabaseParams",
	UpdateDatabaseRsp:"UpdateDatabaseRsp",
	UpdateDwhDatabaseParams:"UpdateDwhDatabaseParams",
	UpdateDwhDatabaseRsp:"UpdateDwhDatabaseRsp",
	UpdateDatabaseReq:"UpdateDatabaseReq",
	UpdateDwhDatabaseReq:"UpdateDwhDatabaseReq",
	EntityFullDocumentation:"EntityFullDocumentation",
	List:"List",
	DataBaseInnerList:"DataBaseInnerList",
	DataBaseList:"DataBaseList",
	SchedulingList:"SchedulingList",
	NotificationList:"NotificationList",
	ModelEntitiesList:"ModelEntitiesList",
	ModelEntityList:"ModelEntityList",
	DomainAttributeList:"DomainAttributeList",
	DWHLineageInfoDocumentation:"DWHLineageInfoDocumentation",
	RelationsDocumentation:"RelationsDocumentation",
	EntityDWHLineageInfoDocumentation:"EntityDWHLineageInfoDocumentation",
	EntityRelationsInfoDocumentation:"EntityRelationsInfoDocumentation",
	EntityAttributesDocumentation:"EntityAttributesDocumentation",
	EtlInfoDtoList:"EtlInfoDtoList",
	JavaServerConfiguration:"JavaServerConfiguration",
	MappingList:"MappingList",
	MappingEntityList:"MappingEntityList",
	ModelList:"ModelList",
	DateWarehouse:"DateWarehouse",
	ETLSets:"ETLSets",
	DataMarts:"DataMarts",
	Appendix:"Appendix",
	GlobalMappings:"GlobalMappings",
	GlobalProjectSettings:"GlobalProjectSettings",
	EtlMappingList:"EtlMappingList",
	CustomETLList:"CustomETLList",
	ETLInfo:"ETLInfo",
	ETLMappingList:"ETLMappingList",
	ETLInfoDtoList:"ETLInfoDtoList",
	EtlInfoSettings:"EtlInfoSettings",
	StarSchemaList:"StarSchemaList",
	DimentionsList:"DimentionsList",
	DataMartInfoList:"DataMartInfoList",
	ETLInfoList:"ETLInfoList",
	DataMartsList:"DataMartsList",
	NodeList:"NodeList",
	LeafList:"LeafList",
	NodesList:"NodesList",
	LeafsList:"LeafsList",
	NodesLeafList:"NodesLeafList",
	AttributesList:"AttributesList",
	DocItem:"DocItem",
	DocDomainAttributeDto:"DocDomainAttributeDto",
	EtlTaskExecutorStatusDto:"EtlTaskExecutorStatusDto",
	ETLRunTimeData:"ETLRunTimeData",
	ObjectList:"ObjectList",
	RuleBase:"RuleBase",
	DataQualityRule:"DataQualityRule",
	CleansingRule:"CleansingRule",
	ReplicateServerConfigurationDto:"ReplicateServerConfigurationDto",
	ReplicateTaskExecutorDto:"ReplicateTaskExecutorDto",
	ReplicateTaskExecutorStatusDto:"ReplicateTaskExecutorStatusDto",
	ReusableTransformationsDto:"ReusableTransformationsDto",
	CommandTaskExecutorStatusDto:"CommandTaskExecutorStatusDto",
	CommandTaskInfoDto:"CommandTaskInfoDto",
	CommandTaskExecutorDto:"CommandTaskExecutorDto",
	tx_usage_base:"tx_usage_base",
	usage_in_derived_attribute:"usage_in_derived_attribute",
	TxUsageBase:"TxUsageBase",
	UsageInDerivedAttribute:"UsageInDerivedAttribute",
	UsageInMapping:"UsageInMapping",
	UsageInMappingColumnExpression:"UsageInMappingColumnExpression",
	UsageInMappingColumnLookup:"UsageInMappingColumnLookup",
	UsageInMappingFilter:"UsageInMappingFilter",
	UsageInMappingDataQuality:"UsageInMappingDataQuality",
	UsageInMappingDataCleansing:"UsageInMappingDataCleansing",
	UsageInDataMartBase:"UsageInDataMartBase",
	UsageInDataMartStarSchemaColumn:"UsageInDataMartStarSchemaColumn",
	UsageInDataMartStarSchemaFilter:"UsageInDataMartStarSchemaFilter",
	UsageInDataMartStarSchemaAggregateFilter:"UsageInDataMartStarSchemaAggregateFilter",
	UsageInDataMartDimensionColumn:"UsageInDataMartDimensionColumn",
	UsageInDataMartDimensionFilter:"UsageInDataMartDimensionFilter",
	UsageInTransformation:"UsageInTransformation",
	PhysicalProperties:"PhysicalProperties",
	PhysicalPropertiesDto:"PhysicalPropertiesDto",
	PhysicalColumns:"PhysicalColumns",
	PhysicalColumnInfo:"PhysicalColumnInfo",
	RedshiftPhysicalProperties:"RedshiftPhysicalProperties",
	BaseDDLResp:"BaseDDLResp",
	CreateDataWarehouseResp:"CreateDataWarehouseResp",
	CreatePhysicalDMAResp:"CreatePhysicalDMAResp",
	AdjustDWHResp:"AdjustDWHResp",
	AdjustDMResp:"AdjustDMResp",
	DropTablesResp:"DropTablesResp",
	BaseResp:"BaseResp",
	GenerateDWHETLsResp:"GenerateDWHETLsResp",
	DocTransformationDto:"DocTransformationDto",
	FactDimDto:"FactDimDto",
	VersionControlDto:"VersionControlDto",
	TdwmColumnsDto:"TdwmColumnsDto",
	TdwmTablesDto:"TdwmTablesDto",
	PrepareAllDataMartsResp:"PrepareAllDataMartsResp",
	AzureDistributionInfo:"AzureDistributionInfo",
	AzurePhysicalProperties:"AzurePhysicalProperties",
	TestRemoteConnectionParams:"TestRemoteConnectionParams",
	GetComposeTaskInfoParams:"GetComposeTaskInfoParams",
	HivePhysicalProperties:"HivePhysicalProperties",
	ClearDBMetaDataParams:"ClearDBMetaDataParams",
	FillStorageMetadataFromDatabaseParams:"FillStorageMetadataFromDatabaseParams",
	SchemaEvolutionContextDicDto:"SchemaEvolutionContextDicDto",
	AutomaticSchemaEvolutionScanParams:"AutomaticSchemaEvolutionScanParams",
	TableModifiers:"TableModifiers",
	RecreateViewsResp:"RecreateViewsResp",
	PutReplicateServerSettingsParams:"PutReplicateServerSettingsParams",
	DeleteReplicateServerConfParams:"DeleteReplicateServerConfParams",
	GetReplicateServerSettingParams:"GetReplicateServerSettingParams",
	GetReplicateServersParams:"GetReplicateServersParams",
	GetReplicateTasksParams:"GetReplicateTasksParams",
	TestReplicateConnectionParams:"TestReplicateConnectionParams",
	ReplicateServersManagerDto:"ReplicateServersManagerDto",
	TemplateVariablesDto:"TemplateVariablesDto",
	ExportProjectRepositoryParams:"ExportProjectRepositoryParams"
};

DO.AttributeBase = {
	$type:"$type",
	next:"next"
};

DO.AttributeBase_Validation = {
	next: {
		required: true
	}
};


DO.AttributeBase_Defaults = {
	$type:"AttributeBase"
};

DO.AttributeBase_Types = {
};


DO.msg_init_fields = {
	name:"name",
	fld_default:"fld_default"
};

DO.msg_init_fields_Validation = {
};


DO.msg_init_fields_Defaults = {
	name:"",
	fld_default:""
};

DO.msg_init_fields_Types = {
};


DO.KeyValue = {
	key:"key",
	value:"value"
};

DO.KeyValue_Validation = {
	key: {
		required: true
	},
	value: {
		required: true
	}
};


DO.KeyValue_Defaults = {
	key:"",
	value:""
};

DO.KeyValue_Types = {
};


DO.MsgValidationFields = {
	name:"name",
	pattern:"pattern",
	maxLength:"maxLength",
	minLength:"minLength",
	equalTo:"equalTo",
	rangeLength:"rangeLength",
	max:"max",
	min:"min",
	required:"required",
	ObjectName:"ObjectName",
	httpUrl:"httpUrl"
};

DO.MsgValidationFields_Validation = {
	maxLength: {
		number: true
	},
	minLength: {
		number: true
	},
	rangeLength: {
		number: true
	},
	max: {
		number: true
	},
	min: {
		number: true
	}
};


DO.MsgValidationFields_Defaults = {
	name:"",
	pattern:"",
	maxLength:0,
	minLength:0,
	equalTo:"",
	rangeLength:[],
	max:0,
	min:0,
	required:false,
	ObjectName:"^[a-zA-Z]+[a-zA-Z0-9_]{0,}$",
	httpUrl:false
};

DO.MsgValidationFields_Types = {
};


DO.DTObjectMetaData = {
	creation_time:"creation_time",
	modification_time:"modification_time",
	modified_by:"modified_by",
	created_by:"created_by",
	description:"description",
	tags:"tags",
	caller_role:"caller_role"
};

DO.DTObjectMetaData_Validation = {
	creation_time: {
		number: true
	},
	modification_time: {
		number: true
	}
};


DO.DTObjectMetaData_Defaults = {
	creation_time:0,
	modification_time:0,
	modified_by:"",
	created_by:"",
	description:"",
	tags:[],
	caller_role:DO.AuthUserRoleType.NONE
};

DO.DTObjectMetaData_Types = {
	caller_role:"AuthUserRoleType"
};


DO.DTObjectHeader = {
	$type:"$type",
	metadata:"metadata"
};

DO.DTObjectHeader_Validation = {
};


DO.DTObjectHeader_Defaults = {
	$type:"DTObjectHeader",
	metadata:null
};

DO.DTObjectHeader_Types = {
	metadata:"DTObjectMetaData"
};


DO.DTObject = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version"
};

DO.DTObject_Validation = {
	version: {
		number: true
	}
};


DO.DTObject_Defaults = {
	$type:"DTObject",
	metadata:null,
	name:"",
	version:0
};

DO.DTObject_Types = {
	metadata:"DTObjectMetaData"
};


DO.DTObjectWithId = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id"
};

DO.DTObjectWithId_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	}
};


DO.DTObjectWithId_Defaults = {
	$type:"DTObjectWithId",
	metadata:null,
	name:"",
	version:0,
	id:0
};

DO.DTObjectWithId_Types = {
	metadata:"DTObjectMetaData"
};


DO.ConfigureRtoDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	configuration_name:"configuration_name"
};

DO.ConfigureRtoDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	}
};


DO.ConfigureRtoDto_Defaults = {
	$type:"ConfigureRtoDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	configuration_name:""
};

DO.ConfigureRtoDto_Types = {
	metadata:"DTObjectMetaData"
};


DO.RepositoryDTO = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	virtual_path:"virtual_path",
	configuration_objects:"configuration_objects"
};

DO.RepositoryDTO_Validation = {
	version: {
		number: true
	}
};


DO.RepositoryDTO_Defaults = {
	$type:"RepositoryDTO",
	metadata:null,
	name:"",
	version:0,
	virtual_path:"",
	configuration_objects:[]
};

DO.RepositoryDTO_Types = {
	metadata:"DTObjectMetaData"
};


DO.DownloadFileToken = {
	token:"token"
};

DO.DownloadFileToken_Validation = {
};


DO.DownloadFileToken_Defaults = {
	token:""
};

DO.DownloadFileToken_Types = {
};


DO.FileChunk = {
	$type:"$type",
	text:"text",
	next_position:"next_position"
};

DO.FileChunk_Validation = {
	text: {
		required: true
	},
	next_position: {
		required: true,
		number: true
	}
};


DO.FileChunk_Defaults = {
	$type:"FileChunk",
	text:"",
	next_position:0
};

DO.FileChunk_Types = {
};


DO.PluginConfigDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version"
};

DO.PluginConfigDto_Validation = {
	version: {
		number: true
	}
};


DO.PluginConfigDto_Defaults = {
	$type:"PluginConfigDto",
	metadata:null,
	name:"",
	version:0
};

DO.PluginConfigDto_Types = {
	metadata:"DTObjectMetaData"
};


DO.JavaServerConfigurationDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	server:"server",
	port:"port",
	user_name:"user_name",
	password:"password",
	local_server:"local_server"
};

DO.JavaServerConfigurationDto_Validation = {
	version: {
		number: true
	},
	port: {
		number: true
	}
};


DO.JavaServerConfigurationDto_Defaults = {
	$type:"JavaServerConfigurationDto",
	metadata:null,
	name:"",
	version:0,
	server:"",
	port:3102,
	user_name:"",
	password:"",
	local_server:true
};

DO.JavaServerConfigurationDto_Types = {
	metadata:"DTObjectMetaData"
};


DO.MasterUserKeyFile = {
	version:"version",
	master_user_keys:"master_user_keys",
	application_keys:"application_keys"
};

DO.MasterUserKeyFile_Validation = {
	version: {
		required: true,
		number: true
	}
};


DO.MasterUserKeyFile_Defaults = {
	version:0,
	master_user_keys:[],
	application_keys:[]
};

DO.MasterUserKeyFile_Types = {
};


DO.MasterKeyDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	master_key:"master_key"
};

DO.MasterKeyDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	}
};


DO.MasterKeyDto_Defaults = {
	$type:"MasterKeyDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	master_key:""
};

DO.MasterKeyDto_Types = {
	metadata:"DTObjectMetaData"
};


DO.PingParams = {
};

DO.PingParams_Validation = {
};


DO.PingParams_Defaults = {
};

DO.PingParams_Types = {
};


DO.PingMessage = {
	message:"message"
};

DO.PingMessage_Validation = {
};


DO.PingMessage_Defaults = {
	message:""
};

DO.PingMessage_Types = {
};


DO.GetSessionInfoParams = {
};

DO.GetSessionInfoParams_Validation = {
};


DO.GetSessionInfoParams_Defaults = {
};

DO.GetSessionInfoParams_Types = {
};


DO.SessionInfo = {
	login_name:"login_name",
	display_name:"display_name",
	center_version:"center_version",
	principal_name:"principal_name",
	caller_role:"caller_role",
	capabilities:"capabilities",
	super_user_privilege:"super_user_privilege",
	authentication_method:"authentication_method",
	user_idle_timeout_sec:"user_idle_timeout_sec",
	release_name:"release_name",
	application_data:"application_data"
};

DO.SessionInfo_Validation = {
	user_idle_timeout_sec: {
		number: true
	}
};


DO.SessionInfo_Defaults = {
	login_name:"",
	display_name:"",
	center_version:"",
	principal_name:"",
	caller_role:DO.AuthUserRoleType.NONE,
	capabilities:null,
	super_user_privilege:false,
	authentication_method:DO.AuthenticationMethod.SSO,
	user_idle_timeout_sec:0,
	release_name:"",
	application_data:null
};

DO.SessionInfo_Types = {
	caller_role:"AuthUserRoleType",
	capabilities:"ServerCapabilities",
	authentication_method:"AuthenticationMethod",
	application_data:"ApplicationSessionInfo"
};


DO.ServerCapabilities = {
	dynamic_context:"dynamic_context",
	supports_authorization:"supports_authorization"
};

DO.ServerCapabilities_Validation = {
};


DO.ServerCapabilities_Defaults = {
	dynamic_context:false,
	supports_authorization:false
};

DO.ServerCapabilities_Types = {
};


DO.ApplicationSessionInfo = {
	$type:"$type"
};

DO.ApplicationSessionInfo_Validation = {
};


DO.ApplicationSessionInfo_Defaults = {
	$type:"ApplicationSessionInfo"
};

DO.ApplicationSessionInfo_Types = {
};


DO.ApplicationSessionInfoDummy = {
	$type:"$type"
};

DO.ApplicationSessionInfoDummy_Validation = {
};


DO.ApplicationSessionInfoDummy_Defaults = {
	$type:"ApplicationSessionInfoDummy"
};

DO.ApplicationSessionInfoDummy_Types = {
};


DO.GenerateDownloadTokenParams = {
};

DO.GenerateDownloadTokenParams_Validation = {
};


DO.GenerateDownloadTokenParams_Defaults = {
};

DO.GenerateDownloadTokenParams_Types = {
};


DO.GenerateDownloadTokenResp = {
	token:"token"
};

DO.GenerateDownloadTokenResp_Validation = {
};


DO.GenerateDownloadTokenResp_Defaults = {
	token:""
};

DO.GenerateDownloadTokenResp_Types = {
};


DO.AttInfrastructureLoggers = {
	$type:"$type",
	Root:"Root",
	AttInfrastructure:"AttInfrastructure",
	Service:"Service",
	Host:"Host",
	Command:"Command",
	Security:"Security",
	WebLog:"WebLog",
	Log:"Log"
};

DO.AttInfrastructureLoggers_Validation = {
};


DO.AttInfrastructureLoggers_Defaults = {
	$type:"AttInfrastructureLoggers",
	Root:DO.LogLevel.INFO,
	AttInfrastructure:DO.LogLevel.DEFAULT,
	Service:DO.LogLevel.DEFAULT,
	Host:DO.LogLevel.DEFAULT,
	Command:DO.LogLevel.DEFAULT,
	Security:DO.LogLevel.DEFAULT,
	WebLog:DO.LogLevel.DEFAULT,
	Log:DO.LogLevel.DEFAULT
};

DO.AttInfrastructureLoggers_Types = {
	Root:"LogLevel",
	AttInfrastructure:"LogLevel",
	Service:"LogLevel",
	Host:"LogLevel",
	Command:"LogLevel",
	Security:"LogLevel",
	WebLog:"LogLevel",
	Log:"LogLevel"
};


DO.LogConfiguration = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	rollover_enabled:"rollover_enabled",
	rollover_file_size_bytes:"rollover_file_size_bytes",
	purge_enabled:"purge_enabled",
	max_roll_backups:"max_roll_backups",
	loggers:"loggers",
	purge_by_days_enabled:"purge_by_days_enabled",
	purge_by_days_num_days:"purge_by_days_num_days"
};

DO.LogConfiguration_Validation = {
	version: {
		number: true
	},
	rollover_file_size_bytes: {
		number: true
	},
	max_roll_backups: {
		number: true
	},
	loggers: {
		required: true
	},
	purge_by_days_num_days: {
		number: true
	}
};


DO.LogConfiguration_Defaults = {
	$type:"LogConfiguration",
	metadata:null,
	name:"",
	version:0,
	rollover_enabled:true,
	rollover_file_size_bytes:104857600,
	purge_enabled:true,
	max_roll_backups:45,
	loggers:{},
	purge_by_days_enabled:false,
	purge_by_days_num_days:10
};

DO.LogConfiguration_Types = {
	metadata:"DTObjectMetaData",
	loggers:"AttInfrastructureLoggers"
};


DO.LogFileData = {
	$type:"$type",
	text:"text",
	next_position:"next_position"
};

DO.LogFileData_Validation = {
	text: {
		required: true
	},
	next_position: {
		required: true,
		number: true
	}
};


DO.LogFileData_Defaults = {
	$type:"LogFileData",
	text:"",
	next_position:0
};

DO.LogFileData_Types = {
};


DO.RepositoryItem = {
	id:"id",
	path:"path",
	name:"name",
	type:"type",
	creation_time:"creation_time",
	modification_time:"modification_time",
	modified_by:"modified_by",
	created_by:"created_by",
	description:"description",
	inner_item:"inner_item",
	tags:"tags",
	software_version:"software_version"
};

DO.RepositoryItem_Validation = {
	id: {
		number: true
	},
	creation_time: {
		number: true
	},
	modification_time: {
		number: true
	},
	software_version: {
		number: true
	}
};


DO.RepositoryItem_Defaults = {
	id:0,
	path:"",
	name:"",
	type:"",
	creation_time:0,
	modification_time:0,
	modified_by:"",
	created_by:"",
	description:"",
	inner_item:null,
	tags:[],
	software_version:0
};

DO.RepositoryItem_Types = {
	inner_item:"DTObject"
};


DO.DtoVersionEntry = {
	dto_type_name:"dto_type_name",
	software_version:"software_version"
};

DO.DtoVersionEntry_Validation = {
	dto_type_name: {
		required: true
	},
	software_version: {
		required: true,
		number: true
	}
};


DO.DtoVersionEntry_Defaults = {
	dto_type_name:"",
	software_version:0
};

DO.DtoVersionEntry_Types = {
};


DO.RepositoryExportData = {
	product_name:"product_name",
	product_version:"product_version",
	format_version:"format_version",
	created_on:"created_on",
	exported_by:"exported_by",
	hostname:"hostname",
	objects:"objects"
};

DO.RepositoryExportData_Validation = {
};


DO.RepositoryExportData_Defaults = {
	product_name:"",
	product_version:"",
	format_version:"",
	created_on:"",
	exported_by:"",
	hostname:"",
	objects:[]
};

DO.RepositoryExportData_Types = {
	objects:"RepositoryItem"
};


DO.RepositoryExportConfiguration = {
	configuration_fields:"configuration_fields",
	configuration_objects:"configuration_objects"
};

DO.RepositoryExportConfiguration_Validation = {
};


DO.RepositoryExportConfiguration_Defaults = {
	configuration_fields:[],
	configuration_objects:[]
};

DO.RepositoryExportConfiguration_Types = {
	configuration_fields:"RepositoryConfigurationField",
	configuration_objects:"RepositoryItem"
};


DO.ItemConfField = {
	variable_name:"variable_name",
	variable_value:"variable_value"
};

DO.ItemConfField_Validation = {
};


DO.ItemConfField_Defaults = {
	variable_name:"",
	variable_value:""
};

DO.ItemConfField_Types = {
};


DO.RepositoryConfigurationField = {
	item_name:"item_name",
	item_type:"item_type",
	item_conf_fields:"item_conf_fields",
	id:"id"
};

DO.RepositoryConfigurationField_Validation = {
	id: {
		number: true
	}
};


DO.RepositoryConfigurationField_Defaults = {
	item_name:"",
	item_type:"",
	item_conf_fields:[],
	id:0
};

DO.RepositoryConfigurationField_Types = {
	item_conf_fields:"ItemConfField"
};


DO.SQLiteRepositoryDTO = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	virtual_path:"virtual_path",
	configuration_objects:"configuration_objects",
	physical_path:"physical_path"
};

DO.SQLiteRepositoryDTO_Validation = {
	version: {
		number: true
	}
};


DO.SQLiteRepositoryDTO_Defaults = {
	$type:"SQLiteRepositoryDTO",
	metadata:null,
	name:"",
	version:0,
	virtual_path:"",
	configuration_objects:[],
	physical_path:""
};

DO.SQLiteRepositoryDTO_Types = {
	metadata:"DTObjectMetaData"
};


DO.SQLRepositoryDTO = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	virtual_path:"virtual_path",
	configuration_objects:"configuration_objects",
	connection_string:"connection_string"
};

DO.SQLRepositoryDTO_Validation = {
	version: {
		number: true
	}
};


DO.SQLRepositoryDTO_Defaults = {
	$type:"SQLRepositoryDTO",
	metadata:null,
	name:"",
	version:0,
	virtual_path:"",
	configuration_objects:[],
	connection_string:""
};

DO.SQLRepositoryDTO_Types = {
	metadata:"DTObjectMetaData"
};


DO.TagDefDTO = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	scope:"scope",
	value_type:"value_type",
	enum_values:"enum_values"
};

DO.TagDefDTO_Validation = {
	version: {
		number: true
	}
};


DO.TagDefDTO_Defaults = {
	$type:"TagDefDTO",
	metadata:null,
	name:"",
	version:0,
	scope:DO.TagScopes.USER,
	value_type:DO.TagValueTypes.BOOLEAN,
	enum_values:[]
};

DO.TagDefDTO_Types = {
	metadata:"DTObjectMetaData",
	scope:"TagScopes",
	value_type:"TagValueTypes"
};


DO.RepositoryGetObjectParams = {
	name:"name",
	type:"type"
};

DO.RepositoryGetObjectParams_Validation = {
	name: {
		required: true
	},
	type: {
		required: true
	}
};


DO.RepositoryGetObjectParams_Defaults = {
	name:"",
	type:""
};

DO.RepositoryGetObjectParams_Types = {
};


DO.RepositoryPutObjectParams = {
	name:"name",
	set_tags:"set_tags",
	clear_tags:"clear_tags"
};

DO.RepositoryPutObjectParams_Validation = {
};


DO.RepositoryPutObjectParams_Defaults = {
	name:"",
	set_tags:"",
	clear_tags:""
};

DO.RepositoryPutObjectParams_Types = {
};


DO.RepositoryModifyTagsParams = {
	type:"type",
	name:"name",
	set_tags:"set_tags",
	clear_tags:"clear_tags"
};

DO.RepositoryModifyTagsParams_Validation = {
};


DO.RepositoryModifyTagsParams_Defaults = {
	type:"",
	name:"",
	set_tags:"",
	clear_tags:""
};

DO.RepositoryModifyTagsParams_Types = {
};


DO.RepositoryRenameObjectParams = {
	type:"type",
	name:"name",
	newName:"newName"
};

DO.RepositoryRenameObjectParams_Validation = {
};


DO.RepositoryRenameObjectParams_Defaults = {
	type:"",
	name:"",
	newName:""
};

DO.RepositoryRenameObjectParams_Types = {
};


DO.RepositoryDeleteObjectParams = {
	name:"name",
	type:"type"
};

DO.RepositoryDeleteObjectParams_Validation = {
	type: {
		required: true
	}
};


DO.RepositoryDeleteObjectParams_Defaults = {
	name:"",
	type:""
};

DO.RepositoryDeleteObjectParams_Types = {
};


DO.RepositoryResetObjectParams = {
	name:"name",
	type:"type"
};

DO.RepositoryResetObjectParams_Validation = {
	type: {
		required: true
	}
};


DO.RepositoryResetObjectParams_Defaults = {
	name:"",
	type:""
};

DO.RepositoryResetObjectParams_Types = {
};


DO.RepositoryListObjectsParams = {
	type:"type",
	list_flag:"list_flag"
};

DO.RepositoryListObjectsParams_Validation = {
};


DO.RepositoryListObjectsParams_Defaults = {
	type:"",
	list_flag:DO.ListItemsFlags.FULL_DATA
};

DO.RepositoryListObjectsParams_Types = {
	list_flag:"ListItemsFlags"
};


DO.DTObjectList = {
	objects:"objects"
};

DO.DTObjectList_Validation = {
};


DO.DTObjectList_Defaults = {
	objects:[]
};

DO.DTObjectList_Types = {
	objects:"DTObject"
};


DO.RepositoryExportParams = {
	type:"type",
	name:"name",
	path:"path",
	password:"password",
	master_user_password:"master_user_password",
	is_without_credentials:"is_without_credentials"
};

DO.RepositoryExportParams_Validation = {
};


DO.RepositoryExportParams_Defaults = {
	type:"",
	name:"",
	path:"",
	password:"",
	master_user_password:"",
	is_without_credentials:false
};

DO.RepositoryExportParams_Types = {
};


DO.RepositoryImportParams = {
	type:"type",
	name:"name",
	path:"path",
	password:"password",
	master_user_password:"master_user_password",
	is_without_credentials:"is_without_credentials"
};

DO.RepositoryImportParams_Validation = {
};


DO.RepositoryImportParams_Defaults = {
	type:"",
	name:"",
	path:"",
	password:"",
	master_user_password:"",
	is_without_credentials:false
};

DO.RepositoryImportParams_Types = {
};


DO.RepositoryExportConfigParams = {
	password:"password",
	master_user_password:"master_user_password",
	is_without_credentials:"is_without_credentials"
};

DO.RepositoryExportConfigParams_Validation = {
};


DO.RepositoryExportConfigParams_Defaults = {
	password:"",
	master_user_password:"",
	is_without_credentials:false
};

DO.RepositoryExportConfigParams_Types = {
};


DO.RepositoryImportConfigParams = {
	password:"password",
	master_user_password:"master_user_password",
	is_without_credentials:"is_without_credentials"
};

DO.RepositoryImportConfigParams_Validation = {
};


DO.RepositoryImportConfigParams_Defaults = {
	password:"",
	master_user_password:"",
	is_without_credentials:false
};

DO.RepositoryImportConfigParams_Types = {
};


DO.RepositoryGetRepositoryItemParams = {
	type:"type",
	name:"name",
	path:"path"
};

DO.RepositoryGetRepositoryItemParams_Validation = {
};


DO.RepositoryGetRepositoryItemParams_Defaults = {
	type:"",
	name:"",
	path:""
};

DO.RepositoryGetRepositoryItemParams_Types = {
};


DO.RepositorySetRepositoryItemParams = {
};

DO.RepositorySetRepositoryItemParams_Validation = {
};


DO.RepositorySetRepositoryItemParams_Defaults = {
};

DO.RepositorySetRepositoryItemParams_Types = {
};


DO.LoggerServiceDto = {
	manage_loggers:"manage_loggers"
};

DO.LoggerServiceDto_Validation = {
};


DO.LoggerServiceDto_Defaults = {
	manage_loggers:true
};

DO.LoggerServiceDto_Types = {
};


DO.ServicesLoggers = {
	$type:"$type",
	Root:"Root",
	AttInfrastructure:"AttInfrastructure",
	Service:"Service",
	Host:"Host",
	Command:"Command",
	Security:"Security",
	WebLog:"WebLog",
	Log:"Log",
	Services:"Services",
	Repository:"Repository",
	Scheduler:"Scheduler",
	Notification:"Notification",
	Audit:"Audit",
	Workflow:"Workflow",
	Execution:"Execution",
	MessageCenter:"MessageCenter",
	Authorization:"Authorization",
	License:"License"
};

DO.ServicesLoggers_Validation = {
};


DO.ServicesLoggers_Defaults = {
	$type:"ServicesLoggers",
	Root:DO.LogLevel.INFO,
	AttInfrastructure:DO.LogLevel.DEFAULT,
	Service:DO.LogLevel.DEFAULT,
	Host:DO.LogLevel.DEFAULT,
	Command:DO.LogLevel.DEFAULT,
	Security:DO.LogLevel.DEFAULT,
	WebLog:DO.LogLevel.DEFAULT,
	Log:DO.LogLevel.DEFAULT,
	Services:DO.LogLevel.DEFAULT,
	Repository:DO.LogLevel.DEFAULT,
	Scheduler:DO.LogLevel.DEFAULT,
	Notification:DO.LogLevel.DEFAULT,
	Audit:DO.LogLevel.DEFAULT,
	Workflow:DO.LogLevel.DEFAULT,
	Execution:DO.LogLevel.DEFAULT,
	MessageCenter:DO.LogLevel.DEFAULT,
	Authorization:DO.LogLevel.DEFAULT,
	License:DO.LogLevel.DEFAULT
};

DO.ServicesLoggers_Types = {
	Root:"LogLevel",
	AttInfrastructure:"LogLevel",
	Service:"LogLevel",
	Host:"LogLevel",
	Command:"LogLevel",
	Security:"LogLevel",
	WebLog:"LogLevel",
	Log:"LogLevel",
	Services:"LogLevel",
	Repository:"LogLevel",
	Scheduler:"LogLevel",
	Notification:"LogLevel",
	Audit:"LogLevel",
	Workflow:"LogLevel",
	Execution:"LogLevel",
	MessageCenter:"LogLevel",
	Authorization:"LogLevel",
	License:"LogLevel"
};


DO.LoggerRollOverLogFileParams = {
	log_name:"log_name"
};

DO.LoggerRollOverLogFileParams_Validation = {
};


DO.LoggerRollOverLogFileParams_Defaults = {
	log_name:""
};

DO.LoggerRollOverLogFileParams_Types = {
};


DO.LoggerListFilesParams = {
	name_pattern:"name_pattern"
};

DO.LoggerListFilesParams_Validation = {
};


DO.LoggerListFilesParams_Defaults = {
	name_pattern:"*"
};

DO.LoggerListFilesParams_Types = {
};


DO.LoggerListFilesResp = {
	file_names:"file_names"
};

DO.LoggerListFilesResp_Validation = {
};


DO.LoggerListFilesResp_Defaults = {
	file_names:[]
};

DO.LoggerListFilesResp_Types = {
};


DO.LoggerGetLogDataParams = {
	log_file:"log_file",
	position:"position",
	lines_to_read:"lines_to_read"
};

DO.LoggerGetLogDataParams_Validation = {
	position: {
		number: true
	},
	lines_to_read: {
		number: true
	}
};


DO.LoggerGetLogDataParams_Defaults = {
	log_file:"",
	position:0,
	lines_to_read:500
};

DO.LoggerGetLogDataParams_Types = {
};


DO.LoggerGetLogDataResp = {
	log_data:"log_data"
};

DO.LoggerGetLogDataResp_Validation = {
	log_data: {
		required: true
	}
};


DO.LoggerGetLogDataResp_Defaults = {
	log_data:{}
};

DO.LoggerGetLogDataResp_Types = {
	log_data:"LogFileData"
};


DO.LoggerDownloadLogFileParams = {
	log_file:"log_file"
};

DO.LoggerDownloadLogFileParams_Validation = {
};


DO.LoggerDownloadLogFileParams_Defaults = {
	log_file:""
};

DO.LoggerDownloadLogFileParams_Types = {
};


DO.LoggerApiRef = {
};

DO.LoggerApiRef_Validation = {
};


DO.LoggerApiRef_Defaults = {
};

DO.LoggerApiRef_Types = {
};


DO.SchedulePolicy = {
	$type:"$type"
};

DO.SchedulePolicy_Validation = {
};


DO.SchedulePolicy_Defaults = {
	$type:"SchedulePolicy"
};

DO.SchedulePolicy_Types = {
};


DO.RunOnceSchedulePolicy = {
	$type:"$type",
	run_once_time:"run_once_time"
};

DO.RunOnceSchedulePolicy_Validation = {
};


DO.RunOnceSchedulePolicy_Defaults = {
	$type:"RunOnceSchedulePolicy",
	run_once_time:""
};

DO.RunOnceSchedulePolicy_Types = {
};


DO.RecurrentSchedulePolicy = {
	$type:"$type",
	start_time:"start_time",
	end_time:"end_time"
};

DO.RecurrentSchedulePolicy_Validation = {
};


DO.RecurrentSchedulePolicy_Defaults = {
	$type:"RecurrentSchedulePolicy",
	start_time:"",
	end_time:""
};

DO.RecurrentSchedulePolicy_Types = {
};


DO.IntervalSchedulePolicy = {
	$type:"$type",
	start_time:"start_time",
	end_time:"end_time",
	interval_unit:"interval_unit",
	interval:"interval",
	num_intervals:"num_intervals"
};

DO.IntervalSchedulePolicy_Validation = {
	interval: {
		number: true
	},
	num_intervals: {
		number: true
	}
};


DO.IntervalSchedulePolicy_Defaults = {
	$type:"IntervalSchedulePolicy",
	start_time:"",
	end_time:"",
	interval_unit:DO.IntervalTimeUnit.NONE,
	interval:1,
	num_intervals:-1
};

DO.IntervalSchedulePolicy_Types = {
	interval_unit:"IntervalTimeUnit"
};


DO.CronExpressionSchedulePolicy = {
	$type:"$type",
	start_time:"start_time",
	end_time:"end_time",
	cron_expression:"cron_expression"
};

DO.CronExpressionSchedulePolicy_Validation = {
};


DO.CronExpressionSchedulePolicy_Defaults = {
	$type:"CronExpressionSchedulePolicy",
	start_time:"",
	end_time:"",
	cron_expression:""
};

DO.CronExpressionSchedulePolicy_Types = {
};


DO.CronSchedulePolicy = {
	$type:"$type",
	start_time:"start_time",
	end_time:"end_time",
	seconds:"seconds",
	minutes:"minutes",
	hours:"hours",
	months:"months",
	year:"year",
	days_of_week:"days_of_week",
	days_of_month:"days_of_month"
};

DO.CronSchedulePolicy_Validation = {
};


DO.CronSchedulePolicy_Defaults = {
	$type:"CronSchedulePolicy",
	start_time:"",
	end_time:"",
	seconds:"0",
	minutes:"0",
	hours:"*",
	months:"*",
	year:"*",
	days_of_week:"?",
	days_of_month:"*"
};

DO.CronSchedulePolicy_Types = {
};


DO.ScheduledJobDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	scheduling:"scheduling",
	disabled:"disabled",
	executor_input:"executor_input",
	execution_owner:"execution_owner"
};

DO.ScheduledJobDto_Validation = {
	version: {
		number: true
	}
};


DO.ScheduledJobDto_Defaults = {
	$type:"ScheduledJobDto",
	metadata:null,
	name:"",
	version:0,
	scheduling:null,
	disabled:false,
	executor_input:null,
	execution_owner:""
};

DO.ScheduledJobDto_Types = {
	metadata:"DTObjectMetaData",
	scheduling:"SchedulePolicy",
	executor_input:"ExecutorDto"
};


DO.PayloadBase = {
};

DO.PayloadBase_Validation = {
};


DO.PayloadBase_Defaults = {
};

DO.PayloadBase_Types = {
};


DO.AuditTrailRecord = {
	$type:"$type",
	original_time:"original_time",
	reporting_node:"reporting_node",
	reporting_user:"reporting_user",
	product:"product",
	subject_name:"subject_name",
	category:"category",
	event:"event",
	severity:"severity",
	message:"message",
	audit_time:"audit_time",
	required_role:"required_role",
	user_role:"user_role",
	accepted:"accepted",
	request_url:"request_url",
	rest_params:"rest_params",
	payload:"payload",
	exception:"exception"
};

DO.AuditTrailRecord_Validation = {
	original_time: {
		number: true
	},
	audit_time: {
		number: true
	}
};


DO.AuditTrailRecord_Defaults = {
	$type:"AuditTrailRecord",
	original_time:0,
	reporting_node:"",
	reporting_user:"",
	product:"",
	subject_name:"",
	category:"",
	event:"",
	severity:DO.AuditSeverity.INFO,
	message:"",
	audit_time:0,
	required_role:DO.AuthUserRoleType.NONE,
	user_role:DO.AuthUserRoleType.NONE,
	accepted:false,
	request_url:"",
	rest_params:{},
	payload:null,
	exception:""
};

DO.AuditTrailRecord_Types = {
	severity:"AuditSeverity",
	required_role:"AuthUserRoleType",
	user_role:"AuthUserRoleType",
	rest_params:"KeyValue",
	payload:"PayloadBase"
};


DO.AuditTrailDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	enabled:"enabled",
	retention:"retention"
};

DO.AuditTrailDto_Validation = {
	version: {
		number: true
	}
};


DO.AuditTrailDto_Defaults = {
	$type:"AuditTrailDto",
	metadata:null,
	name:"AuditTrail",
	version:0,
	enabled:false,
	retention:null
};

DO.AuditTrailDto_Types = {
	metadata:"DTObjectMetaData",
	retention:"RetentionPolicy"
};


DO.AuditGetAuditTrailParams = {
	format:"format",
	start:"start",
	end:"end",
	rest_params:"rest_params"
};

DO.AuditGetAuditTrailParams_Validation = {
};


DO.AuditGetAuditTrailParams_Defaults = {
	format:"",
	start:"",
	end:"",
	rest_params:""
};

DO.AuditGetAuditTrailParams_Types = {
};


DO.AuditGetAuditTrailPayloadParams = {
	payload_id:"payload_id",
	hex:"hex"
};

DO.AuditGetAuditTrailPayloadParams_Validation = {
};


DO.AuditGetAuditTrailPayloadParams_Defaults = {
	payload_id:"",
	hex:""
};

DO.AuditGetAuditTrailPayloadParams_Types = {
};


DO.AuditGetAuditTrailPayloadResp = {
	payload:"payload"
};

DO.AuditGetAuditTrailPayloadResp_Validation = {
};


DO.AuditGetAuditTrailPayloadResp_Defaults = {
	payload:null
};

DO.AuditGetAuditTrailPayloadResp_Types = {
	payload:"PayloadBase"
};


DO.BatchPolicy = {
	max_backlog_time:"max_backlog_time",
	max_num_records:"max_num_records"
};

DO.BatchPolicy_Validation = {
	max_backlog_time: {
		number: true
	},
	max_num_records: {
		number: true
	}
};


DO.BatchPolicy_Defaults = {
	max_backlog_time:5000,
	max_num_records:500
};

DO.BatchPolicy_Types = {
};


DO.FlushPolicy = {
	flush_by_minutes:"flush_by_minutes",
	flush_by_num_records:"flush_by_num_records"
};

DO.FlushPolicy_Validation = {
	flush_by_minutes: {
		number: true
	},
	flush_by_num_records: {
		number: true
	}
};


DO.FlushPolicy_Defaults = {
	flush_by_minutes:1,
	flush_by_num_records:1
};

DO.FlushPolicy_Types = {
};


DO.RetentionPolicy = {
	max_backlog_age_hours:"max_backlog_age_hours",
	max_backlog_size_mb:"max_backlog_size_mb",
	limited_retention_age:"limited_retention_age"
};

DO.RetentionPolicy_Validation = {
	max_backlog_age_hours: {
		number: true
	},
	max_backlog_size_mb: {
		number: true
	}
};


DO.RetentionPolicy_Defaults = {
	max_backlog_age_hours:168,
	max_backlog_size_mb:100,
	limited_retention_age:true
};

DO.RetentionPolicy_Types = {
};


DO.RolloverPolicy = {
	roll_by_minutes:"roll_by_minutes",
	roll_by_max_size_mb:"roll_by_max_size_mb"
};

DO.RolloverPolicy_Validation = {
	roll_by_minutes: {
		number: true
	},
	roll_by_max_size_mb: {
		number: true
	}
};


DO.RolloverPolicy_Defaults = {
	roll_by_minutes:168,
	roll_by_max_size_mb:10
};

DO.RolloverPolicy_Types = {
};


DO.CongestionPolicy = {
	max_queue_elements:"max_queue_elements",
	queue_threshold_pct:"queue_threshold_pct",
	queue_delay_seconds:"queue_delay_seconds"
};

DO.CongestionPolicy_Validation = {
	max_queue_elements: {
		number: true
	},
	queue_threshold_pct: {
		number: true
	},
	queue_delay_seconds: {
		number: true
	}
};


DO.CongestionPolicy_Defaults = {
	max_queue_elements:100000,
	queue_threshold_pct:90,
	queue_delay_seconds:5
};

DO.CongestionPolicy_Types = {
};


DO.AuditStream = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	physical_type:"physical_type",
	physical_name:"physical_name",
	batch:"batch",
	flush:"flush",
	rollover:"rollover",
	retention:"retention",
	use_compression:"use_compression",
	encryption_phrase:"encryption_phrase",
	congestion:"congestion"
};

DO.AuditStream_Validation = {
	version: {
		number: true
	}
};


DO.AuditStream_Defaults = {
	$type:"AuditStream",
	metadata:null,
	name:"",
	version:0,
	physical_type:"File",
	physical_name:"",
	batch:null,
	flush:null,
	rollover:null,
	retention:null,
	use_compression:true,
	encryption_phrase:"",
	congestion:null
};

DO.AuditStream_Types = {
	metadata:"DTObjectMetaData",
	batch:"BatchPolicy",
	flush:"FlushPolicy",
	rollover:"RolloverPolicy",
	retention:"RetentionPolicy",
	congestion:"CongestionPolicy"
};


DO.AuditRecord = {
	$type:"$type",
	original_time:"original_time",
	reporting_node:"reporting_node",
	reporting_user:"reporting_user",
	product:"product",
	subject_name:"subject_name",
	category:"category",
	event:"event",
	severity:"severity",
	message:"message",
	audit_time:"audit_time"
};

DO.AuditRecord_Validation = {
	original_time: {
		number: true
	},
	audit_time: {
		number: true
	}
};


DO.AuditRecord_Defaults = {
	$type:"AuditRecord",
	original_time:0,
	reporting_node:"",
	reporting_user:"",
	product:"",
	subject_name:"",
	category:"",
	event:"",
	severity:DO.AuditSeverity.INFO,
	message:"",
	audit_time:0
};

DO.AuditRecord_Types = {
	severity:"AuditSeverity"
};


DO.DerivedAuditRecord = {
	$type:"$type",
	original_time:"original_time",
	reporting_node:"reporting_node",
	reporting_user:"reporting_user",
	product:"product",
	subject_name:"subject_name",
	category:"category",
	event:"event",
	severity:"severity",
	message:"message",
	audit_time:"audit_time"
};

DO.DerivedAuditRecord_Validation = {
	original_time: {
		number: true
	},
	audit_time: {
		number: true
	}
};


DO.DerivedAuditRecord_Defaults = {
	$type:"DerivedAuditRecord",
	original_time:0,
	reporting_node:"",
	reporting_user:"",
	product:"",
	subject_name:"",
	category:"",
	event:"",
	severity:DO.AuditSeverity.INFO,
	message:"",
	audit_time:0
};

DO.DerivedAuditRecord_Types = {
	severity:"AuditSeverity"
};


DO.WiredAuditFileHeader = {
	magic:"magic",
	version:"version",
	last_compatible_version:"last_compatible_version",
	compressed:"compressed",
	encrypted:"encrypted",
	product_version:"product_version",
	param1:"param1"
};

DO.WiredAuditFileHeader_Validation = {
	magic: {
		required: true,
		number: true
	},
	version: {
		required: true,
		number: true
	},
	last_compatible_version: {
		required: true,
		number: true
	},
	param1: {
		number: true
	}
};


DO.WiredAuditFileHeader_Defaults = {
	version:0,
	last_compatible_version:0,
	compressed:false,
	encrypted:false,
	product_version:"",
	param1:0
};

DO.WiredAuditFileHeader_Types = {
};


DO.WiredAuditRecordBase = {
	$type:"$type",
	audit_time:"audit_time"
};

DO.WiredAuditRecordBase_Validation = {
	audit_time: {
		number: true
	}
};


DO.WiredAuditRecordBase_Defaults = {
	$type:"WiredAuditRecordBase",
	audit_time:0
};

DO.WiredAuditRecordBase_Types = {
};


DO.WiredAuditRecord = {
	$type:"$type",
	audit_time:"audit_time",
	original_report_time:"original_report_time",
	reporting_node:"reporting_node",
	reporting_user:"reporting_user",
	product:"product",
	subject_name:"subject_name",
	category:"category",
	audit_event:"audit_event",
	severity:"severity",
	message:"message",
	json_record:"json_record",
	audit_record_type:"audit_record_type"
};

DO.WiredAuditRecord_Validation = {
	audit_time: {
		number: true
	},
	original_report_time: {
		number: true
	}
};


DO.WiredAuditRecord_Defaults = {
	$type:"WiredAuditRecord",
	audit_time:0,
	original_report_time:0,
	reporting_node:"",
	reporting_user:"",
	product:"",
	subject_name:"",
	category:"",
	audit_event:"",
	severity:DO.WiredAuditSeverity.INFO,
	message:"",
	json_record:"",
	audit_record_type:""
};

DO.WiredAuditRecord_Types = {
	severity:"WiredAuditSeverity"
};


DO.WiredAuditRecordBatch = {
	batch_id:"batch_id",
	records:"records",
	flags:"flags"
};

DO.WiredAuditRecordBatch_Validation = {
};


DO.WiredAuditRecordBatch_Defaults = {
	records:[],
	flags:DO.WiredAuditBatchFlags.NONE
};

DO.WiredAuditRecordBatch_Types = {
	records:"WiredAuditRecordBase",
	flags:"WiredAuditBatchFlags"
};


DO.WiredAuditBytes = {
	first_audit_time:"first_audit_time",
	last_audit_time:"last_audit_time",
	batch_record_bytes:"batch_record_bytes",
	batch_record_hash:"batch_record_hash"
};

DO.WiredAuditBytes_Validation = {
	first_audit_time: {
		required: true,
		number: true
	},
	last_audit_time: {
		required: true,
		number: true
	}
};


DO.WiredAuditBytes_Defaults = {
};

DO.WiredAuditBytes_Types = {
};


DO.NotificationRuntime = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	audit_reader_position:"audit_reader_position"
};

DO.NotificationRuntime_Validation = {
	version: {
		number: true
	}
};


DO.NotificationRuntime_Defaults = {
	$type:"NotificationRuntime",
	metadata:null,
	name:"",
	version:0,
	audit_reader_position:""
};

DO.NotificationRuntime_Types = {
	metadata:"DTObjectMetaData"
};


DO.NotificationDelivery = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	configuration_name:"configuration_name",
	scope:"scope",
	subject:"subject",
	message:"message",
	event_type:"event_type",
	severity:"severity"
};

DO.NotificationDelivery_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	}
};


DO.NotificationDelivery_Defaults = {
	$type:"NotificationDelivery",
	metadata:null,
	name:"",
	version:0,
	id:0,
	configuration_name:"",
	scope:"",
	subject:"",
	message:"",
	event_type:"",
	severity:DO.NotificationSeverity.INFO
};

DO.NotificationDelivery_Types = {
	metadata:"DTObjectMetaData",
	severity:"NotificationSeverity"
};


DO.EmailNotificationDelivery = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	configuration_name:"configuration_name",
	scope:"scope",
	subject:"subject",
	message:"message",
	event_type:"event_type",
	severity:"severity",
	to:"to",
	cc:"cc",
	bcc:"bcc"
};

DO.EmailNotificationDelivery_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	}
};


DO.EmailNotificationDelivery_Defaults = {
	$type:"EmailNotificationDelivery",
	metadata:null,
	name:"",
	version:0,
	id:0,
	configuration_name:"",
	scope:"",
	subject:"",
	message:"",
	event_type:"",
	severity:DO.NotificationSeverity.INFO,
	to:[],
	cc:[],
	bcc:[]
};

DO.EmailNotificationDelivery_Types = {
	metadata:"DTObjectMetaData",
	severity:"NotificationSeverity"
};


DO.EventLogNotificationDelivery = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	configuration_name:"configuration_name",
	scope:"scope",
	subject:"subject",
	message:"message",
	event_type:"event_type",
	severity:"severity",
	event_id:"event_id",
	category:"category"
};

DO.EventLogNotificationDelivery_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	event_id: {
		number: true
	},
	category: {
		number: true
	}
};


DO.EventLogNotificationDelivery_Defaults = {
	$type:"EventLogNotificationDelivery",
	metadata:null,
	name:"",
	version:0,
	id:0,
	configuration_name:"",
	scope:"",
	subject:"",
	message:"",
	event_type:"",
	severity:DO.NotificationSeverity.INFO,
	event_id:0,
	category:0
};

DO.EventLogNotificationDelivery_Types = {
	metadata:"DTObjectMetaData",
	severity:"NotificationSeverity"
};


DO.NotificationRuleDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	severity:"severity",
	on_set_actions:"on_set_actions",
	enabled:"enabled",
	trigger:"trigger",
	audit_record_type:"audit_record_type",
	ui_event_key:"ui_event_key"
};

DO.NotificationRuleDto_Validation = {
	version: {
		number: true
	}
};


DO.NotificationRuleDto_Defaults = {
	$type:"NotificationRuleDto",
	metadata:null,
	name:"",
	version:0,
	severity:DO.AuditSeverity.INFO,
	on_set_actions:[],
	enabled:true,
	trigger:null,
	audit_record_type:"",
	ui_event_key:""
};

DO.NotificationRuleDto_Types = {
	metadata:"DTObjectMetaData",
	severity:"AuditSeverity",
	on_set_actions:"NotificationDelivery",
	trigger:"RuleDto"
};


DO.NotificationAlarmRuleDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	severity:"severity",
	on_set_actions:"on_set_actions",
	enabled:"enabled",
	trigger:"trigger",
	audit_record_type:"audit_record_type",
	ui_event_key:"ui_event_key",
	on_clear_actions:"on_clear_actions",
	event_expiration_period:"event_expiration_period"
};

DO.NotificationAlarmRuleDto_Validation = {
	version: {
		number: true
	},
	event_expiration_period: {
		number: true
	}
};


DO.NotificationAlarmRuleDto_Defaults = {
	$type:"NotificationAlarmRuleDto",
	metadata:null,
	name:"",
	version:0,
	severity:DO.AuditSeverity.INFO,
	on_set_actions:[],
	enabled:true,
	trigger:null,
	audit_record_type:"",
	ui_event_key:"",
	on_clear_actions:[],
	event_expiration_period:0
};

DO.NotificationAlarmRuleDto_Types = {
	metadata:"DTObjectMetaData",
	severity:"AuditSeverity",
	on_set_actions:"NotificationDelivery",
	trigger:"RuleDto",
	on_clear_actions:"NotificationDelivery"
};


DO.NotificationState = {
	state:"state",
	set_time:"set_time",
	update_time:"update_time"
};

DO.NotificationState_Validation = {
	state: {
		number: true
	},
	set_time: {
		number: true
	},
	update_time: {
		number: true
	}
};


DO.NotificationState_Defaults = {
	state:0,
	set_time:0,
	update_time:0
};

DO.NotificationState_Types = {
};


DO.KeyValueStates = {
	Key:"Key",
	Value:"Value"
};

DO.KeyValueStates_Validation = {
	Key: {
		required: true
	},
	Value: {
		required: true
	}
};


DO.KeyValueStates_Defaults = {
	Key:"",
	Value:{}
};

DO.KeyValueStates_Types = {
	Value:"NotificationState"
};


DO.NotificationStatesDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	states:"states"
};

DO.NotificationStatesDto_Validation = {
	version: {
		number: true
	}
};


DO.NotificationStatesDto_Defaults = {
	$type:"NotificationStatesDto",
	metadata:null,
	name:"",
	version:0,
	states:{}
};

DO.NotificationStatesDto_Types = {
	metadata:"DTObjectMetaData",
	states:"KeyValueStates"
};


DO.NotificationGetAlarmedRulesParams = {
};

DO.NotificationGetAlarmedRulesParams_Validation = {
};


DO.NotificationGetAlarmedRulesParams_Defaults = {
};

DO.NotificationGetAlarmedRulesParams_Types = {
};


DO.NotificationGetAlarmedRulesResp = {
	rules:"rules"
};

DO.NotificationGetAlarmedRulesResp_Validation = {
};


DO.NotificationGetAlarmedRulesResp_Defaults = {
	rules:[]
};

DO.NotificationGetAlarmedRulesResp_Types = {
	rules:"NotificationStatesDto"
};


DO.NotificationClearAlarmedRuleParams = {
	rule_name:"rule_name",
	key:"key"
};

DO.NotificationClearAlarmedRuleParams_Validation = {
};


DO.NotificationClearAlarmedRuleParams_Defaults = {
	rule_name:"",
	key:""
};

DO.NotificationClearAlarmedRuleParams_Types = {
};


DO.NotificationGetPreDefinedRulesParams = {
};

DO.NotificationGetPreDefinedRulesParams_Validation = {
};


DO.NotificationGetPreDefinedRulesParams_Defaults = {
};

DO.NotificationGetPreDefinedRulesParams_Types = {
};


DO.PreDefinedNotificationRules = {
	rules:"rules"
};

DO.PreDefinedNotificationRules_Validation = {
};


DO.PreDefinedNotificationRules_Defaults = {
	rules:[]
};

DO.PreDefinedNotificationRules_Types = {
	rules:"NotificationRuleDto"
};


DO.NotificationSendTestMailParams = {
};

DO.NotificationSendTestMailParams_Validation = {
};


DO.NotificationSendTestMailParams_Defaults = {
};

DO.NotificationSendTestMailParams_Types = {
};


DO.NotificationSendTestMailReq = {
	mail_server_settings:"mail_server_settings",
	recipient:"recipient"
};

DO.NotificationSendTestMailReq_Validation = {
};


DO.NotificationSendTestMailReq_Defaults = {
	mail_server_settings:null,
	recipient:""
};

DO.NotificationSendTestMailReq_Types = {
	mail_server_settings:"MailServerSettings"
};


DO.FlowNodeStatus = {
	node_id:"node_id",
	status:"status",
	outgoing:"outgoing"
};

DO.FlowNodeStatus_Validation = {
	node_id: {
		required: true
	}
};


DO.FlowNodeStatus_Defaults = {
	node_id:"",
	status:null,
	outgoing:[]
};

DO.FlowNodeStatus_Types = {
	status:"ExecutorStatus",
	outgoing:"OutPort"
};


DO.FlowExecutorStatus = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	runtime_id:"runtime_id",
	start_time:"start_time",
	end_time:"end_time",
	state:"state",
	progress_percentage:"progress_percentage",
	message:"message"
};

DO.FlowExecutorStatus_Validation = {
	version: {
		number: true
	},
	runtime_id: {
		number: true
	},
	start_time: {
		number: true
	},
	end_time: {
		number: true
	},
	progress_percentage: {
		number: true
	}
};


DO.FlowExecutorStatus_Defaults = {
	$type:"FlowExecutorStatus",
	metadata:null,
	name:"",
	version:0,
	runtime_id:0,
	start_time:0,
	end_time:0,
	state:DO.ExecutionState.UNKNOWN,
	progress_percentage:0,
	message:""
};

DO.FlowExecutorStatus_Types = {
	metadata:"DTObjectMetaData",
	state:"ExecutionState"
};


DO.FlowExecutorDetailedStatus = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	runtime_id:"runtime_id",
	start_time:"start_time",
	end_time:"end_time",
	state:"state",
	progress_percentage:"progress_percentage",
	message:"message",
	statuses:"statuses",
	light_flow_definition:"light_flow_definition"
};

DO.FlowExecutorDetailedStatus_Validation = {
	version: {
		number: true
	},
	runtime_id: {
		number: true
	},
	start_time: {
		number: true
	},
	end_time: {
		number: true
	},
	progress_percentage: {
		number: true
	}
};


DO.FlowExecutorDetailedStatus_Defaults = {
	$type:"FlowExecutorDetailedStatus",
	metadata:null,
	name:"",
	version:0,
	runtime_id:0,
	start_time:0,
	end_time:0,
	state:DO.ExecutionState.UNKNOWN,
	progress_percentage:0,
	message:"",
	statuses:[],
	light_flow_definition:null
};

DO.FlowExecutorDetailedStatus_Types = {
	metadata:"DTObjectMetaData",
	state:"ExecutionState",
	statuses:"FlowNodeStatus",
	light_flow_definition:"FlowDto"
};


DO.FlowExecutorResumeContext = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	active_tokens:"active_tokens"
};

DO.FlowExecutorResumeContext_Validation = {
	version: {
		number: true
	}
};


DO.FlowExecutorResumeContext_Defaults = {
	$type:"FlowExecutorResumeContext",
	metadata:null,
	name:"",
	version:0,
	active_tokens:{}
};

DO.FlowExecutorResumeContext_Types = {
	metadata:"DTObjectMetaData",
	active_tokens:"KeyValueFlowToken"
};


DO.FlowDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	flow_type:"flow_type",
	lane_sets:"lane_sets",
	flow_nodes:"flow_nodes",
	flow_settings:"flow_settings",
	resumable:"resumable",
	max_instances:"max_instances",
	is_template:"is_template"
};

DO.FlowDto_Validation = {
	version: {
		number: true
	},
	flow_type: {
		required: true
	},
	flow_settings: {
		required: true
	},
	max_instances: {
		number: true
	}
};


DO.FlowDto_Defaults = {
	$type:"FlowDto",
	metadata:null,
	name:"",
	version:0,
	flow_type:DO.FlowType.SIMPLE,
	lane_sets:[],
	flow_nodes:{},
	flow_settings:{},
	resumable:true,
	max_instances:1,
	is_template:false
};

DO.FlowDto_Types = {
	metadata:"DTObjectMetaData",
	flow_type:"FlowType",
	lane_sets:"LaneSet",
	flow_nodes:"KeyValueFlowNode",
	flow_settings:"FlowSettings"
};


DO.FlowTokenDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	activity_runtime_id:"activity_runtime_id",
	current_flow_node_id:"current_flow_node_id",
	current_flow_node_name:"current_flow_node_name",
	time:"time",
	state:"state",
	workflow_runtime_id:"workflow_runtime_id",
	previous_flow_node_id:"previous_flow_node_id",
	previous_flow_node_name:"previous_flow_node_name"
};

DO.FlowTokenDto_Validation = {
	version: {
		number: true
	},
	activity_runtime_id: {
		number: true
	},
	time: {
		number: true
	}
};


DO.FlowTokenDto_Defaults = {
	$type:"FlowTokenDto",
	metadata:null,
	name:"",
	version:0,
	activity_runtime_id:0,
	current_flow_node_id:"",
	current_flow_node_name:"",
	time:0,
	state:DO.TokenState.UNKNOWN,
	workflow_runtime_id:"",
	previous_flow_node_id:"",
	previous_flow_node_name:""
};

DO.FlowTokenDto_Types = {
	metadata:"DTObjectMetaData",
	state:"TokenState"
};


DO.KeyValueFlowToken = {
	Key:"Key",
	Value:"Value"
};

DO.KeyValueFlowToken_Validation = {
	Key: {
		required: true
	},
	Value: {
		required: true
	}
};


DO.KeyValueFlowToken_Defaults = {
	Key:"",
	Value:{}
};

DO.KeyValueFlowToken_Types = {
	Value:"FlowTokenDto"
};


DO.Documentation = {
	text_format:"text_format",
	text:"text"
};

DO.Documentation_Validation = {
};


DO.Documentation_Defaults = {
	text_format:"",
	text:""
};

DO.Documentation_Types = {
};


DO.BaseVisuals = {
	x:"x",
	y:"y",
	h:"h",
	w:"w"
};

DO.BaseVisuals_Validation = {
	x: {
		number: true
	},
	y: {
		number: true
	},
	h: {
		number: true
	},
	w: {
		number: true
	}
};


DO.BaseVisuals_Defaults = {
	x:0.0,
	y:0.0,
	h:0.0,
	w:0.0
};

DO.BaseVisuals_Types = {
};


DO.BaseElement = {
	$type:"$type",
	id:"id",
	visuals:"visuals"
};

DO.BaseElement_Validation = {
	id: {
		required: true
	}
};


DO.BaseElement_Defaults = {
	$type:"BaseElement",
	id:"",
	visuals:null
};

DO.BaseElement_Types = {
	visuals:"BaseVisuals"
};


DO.Lane = {
	$type:"$type",
	id:"id",
	visuals:"visuals",
	name:"name",
	child_lane_set:"child_lane_set",
	flow_node_refs:"flow_node_refs"
};

DO.Lane_Validation = {
	id: {
		required: true
	}
};


DO.Lane_Defaults = {
	$type:"Lane",
	id:"",
	visuals:null,
	name:"",
	child_lane_set:null,
	flow_node_refs:[]
};

DO.Lane_Types = {
	visuals:"BaseVisuals",
	child_lane_set:"LaneSet"
};


DO.LaneSet = {
	$type:"$type",
	id:"id",
	visuals:"visuals",
	lanes:"lanes"
};

DO.LaneSet_Validation = {
	id: {
		required: true
	}
};


DO.LaneSet_Defaults = {
	$type:"LaneSet",
	id:"",
	visuals:null,
	lanes:[]
};

DO.LaneSet_Types = {
	visuals:"BaseVisuals",
	lanes:"Lane"
};


DO.FlowElement = {
	$type:"$type",
	id:"id",
	visuals:"visuals",
	display_name:"display_name",
	description:"description"
};

DO.FlowElement_Validation = {
	id: {
		required: true
	}
};


DO.FlowElement_Defaults = {
	$type:"FlowElement",
	id:"",
	visuals:null,
	display_name:"",
	description:""
};

DO.FlowElement_Types = {
	visuals:"BaseVisuals"
};


DO.Port = {
	$type:"$type",
	id:"id",
	visuals:"visuals",
	name:"name"
};

DO.Port_Validation = {
	id: {
		required: true
	}
};


DO.Port_Defaults = {
	$type:"Port",
	id:"",
	visuals:null,
	name:""
};

DO.Port_Types = {
	visuals:"BaseVisuals"
};


DO.InPort = {
	$type:"$type",
	id:"id",
	visuals:"visuals",
	name:"name"
};

DO.InPort_Validation = {
	id: {
		required: true
	}
};


DO.InPort_Defaults = {
	$type:"InPort",
	id:"",
	visuals:null,
	name:""
};

DO.InPort_Types = {
	visuals:"BaseVisuals"
};


DO.SequenceFlow = {
	$type:"$type",
	id:"id",
	visuals:"visuals",
	display_name:"display_name",
	description:"description",
	target_node_id:"target_node_id",
	target_port_id:"target_port_id"
};

DO.SequenceFlow_Validation = {
	id: {
		required: true
	}
};


DO.SequenceFlow_Defaults = {
	$type:"SequenceFlow",
	id:"",
	visuals:null,
	display_name:"",
	description:"",
	target_node_id:"",
	target_port_id:""
};

DO.SequenceFlow_Types = {
	visuals:"BaseVisuals"
};


DO.OutPort = {
	$type:"$type",
	id:"id",
	visuals:"visuals",
	name:"name",
	directive:"directive"
};

DO.OutPort_Validation = {
	id: {
		required: true
	},
	directive: {
		required: true
	}
};


DO.OutPort_Defaults = {
	$type:"OutPort",
	id:"",
	visuals:null,
	name:"",
	directive:{}
};

DO.OutPort_Types = {
	visuals:"BaseVisuals",
	directive:"SequenceFlow"
};


DO.ErrorOutPort = {
	$type:"$type",
	id:"id",
	visuals:"visuals",
	name:"name",
	directive:"directive"
};

DO.ErrorOutPort_Validation = {
	id: {
		required: true
	},
	directive: {
		required: true
	}
};


DO.ErrorOutPort_Defaults = {
	$type:"ErrorOutPort",
	id:"",
	visuals:null,
	name:"",
	directive:{}
};

DO.ErrorOutPort_Types = {
	visuals:"BaseVisuals",
	directive:"SequenceFlow"
};


DO.VarDef = {
	name:"name",
	value:"value",
	type:"type",
	level:"level",
	expression:"expression",
	default_value:"default_value"
};

DO.VarDef_Validation = {
	name: {
		required: true
	},
	value: {
		required: true
	},
	type: {
		required: true
	},
	level: {
		required: true
	}
};


DO.VarDef_Defaults = {
	name:"",
	value:"",
	type:DO.VariableType.STRING,
	level:DO.VarDefLevel.STATIC,
	expression:"",
	default_value:""
};

DO.VarDef_Types = {
	type:"VariableType",
	level:"VarDefLevel"
};


DO.FlowNode = {
	$type:"$type",
	id:"id",
	visuals:"visuals",
	display_name:"display_name",
	description:"description",
	incoming:"incoming",
	outgoing:"outgoing"
};

DO.FlowNode_Validation = {
	id: {
		required: true
	}
};


DO.FlowNode_Defaults = {
	$type:"FlowNode",
	id:"",
	visuals:null,
	display_name:"",
	description:"",
	incoming:[],
	outgoing:[]
};

DO.FlowNode_Types = {
	visuals:"BaseVisuals",
	incoming:"InPort",
	outgoing:"OutPort"
};


DO.StartNode = {
	$type:"$type",
	id:"id",
	visuals:"visuals",
	display_name:"display_name",
	description:"description",
	incoming:"incoming",
	outgoing:"outgoing"
};

DO.StartNode_Validation = {
	id: {
		required: true
	}
};


DO.StartNode_Defaults = {
	$type:"StartNode",
	id:"",
	visuals:null,
	display_name:"",
	description:"",
	incoming:[],
	outgoing:[]
};

DO.StartNode_Types = {
	visuals:"BaseVisuals",
	incoming:"InPort",
	outgoing:"OutPort"
};


DO.ErrorHandlingPolicy = {
	termination_mode:"termination_mode"
};

DO.ErrorHandlingPolicy_Validation = {
	termination_mode: {
		required: true
	}
};


DO.ErrorHandlingPolicy_Defaults = {
	termination_mode:DO.TerminationMode.STOP_IMMEDIATE
};

DO.ErrorHandlingPolicy_Types = {
	termination_mode:"TerminationMode"
};


DO.EndNode = {
	$type:"$type",
	id:"id",
	visuals:"visuals",
	display_name:"display_name",
	description:"description",
	incoming:"incoming",
	outgoing:"outgoing",
	error_policy:"error_policy"
};

DO.EndNode_Validation = {
	id: {
		required: true
	}
};


DO.EndNode_Defaults = {
	$type:"EndNode",
	id:"",
	visuals:null,
	display_name:"",
	description:"",
	incoming:[],
	outgoing:[],
	error_policy:null
};

DO.EndNode_Types = {
	visuals:"BaseVisuals",
	incoming:"InPort",
	outgoing:"OutPort",
	error_policy:"ErrorHandlingPolicy"
};


DO.BaseGateway = {
	$type:"$type",
	id:"id",
	visuals:"visuals",
	display_name:"display_name",
	description:"description",
	incoming:"incoming",
	outgoing:"outgoing",
	direction:"direction"
};

DO.BaseGateway_Validation = {
	id: {
		required: true
	}
};


DO.BaseGateway_Defaults = {
	$type:"BaseGateway",
	id:"",
	visuals:null,
	display_name:"",
	description:"",
	incoming:[],
	outgoing:[],
	direction:DO.GatewayDirection.UNDEFINED
};

DO.BaseGateway_Types = {
	visuals:"BaseVisuals",
	incoming:"InPort",
	outgoing:"OutPort",
	direction:"GatewayDirection"
};


DO.ParallelGateway = {
	$type:"$type",
	id:"id",
	visuals:"visuals",
	display_name:"display_name",
	description:"description",
	incoming:"incoming",
	outgoing:"outgoing",
	direction:"direction"
};

DO.ParallelGateway_Validation = {
	id: {
		required: true
	}
};


DO.ParallelGateway_Defaults = {
	$type:"ParallelGateway",
	id:"",
	visuals:null,
	display_name:"",
	description:"",
	incoming:[],
	outgoing:[],
	direction:DO.GatewayDirection.UNDEFINED
};

DO.ParallelGateway_Types = {
	visuals:"BaseVisuals",
	incoming:"InPort",
	outgoing:"OutPort",
	direction:"GatewayDirection"
};


DO.BaseActivity = {
	$type:"$type",
	id:"id",
	visuals:"visuals",
	display_name:"display_name",
	description:"description",
	incoming:"incoming",
	outgoing:"outgoing"
};

DO.BaseActivity_Validation = {
	id: {
		required: true
	}
};


DO.BaseActivity_Defaults = {
	$type:"BaseActivity",
	id:"",
	visuals:null,
	display_name:"",
	description:"",
	incoming:[],
	outgoing:[]
};

DO.BaseActivity_Types = {
	visuals:"BaseVisuals",
	incoming:"InPort",
	outgoing:"OutPort"
};


DO.ExecutionActivity = {
	$type:"$type",
	id:"id",
	visuals:"visuals",
	display_name:"display_name",
	description:"description",
	incoming:"incoming",
	outgoing:"outgoing",
	executor_input:"executor_input",
	timeout_sec:"timeout_sec"
};

DO.ExecutionActivity_Validation = {
	id: {
		required: true
	},
	timeout_sec: {
		number: true
	}
};


DO.ExecutionActivity_Defaults = {
	$type:"ExecutionActivity",
	id:"",
	visuals:null,
	display_name:"",
	description:"",
	incoming:[],
	outgoing:[],
	executor_input:null,
	timeout_sec:300
};

DO.ExecutionActivity_Types = {
	visuals:"BaseVisuals",
	incoming:"InPort",
	outgoing:"OutPort",
	executor_input:"ExecutorDto"
};


DO.KeyValueFlowNode = {
	Key:"Key",
	Value:"Value"
};

DO.KeyValueFlowNode_Validation = {
	Key: {
		required: true
	},
	Value: {
		required: true
	}
};


DO.KeyValueFlowNode_Defaults = {
	Key:"",
	Value:{}
};

DO.KeyValueFlowNode_Types = {
	Value:"FlowNode"
};


DO.FlowSettings = {
	arrow_type:"arrow_type",
	arrow_width:"arrow_width",
	grid_cell_size:"grid_cell_size",
	port_diameter:"port_diameter",
	space_width:"space_width",
	space_height:"space_height"
};

DO.FlowSettings_Validation = {
	arrow_width: {
		number: true,
		max: 10,
		min: 1
	},
	grid_cell_size: {
		number: true,
		max: 100,
		min: 10
	},
	port_diameter: {
		number: true,
		max: 40,
		min: 6
	},
	space_width: {
		number: true,
		max: 100,
		min: 10
	},
	space_height: {
		number: true,
		max: 100,
		min: 10
	}
};


DO.FlowSettings_Defaults = {
	arrow_type:DO.ArrowType.DIAGONAL_WITH_ARROW,
	arrow_width:3,
	grid_cell_size:40,
	port_diameter:18,
	space_width:40,
	space_height:40
};

DO.FlowSettings_Types = {
	arrow_type:"ArrowType"
};


DO.WorkflowAuditRecord = {
	$type:"$type",
	original_time:"original_time",
	reporting_node:"reporting_node",
	reporting_user:"reporting_user",
	product:"product",
	subject_name:"subject_name",
	category:"category",
	event:"event",
	severity:"severity",
	message:"message",
	audit_time:"audit_time",
	workflow_name:"workflow_name",
	workflow_runtime_id:"workflow_runtime_id",
	node_name:"node_name",
	token_name:"token_name"
};

DO.WorkflowAuditRecord_Validation = {
	original_time: {
		number: true
	},
	audit_time: {
		number: true
	},
	workflow_runtime_id: {
		number: true
	}
};


DO.WorkflowAuditRecord_Defaults = {
	$type:"WorkflowAuditRecord",
	original_time:0,
	reporting_node:"",
	reporting_user:"",
	product:"",
	subject_name:"",
	category:"",
	event:"",
	severity:DO.AuditSeverity.INFO,
	message:"",
	audit_time:0,
	workflow_name:"",
	workflow_runtime_id:0,
	node_name:"",
	token_name:""
};

DO.WorkflowAuditRecord_Types = {
	severity:"AuditSeverity"
};


DO.WorkflowExecutorDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	configuration_name:"configuration_name",
	scope:"scope",
	workflow_name:"workflow_name"
};

DO.WorkflowExecutorDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	workflow_name: {
		required: true
	}
};


DO.WorkflowExecutorDto_Defaults = {
	$type:"WorkflowExecutorDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	configuration_name:"",
	scope:"",
	workflow_name:""
};

DO.WorkflowExecutorDto_Types = {
	metadata:"DTObjectMetaData"
};


DO.ValidationEvent = {
	element_id:"element_id",
	message:"message"
};

DO.ValidationEvent_Validation = {
	element_id: {
		required: true
	},
	message: {
		required: true
	}
};


DO.ValidationEvent_Defaults = {
	element_id:"",
	message:""
};

DO.ValidationEvent_Types = {
};


DO.ValidationSummary = {
	errors:"errors",
	warnings:"warnings"
};

DO.ValidationSummary_Validation = {
};


DO.ValidationSummary_Defaults = {
	errors:[],
	warnings:[]
};

DO.ValidationSummary_Types = {
	errors:"ValidationEvent",
	warnings:"ValidationEvent"
};


DO.ValidateFlowParams = {
};

DO.ValidateFlowParams_Validation = {
};


DO.ValidateFlowParams_Defaults = {
};

DO.ValidateFlowParams_Types = {
};


DO.ValidateFlowResp = {
	validation_summary:"validation_summary"
};

DO.ValidateFlowResp_Validation = {
};


DO.ValidateFlowResp_Defaults = {
	validation_summary:null
};

DO.ValidateFlowResp_Types = {
	validation_summary:"ValidationSummary"
};


DO.ExecutionServiceDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	max_runtime_instances_to_keep:"max_runtime_instances_to_keep"
};

DO.ExecutionServiceDto_Validation = {
	version: {
		number: true
	},
	max_runtime_instances_to_keep: {
		number: true
	}
};


DO.ExecutionServiceDto_Defaults = {
	$type:"ExecutionServiceDto",
	metadata:null,
	name:"",
	version:0,
	max_runtime_instances_to_keep:20
};

DO.ExecutionServiceDto_Types = {
	metadata:"DTObjectMetaData"
};


DO.ExecutionServiceRuntimeDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	next_executor_id:"next_executor_id"
};

DO.ExecutionServiceRuntimeDto_Validation = {
	version: {
		number: true
	},
	next_executor_id: {
		required: true,
		number: true
	}
};


DO.ExecutionServiceRuntimeDto_Defaults = {
	$type:"ExecutionServiceRuntimeDto",
	metadata:null,
	name:"",
	version:0,
	next_executor_id:0
};

DO.ExecutionServiceRuntimeDto_Types = {
	metadata:"DTObjectMetaData"
};


DO.ExecutorRuntimeDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	runtime_id:"runtime_id",
	owner:"owner",
	input_dto:"input_dto",
	state:"state",
	status:"status",
	is_attachable:"is_attachable",
	attachable_context:"attachable_context",
	resumable_context:"resumable_context",
	log_file_name:"log_file_name"
};

DO.ExecutorRuntimeDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	runtime_id: {
		number: true
	}
};


DO.ExecutorRuntimeDto_Defaults = {
	$type:"ExecutorRuntimeDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	runtime_id:0,
	owner:"",
	input_dto:null,
	state:DO.ExecutionState.UNKNOWN,
	status:null,
	is_attachable:false,
	attachable_context:"",
	resumable_context:null,
	log_file_name:""
};

DO.ExecutorRuntimeDto_Types = {
	metadata:"DTObjectMetaData",
	input_dto:"ExecutorDto",
	state:"ExecutionState",
	status:"ExecutorStatus",
	resumable_context:"ResumeContext"
};


DO.ExecutorRuntimeDtoPP = {
	runtime_id:"runtime_id",
	owner:"owner",
	input_dto_type:"input_dto_type",
	input_dto_name:"input_dto_name",
	state:"state"
};

DO.ExecutorRuntimeDtoPP_Validation = {
	runtime_id: {
		number: true
	}
};


DO.ExecutorRuntimeDtoPP_Defaults = {
	runtime_id:0,
	owner:"",
	input_dto_type:"",
	input_dto_name:"",
	state:DO.ExecutionState.UNKNOWN
};

DO.ExecutorRuntimeDtoPP_Types = {
	state:"ExecutionState"
};


DO.ExecutorDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	configuration_name:"configuration_name",
	scope:"scope"
};

DO.ExecutorDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	}
};


DO.ExecutorDto_Defaults = {
	$type:"ExecutorDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	configuration_name:"",
	scope:""
};

DO.ExecutorDto_Types = {
	metadata:"DTObjectMetaData"
};


DO.OSSecurityContext = {
	username:"username",
	password:"password",
	domain:"domain"
};

DO.OSSecurityContext_Validation = {
	username: {
		required: true
	}
};


DO.OSSecurityContext_Defaults = {
	username:"",
	password:"",
	domain:""
};

DO.OSSecurityContext_Types = {
};


DO.ProcessExecutorDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	configuration_name:"configuration_name",
	scope:"scope",
	executable_path:"executable_path",
	arguments:"arguments",
	environment_variables:"environment_variables",
	working_directory:"working_directory",
	security_context:"security_context",
	success_exit_code:"success_exit_code"
};

DO.ProcessExecutorDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	success_exit_code: {
		number: true
	}
};


DO.ProcessExecutorDto_Defaults = {
	$type:"ProcessExecutorDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	configuration_name:"",
	scope:"",
	executable_path:"",
	arguments:"",
	environment_variables:{},
	working_directory:"",
	security_context:null,
	success_exit_code:0
};

DO.ProcessExecutorDto_Types = {
	metadata:"DTObjectMetaData",
	environment_variables:"KeyValue",
	security_context:"OSSecurityContext"
};


DO.MethodExecutorDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	configuration_name:"configuration_name",
	scope:"scope"
};

DO.MethodExecutorDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	}
};


DO.MethodExecutorDto_Defaults = {
	$type:"MethodExecutorDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	configuration_name:"",
	scope:""
};

DO.MethodExecutorDto_Types = {
	metadata:"DTObjectMetaData"
};


DO.ExecutorOutputDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	exit_code:"exit_code",
	running_time_seconds:"running_time_seconds",
	aborted:"aborted"
};

DO.ExecutorOutputDto_Validation = {
	version: {
		number: true
	},
	exit_code: {
		number: true
	},
	running_time_seconds: {
		number: true
	}
};


DO.ExecutorOutputDto_Defaults = {
	$type:"ExecutorOutputDto",
	metadata:null,
	name:"",
	version:0,
	exit_code:0,
	running_time_seconds:0,
	aborted:false
};

DO.ExecutorOutputDto_Types = {
	metadata:"DTObjectMetaData"
};


DO.ProcessExecutorOutput = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	exit_code:"exit_code",
	running_time_seconds:"running_time_seconds",
	aborted:"aborted"
};

DO.ProcessExecutorOutput_Validation = {
	version: {
		number: true
	},
	exit_code: {
		number: true
	},
	running_time_seconds: {
		number: true
	}
};


DO.ProcessExecutorOutput_Defaults = {
	$type:"ProcessExecutorOutput",
	metadata:null,
	name:"",
	version:0,
	exit_code:0,
	running_time_seconds:0,
	aborted:false
};

DO.ProcessExecutorOutput_Types = {
	metadata:"DTObjectMetaData"
};


DO.MethodExecutorOutput = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	exit_code:"exit_code",
	running_time_seconds:"running_time_seconds",
	aborted:"aborted"
};

DO.MethodExecutorOutput_Validation = {
	version: {
		number: true
	},
	exit_code: {
		number: true
	},
	running_time_seconds: {
		number: true
	}
};


DO.MethodExecutorOutput_Defaults = {
	$type:"MethodExecutorOutput",
	metadata:null,
	name:"",
	version:0,
	exit_code:0,
	running_time_seconds:0,
	aborted:false
};

DO.MethodExecutorOutput_Types = {
	metadata:"DTObjectMetaData"
};


DO.ExecutorStatus = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	runtime_id:"runtime_id",
	start_time:"start_time",
	end_time:"end_time",
	state:"state",
	progress_percentage:"progress_percentage",
	message:"message"
};

DO.ExecutorStatus_Validation = {
	version: {
		number: true
	},
	runtime_id: {
		number: true
	},
	start_time: {
		number: true
	},
	end_time: {
		number: true
	},
	progress_percentage: {
		number: true
	}
};


DO.ExecutorStatus_Defaults = {
	$type:"ExecutorStatus",
	metadata:null,
	name:"",
	version:0,
	runtime_id:0,
	start_time:0,
	end_time:0,
	state:DO.ExecutionState.UNKNOWN,
	progress_percentage:0,
	message:""
};

DO.ExecutorStatus_Types = {
	metadata:"DTObjectMetaData",
	state:"ExecutionState"
};


DO.ResumeContext = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version"
};

DO.ResumeContext_Validation = {
	version: {
		number: true
	}
};


DO.ResumeContext_Defaults = {
	$type:"ResumeContext",
	metadata:null,
	name:"",
	version:0
};

DO.ResumeContext_Types = {
	metadata:"DTObjectMetaData"
};


DO.ExecutionExecuteParams = {
	executor_dto_name:"executor_dto_name",
	type:"type",
	owner:"owner"
};

DO.ExecutionExecuteParams_Validation = {
	executor_dto_name: {
		required: true
	},
	type: {
		required: true
	},
	owner: {
		required: true
	}
};


DO.ExecutionExecuteParams_Defaults = {
	executor_dto_name:"",
	type:"",
	owner:""
};

DO.ExecutionExecuteParams_Types = {
};


DO.ExecutionExecuteResp = {
	executor_id:"executor_id"
};

DO.ExecutionExecuteResp_Validation = {
	executor_id: {
		required: true,
		number: true
	}
};


DO.ExecutionExecuteResp_Defaults = {
	executor_id:0
};

DO.ExecutionExecuteResp_Types = {
};


DO.ExecutionAttachParams = {
	executor_id:"executor_id"
};

DO.ExecutionAttachParams_Validation = {
	executor_id: {
		required: true,
		number: true
	}
};


DO.ExecutionAttachParams_Defaults = {
	executor_id:0
};

DO.ExecutionAttachParams_Types = {
};


DO.ExecutionGetStatusParams = {
	executor_id:"executor_id",
	level:"level"
};

DO.ExecutionGetStatusParams_Validation = {
	executor_id: {
		required: true,
		number: true
	}
};


DO.ExecutionGetStatusParams_Defaults = {
	executor_id:0,
	level:DO.StatusDetailLevel.SUMMARY
};

DO.ExecutionGetStatusParams_Types = {
	level:"StatusDetailLevel"
};


DO.ExecutionStopParams = {
	executor_id:"executor_id",
	reason:"reason",
	timeout:"timeout"
};

DO.ExecutionStopParams_Validation = {
	executor_id: {
		required: true,
		number: true
	},
	timeout: {
		required: true,
		number: true
	}
};


DO.ExecutionStopParams_Defaults = {
	executor_id:0,
	reason:"",
	timeout:0
};

DO.ExecutionStopParams_Types = {
};


DO.ExecutionAbortParams = {
	executor_id:"executor_id",
	reason:"reason"
};

DO.ExecutionAbortParams_Validation = {
	executor_id: {
		required: true,
		number: true
	}
};


DO.ExecutionAbortParams_Defaults = {
	executor_id:0,
	reason:""
};

DO.ExecutionAbortParams_Types = {
};


DO.ExecutionPauseParams = {
	executor_id:"executor_id",
	reason:"reason",
	timeout:"timeout"
};

DO.ExecutionPauseParams_Validation = {
	executor_id: {
		required: true,
		number: true
	},
	timeout: {
		required: true,
		number: true
	}
};


DO.ExecutionPauseParams_Defaults = {
	executor_id:0,
	reason:"",
	timeout:0
};

DO.ExecutionPauseParams_Types = {
};


DO.ExecutionResumeParams = {
	executor_id:"executor_id"
};

DO.ExecutionResumeParams_Validation = {
	executor_id: {
		required: true,
		number: true
	}
};


DO.ExecutionResumeParams_Defaults = {
	executor_id:0
};

DO.ExecutionResumeParams_Types = {
};


DO.ExecutionListExecutorsDataParams = {
	owner:"owner",
	type:"type",
	name:"name",
	options:"options",
	level:"level",
	max_items:"max_items"
};

DO.ExecutionListExecutorsDataParams_Validation = {
	max_items: {
		number: true
	}
};


DO.ExecutionListExecutorsDataParams_Defaults = {
	owner:"",
	type:"",
	name:"",
	options:DO.ExecutorRuntimeListOptions.RUNNING,
	level:DO.StatusDetailLevel.SUMMARY,
	max_items:-1
};

DO.ExecutionListExecutorsDataParams_Types = {
	options:"ExecutorRuntimeListOptions",
	level:"StatusDetailLevel"
};


DO.ExecutionListExecutorsDataResp = {
	executors:"executors"
};

DO.ExecutionListExecutorsDataResp_Validation = {
};


DO.ExecutionListExecutorsDataResp_Defaults = {
	executors:[]
};

DO.ExecutionListExecutorsDataResp_Types = {
	executors:"ExecutorRuntimeDto"
};


DO.ListExecutorsLogsParams = {
	type:"type",
	name:"name"
};

DO.ListExecutorsLogsParams_Validation = {
};


DO.ListExecutorsLogsParams_Defaults = {
	type:"",
	name:""
};

DO.ListExecutorsLogsParams_Types = {
};


DO.ListExecutorsLogsResp = {
	type:"type",
	name:"name",
	log_file_names:"log_file_names"
};

DO.ListExecutorsLogsResp_Validation = {
};


DO.ListExecutorsLogsResp_Defaults = {
	type:"",
	name:"",
	log_file_names:[]
};

DO.ListExecutorsLogsResp_Types = {
};


DO.ExecutionGetLogDataParams = {
	type:"type",
	name:"name",
	runtime_id:"runtime_id",
	position:"position",
	lines_to_read:"lines_to_read",
	filename:"filename"
};

DO.ExecutionGetLogDataParams_Validation = {
	runtime_id: {
		number: true
	},
	position: {
		number: true
	},
	lines_to_read: {
		number: true
	}
};


DO.ExecutionGetLogDataParams_Defaults = {
	type:"",
	name:"",
	runtime_id:0,
	position:0,
	lines_to_read:500,
	filename:""
};

DO.ExecutionGetLogDataParams_Types = {
};


DO.ExecutionGetLogDataResp = {
	log_data:"log_data"
};

DO.ExecutionGetLogDataResp_Validation = {
	log_data: {
		required: true
	}
};


DO.ExecutionGetLogDataResp_Defaults = {
	log_data:{}
};

DO.ExecutionGetLogDataResp_Types = {
	log_data:"LogFileData"
};


DO.ExecutionDownloadLogFileParams = {
	type:"type",
	name:"name",
	runtime_id:"runtime_id",
	filename:"filename"
};

DO.ExecutionDownloadLogFileParams_Validation = {
	runtime_id: {
		number: true
	}
};


DO.ExecutionDownloadLogFileParams_Defaults = {
	type:"",
	name:"",
	runtime_id:0,
	filename:""
};

DO.ExecutionDownloadLogFileParams_Types = {
};


DO.MessageCenterDbConnection = {
	$type:"$type"
};

DO.MessageCenterDbConnection_Validation = {
};


DO.MessageCenterDbConnection_Defaults = {
	$type:"MessageCenterDbConnection"
};

DO.MessageCenterDbConnection_Types = {
};


DO.MessageCenterDbConnectionSqlite = {
	$type:"$type",
	physical_path:"physical_path"
};

DO.MessageCenterDbConnectionSqlite_Validation = {
};


DO.MessageCenterDbConnectionSqlite_Defaults = {
	$type:"MessageCenterDbConnectionSqlite",
	physical_path:""
};

DO.MessageCenterDbConnectionSqlite_Types = {
};


DO.MessageCenterDbConnectionSqlserver = {
	$type:"$type",
	connection_string:"connection_string"
};

DO.MessageCenterDbConnectionSqlserver_Validation = {
};


DO.MessageCenterDbConnectionSqlserver_Defaults = {
	$type:"MessageCenterDbConnectionSqlserver",
	connection_string:""
};

DO.MessageCenterDbConnectionSqlserver_Types = {
};


DO.MessageRetention = {
	max_backlog_age_hours:"max_backlog_age_hours",
	max_num_records:"max_num_records"
};

DO.MessageRetention_Validation = {
	max_backlog_age_hours: {
		number: true
	},
	max_num_records: {
		number: true
	}
};


DO.MessageRetention_Defaults = {
	max_backlog_age_hours:168,
	max_num_records:0
};

DO.MessageRetention_Types = {
};


DO.MessageCenterDTO = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	db_info:"db_info",
	retention:"retention"
};

DO.MessageCenterDTO_Validation = {
	version: {
		number: true
	}
};


DO.MessageCenterDTO_Defaults = {
	$type:"MessageCenterDTO",
	metadata:null,
	name:"",
	version:0,
	db_info:null,
	retention:null
};

DO.MessageCenterDTO_Types = {
	metadata:"DTObjectMetaData",
	db_info:"MessageCenterDbConnection",
	retention:"MessageRetention"
};


DO.MessageCenterRuntime = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	reader_position:"reader_position"
};

DO.MessageCenterRuntime_Validation = {
	version: {
		number: true
	}
};


DO.MessageCenterRuntime_Defaults = {
	$type:"MessageCenterRuntime",
	metadata:null,
	name:"",
	version:0,
	reader_position:""
};

DO.MessageCenterRuntime_Types = {
	metadata:"DTObjectMetaData"
};


DO.MessageCenterDTOPP = {
};

DO.MessageCenterDTOPP_Validation = {
};


DO.MessageCenterDTOPP_Defaults = {
};

DO.MessageCenterDTOPP_Types = {
};


DO.FieldType = {
};

DO.FieldType_Validation = {
};


DO.FieldType_Defaults = {
};

DO.FieldType_Types = {
};


DO.FieldCondition = {
	field_name:"field_name",
	value:"value",
	condition:"condition"
};

DO.FieldCondition_Validation = {
};


DO.FieldCondition_Defaults = {
	field_name:"",
	value:"",
	condition:DO.Comparison.EQUALS
};

DO.FieldCondition_Types = {
	condition:"Comparison"
};


DO.MessageCenterRecord = {
	audit:"audit",
	position:"position",
	audit_time:"audit_time"
};

DO.MessageCenterRecord_Validation = {
};


DO.MessageCenterRecord_Defaults = {
	audit:null,
	position:"",
	audit_time:""
};

DO.MessageCenterRecord_Types = {
	audit:"AuditRecord"
};


DO.MessageCenterGetMessagesParams = {
	max_count:"max_count",
	start:"start",
	end:"end",
	direction:"direction"
};

DO.MessageCenterGetMessagesParams_Validation = {
	max_count: {
		number: true
	}
};


DO.MessageCenterGetMessagesParams_Defaults = {
	max_count:1000,
	start:"",
	end:"",
	direction:DO.Direction.OLDER_ITEMS
};

DO.MessageCenterGetMessagesParams_Types = {
	direction:"Direction"
};


DO.MessageCenterGetMessagesRequest = {
	fields:"fields"
};

DO.MessageCenterGetMessagesRequest_Validation = {
};


DO.MessageCenterGetMessagesRequest_Defaults = {
	fields:[]
};

DO.MessageCenterGetMessagesRequest_Types = {
	fields:"FieldCondition"
};


DO.MessageCenterGetMessagesResult = {
	records:"records",
	min_range:"min_range",
	max_range:"max_range"
};

DO.MessageCenterGetMessagesResult_Validation = {
};


DO.MessageCenterGetMessagesResult_Defaults = {
	records:[],
	min_range:"",
	max_range:""
};

DO.MessageCenterGetMessagesResult_Types = {
	records:"MessageCenterRecord"
};


DO.SeverityCounter = {
	severity:"severity",
	records_count:"records_count"
};

DO.SeverityCounter_Validation = {
	records_count: {
		number: true
	}
};


DO.SeverityCounter_Defaults = {
	severity:DO.AuditSeverity.INFO,
	records_count:0
};

DO.SeverityCounter_Types = {
	severity:"AuditSeverity"
};


DO.MessageCenterGetMessagesCountersParams = {
	time_limit:"time_limit"
};

DO.MessageCenterGetMessagesCountersParams_Validation = {
};


DO.MessageCenterGetMessagesCountersParams_Defaults = {
	time_limit:""
};

DO.MessageCenterGetMessagesCountersParams_Types = {
};


DO.MessageCenterGetMessagesCountersResp = {
	counters:"counters"
};

DO.MessageCenterGetMessagesCountersResp_Validation = {
};


DO.MessageCenterGetMessagesCountersResp_Defaults = {
	counters:[]
};

DO.MessageCenterGetMessagesCountersResp_Types = {
	counters:"SeverityCounter"
};


DO.MessageCenterDeleteAuditParams = {
};

DO.MessageCenterDeleteAuditParams_Validation = {
};


DO.MessageCenterDeleteAuditParams_Defaults = {
};

DO.MessageCenterDeleteAuditParams_Types = {
};


DO.MessageCenterDeleteAuditRequest = {
	fields:"fields"
};

DO.MessageCenterDeleteAuditRequest_Validation = {
};


DO.MessageCenterDeleteAuditRequest_Defaults = {
	fields:[]
};

DO.MessageCenterDeleteAuditRequest_Types = {
	fields:"FieldCondition"
};


DO.MessageCenterDeleteAuditResp = {
	num_deleted:"num_deleted"
};

DO.MessageCenterDeleteAuditResp_Validation = {
	num_deleted: {
		number: true
	}
};


DO.MessageCenterDeleteAuditResp_Defaults = {
	num_deleted:0
};

DO.MessageCenterDeleteAuditResp_Types = {
};


DO.AttunityLicenseDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	product:"product",
	license_type:"license_type",
	issued_to:"issued_to",
	issued_by:"issued_by",
	serial_no:"serial_no",
	expiration_date:"expiration_date",
	hosts:"hosts",
	host_role:"host_role",
	product_version:"product_version",
	notes:"notes",
	issue_time:"issue_time",
	signature:"signature",
	license_json_doc:"license_json_doc"
};

DO.AttunityLicenseDto_Validation = {
	version: {
		number: true
	}
};


DO.AttunityLicenseDto_Defaults = {
	$type:"AttunityLicenseDto",
	metadata:null,
	name:"",
	version:0,
	product:"",
	license_type:"",
	issued_to:"",
	issued_by:"",
	serial_no:"",
	expiration_date:"",
	hosts:"",
	host_role:"",
	product_version:"",
	notes:"",
	issue_time:"",
	signature:"",
	license_json_doc:""
};

DO.AttunityLicenseDto_Types = {
	metadata:"DTObjectMetaData"
};


DO.AttunityLicenses = {
	licenses:"licenses"
};

DO.AttunityLicenses_Validation = {
};


DO.AttunityLicenses_Defaults = {
	licenses:[]
};

DO.AttunityLicenses_Types = {
	licenses:"AttunityLicenseDto"
};


DO.AttunityLicenseInfo = {
	name:"name",
	state:"state",
	state_message:"state_message",
	days_to_expiration:"days_to_expiration",
	license_type:"license_type",
	expiration_date:"expiration_date"
};

DO.AttunityLicenseInfo_Validation = {
	days_to_expiration: {
		number: true
	}
};


DO.AttunityLicenseInfo_Defaults = {
	name:"",
	state:DO.GlobalLicenseState.LICENSE_DOES_NOT_EXIST,
	state_message:"",
	days_to_expiration:0,
	license_type:"",
	expiration_date:""
};

DO.AttunityLicenseInfo_Types = {
	state:"GlobalLicenseState"
};


DO.ListAttunityLicenseInfo = {
	licenses:"licenses"
};

DO.ListAttunityLicenseInfo_Validation = {
};


DO.ListAttunityLicenseInfo_Defaults = {
	licenses:[]
};

DO.ListAttunityLicenseInfo_Types = {
	licenses:"AttunityLicenseInfo"
};


DO.AttunityLicenseDtoInfo = {
	license_dto:"license_dto",
	license_info:"license_info"
};

DO.AttunityLicenseDtoInfo_Validation = {
};


DO.AttunityLicenseDtoInfo_Defaults = {
	license_dto:null,
	license_info:null
};

DO.AttunityLicenseDtoInfo_Types = {
	license_dto:"AttunityLicenseDto",
	license_info:"AttunityLicenseInfo"
};


DO.ListAttunityLicenseDtoInfo = {
	licenses:"licenses"
};

DO.ListAttunityLicenseDtoInfo_Validation = {
};


DO.ListAttunityLicenseDtoInfo_Defaults = {
	licenses:[]
};

DO.ListAttunityLicenseDtoInfo_Types = {
	licenses:"AttunityLicenseDtoInfo"
};


DO.LicenseValidateLicenseParams = {
	license_name:"license_name"
};

DO.LicenseValidateLicenseParams_Validation = {
	license_name: {
		required: true
	}
};


DO.LicenseValidateLicenseParams_Defaults = {
	license_name:""
};

DO.LicenseValidateLicenseParams_Types = {
};


DO.LicensesListLicensesInfoParams = {
};

DO.LicensesListLicensesInfoParams_Validation = {
};


DO.LicensesListLicensesInfoParams_Defaults = {
};

DO.LicensesListLicensesInfoParams_Types = {
};


DO.LicensesListLicensesParams = {
};

DO.LicensesListLicensesParams_Validation = {
};


DO.LicensesListLicensesParams_Defaults = {
};

DO.LicensesListLicensesParams_Types = {
};


DO.LicenseRegisterLicenseParams = {
	name:"name"
};

DO.LicenseRegisterLicenseParams_Validation = {
	name: {
		required: true
	}
};


DO.LicenseRegisterLicenseParams_Defaults = {
	name:"license"
};

DO.LicenseRegisterLicenseParams_Types = {
};


DO.LicensesRegisterLicensesParams = {
};

DO.LicensesRegisterLicensesParams_Validation = {
};


DO.LicensesRegisterLicensesParams_Defaults = {
};

DO.LicensesRegisterLicensesParams_Types = {
};


DO.LicenseGetLicenseParams = {
	name:"name"
};

DO.LicenseGetLicenseParams_Validation = {
	name: {
		required: true
	}
};


DO.LicenseGetLicenseParams_Defaults = {
	name:""
};

DO.LicenseGetLicenseParams_Types = {
};


DO.LicenseDeleteLicenseParams = {
	name:"name"
};

DO.LicenseDeleteLicenseParams_Validation = {
	name: {
		required: true
	}
};


DO.LicenseDeleteLicenseParams_Defaults = {
	name:""
};

DO.LicenseDeleteLicenseParams_Types = {
};


DO.AppHostConfigurationDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	host_address:"host_address",
	host_http_port:"host_http_port",
	host_https_port:"host_https_port",
	host_root:"host_root",
	disable_http_cache_control:"disable_http_cache_control",
	max_receive_message_length:"max_receive_message_length",
	session_timeout_sec:"session_timeout_sec",
	allow_unsafe_protocols:"allow_unsafe_protocols",
	use_kerberos_authentication:"use_kerberos_authentication",
	test_https:"test_https",
	min_size_for_compression:"min_size_for_compression",
	max_size_for_compression:"max_size_for_compression",
	max_concurrent_calls:"max_concurrent_calls",
	max_concurrent_sessions:"max_concurrent_sessions",
	auth_method:"auth_method",
	default_ad_domain:"default_ad_domain",
	user_idle_timeout_sec:"user_idle_timeout_sec",
	idp_url:"idp_url",
	idp_issuer:"idp_issuer",
	idp_certificate:"idp_certificate",
	idp_user_name_attribute:"idp_user_name_attribute",
	idp_user_display_name_attribute:"idp_user_display_name_attribute",
	idp_user_groups_attribute:"idp_user_groups_attribute",
	static_http_headers:"static_http_headers",
	rest_http_headers:"rest_http_headers",
	ad_default_container:"ad_default_container"
};

DO.AppHostConfigurationDto_Validation = {
	version: {
		number: true
	},
	host_http_port: {
		number: true
	},
	host_https_port: {
		number: true
	},
	max_receive_message_length: {
		number: true
	},
	session_timeout_sec: {
		number: true
	},
	min_size_for_compression: {
		number: true
	},
	max_size_for_compression: {
		number: true
	},
	max_concurrent_calls: {
		number: true
	},
	max_concurrent_sessions: {
		number: true
	},
	user_idle_timeout_sec: {
		number: true
	}
};


DO.AppHostConfigurationDto_Defaults = {
	$type:"AppHostConfigurationDto",
	metadata:null,
	name:"host_configuration",
	version:0,
	host_address:"",
	host_http_port:80,
	host_https_port:443,
	host_root:"attunity",
	disable_http_cache_control:false,
	max_receive_message_length:104857600,
	session_timeout_sec:300,
	allow_unsafe_protocols:false,
	use_kerberos_authentication:false,
	test_https:true,
	min_size_for_compression:0,
	max_size_for_compression:1572864,
	max_concurrent_calls:128,
	max_concurrent_sessions:800,
	auth_method:DO.AuthenticationMethod.SSO,
	default_ad_domain:"",
	user_idle_timeout_sec:300,
	idp_url:"",
	idp_issuer:"",
	idp_certificate:"",
	idp_user_name_attribute:"username",
	idp_user_display_name_attribute:"displayname",
	idp_user_groups_attribute:"groups",
	static_http_headers:[],
	rest_http_headers:[],
	ad_default_container:""
};

DO.AppHostConfigurationDto_Types = {
	metadata:"DTObjectMetaData",
	auth_method:"AuthenticationMethod"
};


DO.MailServerSettings = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	host:"host",
	port:"port",
	username:"username",
	password:"password",
	use_ssl:"use_ssl",
	ssl_verify_peer:"ssl_verify_peer",
	ssl_verify_host:"ssl_verify_host",
	default_recipients:"default_recipients",
	sender_address:"sender_address"
};

DO.MailServerSettings_Validation = {
	version: {
		number: true
	},
	port: {
		number: true
	}
};


DO.MailServerSettings_Defaults = {
	$type:"MailServerSettings",
	metadata:null,
	name:"MailServerSettings",
	version:0,
	host:"",
	port:25,
	username:"",
	password:"",
	use_ssl:false,
	ssl_verify_peer:false,
	ssl_verify_host:false,
	default_recipients:[],
	sender_address:"noreply@qlik.com"
};

DO.MailServerSettings_Types = {
	metadata:"DTObjectMetaData"
};


DO.EnvironmentApiRef = {
};

DO.EnvironmentApiRef_Validation = {
};


DO.EnvironmentApiRef_Defaults = {
};

DO.EnvironmentApiRef_Types = {
};


DO.GetSystemInfoParams = {
};

DO.GetSystemInfoParams_Validation = {
};


DO.GetSystemInfoParams_Defaults = {
};

DO.GetSystemInfoParams_Types = {
};


DO.GetSystemInfoResp = {
	full_machine_name:"full_machine_name"
};

DO.GetSystemInfoResp_Validation = {
};


DO.GetSystemInfoResp_Defaults = {
	full_machine_name:""
};

DO.GetSystemInfoResp_Types = {
};


DO.UserInfoDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	app:"app",
	data:"data"
};

DO.UserInfoDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	}
};


DO.UserInfoDto_Defaults = {
	$type:"UserInfoDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	app:DO.ApplicationTypes.WEB,
	data:""
};

DO.UserInfoDto_Types = {
	metadata:"DTObjectMetaData",
	app:"ApplicationTypes"
};


DO.UserInfoDtoPP = {
	user_name:"user_name",
	product:"product",
	app:"app"
};

DO.UserInfoDtoPP_Validation = {
};


DO.UserInfoDtoPP_Defaults = {
	user_name:"",
	product:"",
	app:DO.ApplicationTypes.WEB
};

DO.UserInfoDtoPP_Types = {
	app:"ApplicationTypes"
};


DO.UserInfoGetUserInfoParams = {
	app:"app"
};

DO.UserInfoGetUserInfoParams_Validation = {
};


DO.UserInfoGetUserInfoParams_Defaults = {
	app:DO.ApplicationTypes.WEB
};

DO.UserInfoGetUserInfoParams_Types = {
	app:"ApplicationTypes"
};


DO.UserInfoPutUserInfoParams = {
};

DO.UserInfoPutUserInfoParams_Validation = {
};


DO.UserInfoPutUserInfoParams_Defaults = {
};

DO.UserInfoPutUserInfoParams_Types = {
};


DO.UserInfoDeleteUserInfoParams = {
	app:"app"
};

DO.UserInfoDeleteUserInfoParams_Validation = {
};


DO.UserInfoDeleteUserInfoParams_Defaults = {
	app:DO.ApplicationTypes.WEB
};

DO.UserInfoDeleteUserInfoParams_Types = {
	app:"ApplicationTypes"
};


DO.UserRef = {
	name:"name",
	is_denied:"is_denied"
};

DO.UserRef_Validation = {
};


DO.UserRef_Defaults = {
	name:"",
	is_denied:false
};

DO.UserRef_Types = {
};


DO.GroupRef = {
	name:"name",
	is_denied:"is_denied"
};

DO.GroupRef_Validation = {
};


DO.GroupRef_Defaults = {
	name:"",
	is_denied:false
};

DO.GroupRef_Types = {
};


DO.RoleDef = {
	users:"users",
	groups:"groups"
};

DO.RoleDef_Validation = {
};


DO.RoleDef_Defaults = {
	users:[],
	groups:[]
};

DO.RoleDef_Types = {
	users:"UserRef",
	groups:"GroupRef"
};


DO.AuthorizationAclDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	admin_role:"admin_role",
	designer_role:"designer_role",
	operator_role:"operator_role",
	viewer_role:"viewer_role",
	none_role:"none_role",
	disable_inheritance:"disable_inheritance",
	resource_name:"resource_name"
};

DO.AuthorizationAclDto_Validation = {
	version: {
		number: true
	}
};


DO.AuthorizationAclDto_Defaults = {
	$type:"AuthorizationAclDto",
	metadata:null,
	name:"::",
	version:0,
	admin_role:null,
	designer_role:null,
	operator_role:null,
	viewer_role:null,
	none_role:null,
	disable_inheritance:false,
	resource_name:""
};

DO.AuthorizationAclDto_Types = {
	metadata:"DTObjectMetaData",
	admin_role:"RoleDef",
	designer_role:"RoleDef",
	operator_role:"RoleDef",
	viewer_role:"RoleDef",
	none_role:"RoleDef"
};


DO.RequiredUserRoleTypeOverridesDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	overrides:"overrides"
};

DO.RequiredUserRoleTypeOverridesDto_Validation = {
	version: {
		number: true
	}
};


DO.RequiredUserRoleTypeOverridesDto_Defaults = {
	$type:"RequiredUserRoleTypeOverridesDto",
	metadata:null,
	name:"",
	version:0,
	overrides:[]
};

DO.RequiredUserRoleTypeOverridesDto_Types = {
	metadata:"DTObjectMetaData",
	overrides:"RequiredUserRoleTypeOverride"
};


DO.SuperUserDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	user_name:"user_name",
	signing:"signing",
	expiration:"expiration",
	comment:"comment"
};

DO.SuperUserDto_Validation = {
	version: {
		number: true
	},
	expiration: {
		number: true
	}
};


DO.SuperUserDto_Defaults = {
	$type:"SuperUserDto",
	metadata:null,
	name:"",
	version:0,
	user_name:"",
	signing:"",
	expiration:0,
	comment:""
};

DO.SuperUserDto_Types = {
	metadata:"DTObjectMetaData"
};


DO.RequiredUserRoleTypeOverride = {
	method_name:"method_name",
	required_role_type:"required_role_type"
};

DO.RequiredUserRoleTypeOverride_Validation = {
};


DO.RequiredUserRoleTypeOverride_Defaults = {
	method_name:"",
	required_role_type:DO.AuthUserRoleType.ADMIN
};

DO.RequiredUserRoleTypeOverride_Types = {
	required_role_type:"AuthUserRoleType"
};


DO.AuthorizationPutAclParams = {
};

DO.AuthorizationPutAclParams_Validation = {
};


DO.AuthorizationPutAclParams_Defaults = {
};

DO.AuthorizationPutAclParams_Types = {
};


DO.AuthorizationGetAclParams = {
	based_on_parent:"based_on_parent"
};

DO.AuthorizationGetAclParams_Validation = {
};


DO.AuthorizationGetAclParams_Defaults = {
	based_on_parent:false
};

DO.AuthorizationGetAclParams_Types = {
};


DO.AuthorizationGetAclResp = {
	acl:"acl",
	inherited_acl:"inherited_acl"
};

DO.AuthorizationGetAclResp_Validation = {
	acl: {
		required: true
	},
	inherited_acl: {
		required: true
	}
};


DO.AuthorizationGetAclResp_Defaults = {
	acl:{},
	inherited_acl:{}
};

DO.AuthorizationGetAclResp_Types = {
	acl:"AuthorizationAclDto",
	inherited_acl:"AuthorizationAclDto"
};


DO.AuthorizationDeleteAclParams = {
};

DO.AuthorizationDeleteAclParams_Validation = {
};


DO.AuthorizationDeleteAclParams_Defaults = {
};

DO.AuthorizationDeleteAclParams_Types = {
};


DO.AuthorizationGetUrlAuthorizationParams = {
	readable_url:"readable_url"
};

DO.AuthorizationGetUrlAuthorizationParams_Validation = {
	readable_url: {
		required: true
	}
};


DO.AuthorizationGetUrlAuthorizationParams_Defaults = {
	readable_url:""
};

DO.AuthorizationGetUrlAuthorizationParams_Types = {
};


DO.AuthorizationGetUrlAuthorizationResp = {
	role:"role"
};

DO.AuthorizationGetUrlAuthorizationResp_Validation = {
	role: {
		required: true
	}
};


DO.AuthorizationGetUrlAuthorizationResp_Defaults = {
	role:DO.AuthUserRoleType.NONE
};

DO.AuthorizationGetUrlAuthorizationResp_Types = {
	role:"AuthUserRoleType"
};


DO.AuthorizationGetUserRoleOverridesParams = {
};

DO.AuthorizationGetUserRoleOverridesParams_Validation = {
};


DO.AuthorizationGetUserRoleOverridesParams_Defaults = {
};

DO.AuthorizationGetUserRoleOverridesParams_Types = {
};


DO.AuthorizationGetUserRoleOverridesResp = {
	overrides:"overrides"
};

DO.AuthorizationGetUserRoleOverridesResp_Validation = {
};


DO.AuthorizationGetUserRoleOverridesResp_Defaults = {
	overrides:[]
};

DO.AuthorizationGetUserRoleOverridesResp_Types = {
	overrides:"RequiredUserRoleTypeOverride"
};


DO.AuthorizationGetEffectiveRoleParams = {
};

DO.AuthorizationGetEffectiveRoleParams_Validation = {
};


DO.AuthorizationGetEffectiveRoleParams_Defaults = {
};

DO.AuthorizationGetEffectiveRoleParams_Types = {
};


DO.AuthorizationGetEffectiveRoleReq = {
	user_name:"user_name",
	acl:"acl"
};

DO.AuthorizationGetEffectiveRoleReq_Validation = {
	user_name: {
		required: true
	},
	acl: {
		required: true
	}
};


DO.AuthorizationGetEffectiveRoleReq_Defaults = {
	user_name:"",
	acl:{}
};

DO.AuthorizationGetEffectiveRoleReq_Types = {
	acl:"AuthorizationAclDto"
};


DO.AuthorizationGetEffectiveRoleResp = {
	role:"role"
};

DO.AuthorizationGetEffectiveRoleResp_Validation = {
	role: {
		required: true
	}
};


DO.AuthorizationGetEffectiveRoleResp_Defaults = {
	role:DO.AuthUserRoleType.NONE
};

DO.AuthorizationGetEffectiveRoleResp_Types = {
	role:"AuthUserRoleType"
};


DO.PostgreSQLConfigurationDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	dbHost:"dbHost",
	dbPort:"dbPort",
	dbName:"dbName",
	dbUserName:"dbUserName",
	dbPassword:"dbPassword",
	dbType:"dbType",
	maxConnections:"maxConnections",
	connectionProps:"connectionProps"
};

DO.PostgreSQLConfigurationDto_Validation = {
	metadata: {
	},
	name: {
	},
	version: {
		number: true
	},
	dbHost: {
		required: true
	},
	dbPort: {
		required: true,
		number: true,
		max: 65535,
		min: 1
	},
	dbName: {
		required: true,
		pattern: '^[a-zA-Z0-9]+[a-zA-Z0-9_ .-]*$',
		maxLength: 64,
		required: true
	},
	dbUserName: {
		required: true
	},
	dbPassword: {
		required: true
	},
	dbType: {
		required: true
	},
	maxConnections: {
		required: true,
		number: true
	},
	connectionProps: {
	}
};


DO.PostgreSQLConfigurationDto_Defaults = {
	$type:"PostgreSQLConfigurationDto",
	metadata:null,
	name:"",
	version:0,
	dbHost:"",
	dbPort:5432,
	dbName:"",
	dbUserName:"",
	dbPassword:"",
	dbType:"",
	maxConnections:0,
	connectionProps:""
};

DO.PostgreSQLConfigurationDto_Types = {
	metadata:"DTObjectMetaData"
};


DO.HostConfigurationDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	host_address:"host_address",
	host_http_port:"host_http_port",
	host_https_port:"host_https_port",
	host_root:"host_root",
	disable_http_cache_control:"disable_http_cache_control",
	max_receive_message_length:"max_receive_message_length",
	session_timeout_sec:"session_timeout_sec",
	allow_unsafe_protocols:"allow_unsafe_protocols",
	use_kerberos_authentication:"use_kerberos_authentication",
	test_https:"test_https",
	min_size_for_compression:"min_size_for_compression",
	max_size_for_compression:"max_size_for_compression",
	max_concurrent_calls:"max_concurrent_calls",
	max_concurrent_sessions:"max_concurrent_sessions",
	auth_method:"auth_method",
	default_ad_domain:"default_ad_domain",
	user_idle_timeout_sec:"user_idle_timeout_sec",
	idp_url:"idp_url",
	idp_issuer:"idp_issuer",
	idp_certificate:"idp_certificate",
	idp_user_name_attribute:"idp_user_name_attribute",
	idp_user_display_name_attribute:"idp_user_display_name_attribute",
	idp_user_groups_attribute:"idp_user_groups_attribute",
	static_http_headers:"static_http_headers",
	rest_http_headers:"rest_http_headers",
	ad_default_container:"ad_default_container"
};

DO.HostConfigurationDto_Validation = {
	version: {
		number: true
	},
	host_http_port: {
		number: true
	},
	host_https_port: {
		number: true
	},
	max_receive_message_length: {
		number: true
	},
	session_timeout_sec: {
		number: true
	},
	min_size_for_compression: {
		number: true
	},
	max_size_for_compression: {
		number: true
	},
	max_concurrent_calls: {
		number: true
	},
	max_concurrent_sessions: {
		number: true
	},
	user_idle_timeout_sec: {
		number: true
	}
};


DO.HostConfigurationDto_Defaults = {
	$type:"HostConfigurationDto",
	metadata:null,
	name:"",
	version:0,
	host_address:"",
	host_http_port:80,
	host_https_port:443,
	host_root:"attunity",
	disable_http_cache_control:false,
	max_receive_message_length:104857600,
	session_timeout_sec:300,
	allow_unsafe_protocols:false,
	use_kerberos_authentication:false,
	test_https:true,
	min_size_for_compression:0,
	max_size_for_compression:1572864,
	max_concurrent_calls:128,
	max_concurrent_sessions:800,
	auth_method:DO.AuthenticationMethod.SSO,
	default_ad_domain:"",
	user_idle_timeout_sec:300,
	idp_url:"",
	idp_issuer:"",
	idp_certificate:"",
	idp_user_name_attribute:"username",
	idp_user_display_name_attribute:"displayname",
	idp_user_groups_attribute:"groups",
	static_http_headers:[],
	rest_http_headers:[],
	ad_default_container:""
};

DO.HostConfigurationDto_Types = {
	metadata:"DTObjectMetaData",
	auth_method:"AuthenticationMethod"
};


DO.UserInfo = {
	name:"name",
	full_name:"full_name",
	email:"email",
	email_source:"email_source"
};

DO.UserInfo_Validation = {
};


DO.UserInfo_Defaults = {
	name:"",
	full_name:"",
	email:"",
	email_source:DO.UserInfoSource.UNSPECIFIED
};

DO.UserInfo_Types = {
	email_source:"UserInfoSource"
};


DO.PersistentSession = {
	session:"session",
	url:"url",
	xsrfToken:"xsrfToken"
};

DO.PersistentSession_Validation = {
};


DO.PersistentSession_Defaults = {
	session:"",
	url:"",
	xsrfToken:""
};

DO.PersistentSession_Types = {
};


DO.RuleDto = {
	member_name:"member_name",
	operator:"operator",
	rules:"rules",
	inputs:"inputs",
	hysteresis:"hysteresis"
};

DO.RuleDto_Validation = {
	hysteresis: {
		number: true
	}
};


DO.RuleDto_Defaults = {
	member_name:"",
	operator:DO.RuleOperators.UNSPECIFIED,
	rules:[],
	inputs:[],
	hysteresis:0
};

DO.RuleDto_Types = {
	operator:"RuleOperators",
	rules:"RuleDto"
};


DO.ApiErrorResponse = {
	error_code:"error_code",
	error_message:"error_message"
};

DO.ApiErrorResponse_Validation = {
};


DO.ApiErrorResponse_Defaults = {
	error_code:"",
	error_message:""
};

DO.ApiErrorResponse_Types = {
};


DO.DataTreeNodeDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	parent_path:"parent_path",
	raw_data:"raw_data"
};

DO.DataTreeNodeDto_Validation = {
	version: {
		number: true
	}
};


DO.DataTreeNodeDto_Defaults = {
	$type:"DataTreeNodeDto",
	metadata:null,
	name:"",
	version:0,
	parent_path:"",
	raw_data:null
};

DO.DataTreeNodeDto_Types = {
	metadata:"DTObjectMetaData",
	raw_data:"DTObject"
};


DO.DoBatchParams = {
};

DO.DoBatchParams_Validation = {
};


DO.DoBatchParams_Defaults = {
};

DO.DoBatchParams_Types = {
};


DO.BatchReqItem = {
	url:"url",
	method:"method",
	payload:"payload",
	change_time:"change_time"
};

DO.BatchReqItem_Validation = {
	url: {
		required: true
	},
	change_time: {
		number: true
	}
};


DO.BatchReqItem_Defaults = {
	url:"",
	method:"GET",
	payload:{},
	change_time:0
};

DO.BatchReqItem_Types = {
};


DO.KeyValueBatchReqItem = {
	key:"key",
	value:"value"
};

DO.KeyValueBatchReqItem_Validation = {
	key: {
		required: true
	},
	value: {
		required: true
	}
};


DO.KeyValueBatchReqItem_Defaults = {
	key:"",
	value:{}
};

DO.KeyValueBatchReqItem_Types = {
	value:"BatchReqItem"
};


DO.BatchReq = {
	batch_items:"batch_items"
};

DO.BatchReq_Validation = {
};


DO.BatchReq_Defaults = {
	batch_items:{}
};

DO.BatchReq_Types = {
	batch_items:"KeyValueBatchReqItem"
};


DO.BatchRespItem = {
	payload:"payload",
	change_time:"change_time",
	status:"status",
	message:"message",
	detailed_message:"detailed_message"
};

DO.BatchRespItem_Validation = {
	payload: {
		required: true
	},
	change_time: {
		number: true
	},
	status: {
		number: true
	}
};


DO.BatchRespItem_Defaults = {
	payload:{},
	change_time:0,
	status:0,
	message:"",
	detailed_message:""
};

DO.BatchRespItem_Types = {
};


DO.KeyValueBatchRespItem = {
	key:"key",
	value:"value"
};

DO.KeyValueBatchRespItem_Validation = {
	key: {
		required: true
	},
	value: {
		required: true
	}
};


DO.KeyValueBatchRespItem_Defaults = {
	key:"",
	value:{}
};

DO.KeyValueBatchRespItem_Types = {
	value:"BatchRespItem"
};


DO.BatchResp = {
	batch_items:"batch_items"
};

DO.BatchResp_Validation = {
};


DO.BatchResp_Defaults = {
	batch_items:{}
};

DO.BatchResp_Types = {
	batch_items:"KeyValueBatchRespItem"
};


DO.LogoutParams = {
};

DO.LogoutParams_Validation = {
};


DO.LogoutParams_Defaults = {
};

DO.LogoutParams_Types = {
};


DO.LoginParams = {
};

DO.LoginParams_Validation = {
};


DO.LoginParams_Defaults = {
};

DO.LoginParams_Types = {
};


DO.FormLoginParams = {
};

DO.FormLoginParams_Validation = {
};


DO.FormLoginParams_Defaults = {
};

DO.FormLoginParams_Types = {
};


DO.FormLoginReq = {
	username:"username",
	password:"password"
};

DO.FormLoginReq_Validation = {
};


DO.FormLoginReq_Defaults = {
	username:"",
	password:""
};

DO.FormLoginReq_Types = {
};


DO.IDPRedirectParams = {
};

DO.IDPRedirectParams_Validation = {
};


DO.IDPRedirectParams_Defaults = {
};

DO.IDPRedirectParams_Types = {
};


DO.SAMLLoginParams = {
};

DO.SAMLLoginParams_Validation = {
};


DO.SAMLLoginParams_Defaults = {
};

DO.SAMLLoginParams_Types = {
};


DO.ServiceLoginParams = {
};

DO.ServiceLoginParams_Validation = {
};


DO.ServiceLoginParams_Defaults = {
};

DO.ServiceLoginParams_Types = {
};


DO.ServiceLoginReq = {
	service_name:"service_name",
	security_token:"security_token"
};

DO.ServiceLoginReq_Validation = {
};


DO.ServiceLoginReq_Defaults = {
	service_name:"",
	security_token:""
};

DO.ServiceLoginReq_Types = {
};


DO.dbprop = {
	dbid:"dbid",
	type:"type",
	code_name:"code_name",
	code_path:"code_path",
	title:"title",
	odbc:"odbc",
	connect_info:"connect_info",
	info:"info",
	syntaxes:"syntaxes",
	registration:"registration",
	configurations:"configurations",
	transport:"transport",
	synonyms:"synonyms",
	syntax:"syntax",
	change_password_invalid_users:"change_password_invalid_users",
	based_on:"based_on",
	auto_ui:"auto_ui",
	get_based_on_fields:"get_based_on_fields"
};

DO.dbprop_Validation = {
	dbid: {
		required: true,
		number: true
	},
	type: {
		required: true
	}
};


DO.dbprop_Defaults = {
	dbid:0,
	type:"",
	code_name:"",
	code_path:"",
	title:"",
	odbc:null,
	connect_info:null,
	info:null,
	syntaxes:[],
	registration:null,
	configurations:[],
	transport:null,
	synonyms:[],
	syntax:"",
	change_password_invalid_users:[],
	based_on:"",
	auto_ui:false,
	get_based_on_fields:true
};

DO.dbprop_Types = {
	odbc:"odbc",
	connect_info:"connect_info",
	info:"provider_syntax",
	syntaxes:"provider_syntax",
	registration:"registration_info",
	configurations:"configuration",
	transport:"cifta_settings",
	synonyms:"synonym"
};


DO.porp_object = {
	name:"name",
	based_on:"based_on",
	items:"items",
	overrides:"overrides"
};

DO.porp_object_Validation = {
};


DO.porp_object_Defaults = {
	name:"",
	based_on:"",
	items:[],
	overrides:[]
};

DO.porp_object_Types = {
	items:"connect_item",
	overrides:"connect_item_override"
};


DO.ar_props = {
	dbprops:"dbprops",
	prop_objects:"prop_objects"
};

DO.ar_props_Validation = {
};


DO.ar_props_Defaults = {
	dbprops:[],
	prop_objects:[]
};

DO.ar_props_Types = {
	dbprops:"dbprop",
	prop_objects:"porp_object"
};


DO.ar_props_wraped = {
	name:"name",
	object:"object"
};

DO.ar_props_wraped_Validation = {
};


DO.ar_props_wraped_Defaults = {
	name:"",
	object:null
};

DO.ar_props_wraped_Types = {
	object:"ar_props"
};


DO.synonym = {
	old_name:"old_name",
	new_name:"new_name"
};

DO.synonym_Validation = {
	old_name: {
		required: true
	},
	new_name: {
		required: true
	}
};


DO.synonym_Defaults = {
	old_name:"",
	new_name:""
};

DO.synonym_Types = {
};


DO.feature_flag = {
	name:"name",
	deprecated:"deprecated",
	default_array_values:"default_array_values",
	description:"description"
};

DO.feature_flag_Validation = {
};


DO.feature_flag_Defaults = {
	name:"",
	deprecated:false,
	default_array_values:[],
	description:""
};

DO.feature_flag_Types = {
};


DO.registration_info = {
	license_tokens:"license_tokens",
	platforms:"platforms",
	library_name:"library_name",
	library_entry_point:"library_entry_point",
	has_source_bulk:"has_source_bulk",
	has_source_cdc:"has_source_cdc",
	has_target_bulk:"has_target_bulk",
	has_target_cdc:"has_target_cdc",
	has_lob_partial_support:"has_lob_partial_support",
	has_lob_full_support:"has_lob_full_support",
	has_deferred_event_constructor:"has_deferred_event_constructor",
	use_source_pk:"use_source_pk",
	supports_full_load_resume:"supports_full_load_resume",
	supports_updates_deletes:"supports_updates_deletes",
	supports_schema:"supports_schema",
	need_fake_begin:"need_fake_begin",
	has_express_source:"has_express_source",
	has_express_target:"has_express_target",
	db_group:"db_group",
	supports_source_bidi:"supports_source_bidi",
	supports_target_bidi:"supports_target_bidi",
	supports_views:"supports_views",
	supports_inline_limited_lob:"supports_inline_limited_lob",
	supports_source_recovery:"supports_source_recovery",
	supports_target_recovery_table:"supports_target_recovery_table",
	supports_pk:"supports_pk",
	do_filter_internaly:"do_filter_internaly",
	supports_cdb:"supports_cdb",
	supports_codepage_override:"supports_codepage_override",
	supports_ddl_history:"supports_ddl_history",
	supports_ftm:"supports_ftm",
	supports_source_table_tablespace:"supports_source_table_tablespace",
	supports_target_table_tablespace:"supports_target_table_tablespace",
	supports_archive_table:"supports_archive_table",
	need_wait_for_target_start_load_handling:"need_wait_for_target_start_load_handling",
	supports_source_parallel_unload:"supports_source_parallel_unload",
	supports_source_ranges_unload:"supports_source_ranges_unload",
	supports_source_named_partitions_unload:"supports_source_named_partitions_unload",
	supports_source_auto_partitions_unload:"supports_source_auto_partitions_unload",
	supports_target_parallel_load:"supports_target_parallel_load",
	supports_target_index_tablespace:"supports_target_index_tablespace",
	supports_source_index_tablespace:"supports_source_index_tablespace",
	supports_column_truncation_checking:"supports_column_truncation_checking",
	supports_lob_settings_per_table:"supports_lob_settings_per_table",
	supports_target_batch_apply_preserve_txn:"supports_target_batch_apply_preserve_txn",
	supports_source_sub_partitions_unload:"supports_source_sub_partitions_unload",
	supports_source_migration:"supports_source_migration",
	supports_target_migration:"supports_target_migration",
	support_start_from_position:"support_start_from_position",
	has_lob_full_support_optimization:"has_lob_full_support_optimization",
	support_multiple_tables_unload:"support_multiple_tables_unload",
	support_multiple_tables_load:"support_multiple_tables_load",
	supports_parallel_bulk_apply:"supports_parallel_bulk_apply",
	supports_save_changes:"supports_save_changes",
	supports_transactional:"supports_transactional",
	supports_bulk_apply:"supports_bulk_apply",
	supports_custom_message_format:"supports_custom_message_format",
	source_logs_persistent:"source_logs_persistent",
	async_endpoint:"async_endpoint",
	target_provides_metadata:"target_provides_metadata",
	warn_on_missing_begin_transaction:"warn_on_missing_begin_transaction",
	column_expression_validation:"column_expression_validation",
	check_all_columns_exist_on_filter:"check_all_columns_exist_on_filter",
	supports_start_from_timestamp:"supports_start_from_timestamp",
	has_schema:"has_schema",
	supports_bulk_merge:"supports_bulk_merge",
	cluster_by_pk:"cluster_by_pk",
	cdp_low_latency_partition:"cdp_low_latency_partition",
	supports_target_artifacts_cleanup:"supports_target_artifacts_cleanup",
	target_artifacts_cleanup_batch:"target_artifacts_cleanup_batch",
	supports_cdp_fl_end_record:"supports_cdp_fl_end_record",
	custom_record_headers:"custom_record_headers",
	feature_flags:"feature_flags",
	supports_source_unload_sorting_by_pk:"supports_source_unload_sorting_by_pk",
	bidi_change_equal_timestamp:"bidi_change_equal_timestamp",
	has_get_db_qri_callback:"has_get_db_qri_callback",
	db_qri_pattern:"db_qri_pattern",
	table_qri_pattern:"table_qri_pattern"
};

DO.registration_info_Validation = {
	platforms: {
		number: true
	},
	target_artifacts_cleanup_batch: {
		number: true
	}
};


DO.registration_info_Defaults = {
	license_tokens:[],
	platforms:3,
	library_name:"",
	library_entry_point:"",
	has_source_bulk:false,
	has_source_cdc:false,
	has_target_bulk:false,
	has_target_cdc:false,
	has_lob_partial_support:false,
	has_lob_full_support:false,
	has_deferred_event_constructor:false,
	use_source_pk:false,
	supports_full_load_resume:true,
	supports_updates_deletes:true,
	supports_schema:true,
	need_fake_begin:false,
	has_express_source:false,
	has_express_target:false,
	db_group:DO.db_group.DB_TYPE,
	supports_source_bidi:false,
	supports_target_bidi:false,
	supports_views:DO.view_support_options.NONE,
	supports_inline_limited_lob:false,
	supports_source_recovery:false,
	supports_target_recovery_table:false,
	supports_pk:true,
	do_filter_internaly:false,
	supports_cdb:false,
	supports_codepage_override:false,
	supports_ddl_history:false,
	supports_ftm:false,
	supports_source_table_tablespace:false,
	supports_target_table_tablespace:false,
	supports_archive_table:false,
	need_wait_for_target_start_load_handling:false,
	supports_source_parallel_unload:false,
	supports_source_ranges_unload:false,
	supports_source_named_partitions_unload:false,
	supports_source_auto_partitions_unload:false,
	supports_target_parallel_load:false,
	supports_target_index_tablespace:false,
	supports_source_index_tablespace:false,
	supports_column_truncation_checking:false,
	supports_lob_settings_per_table:false,
	supports_target_batch_apply_preserve_txn:false,
	supports_source_sub_partitions_unload:false,
	supports_source_migration:false,
	supports_target_migration:false,
	support_start_from_position:true,
	has_lob_full_support_optimization:false,
	support_multiple_tables_unload:false,
	support_multiple_tables_load:false,
	supports_parallel_bulk_apply:false,
	supports_save_changes:true,
	supports_transactional:true,
	supports_bulk_apply:true,
	supports_custom_message_format:false,
	source_logs_persistent:false,
	async_endpoint:false,
	target_provides_metadata:true,
	warn_on_missing_begin_transaction:true,
	column_expression_validation:DO.column_expression_validation.NONE,
	check_all_columns_exist_on_filter:true,
	supports_start_from_timestamp:true,
	has_schema:true,
	supports_bulk_merge:false,
	cluster_by_pk:false,
	cdp_low_latency_partition:false,
	supports_target_artifacts_cleanup:false,
	target_artifacts_cleanup_batch:1000,
	supports_cdp_fl_end_record:false,
	custom_record_headers:[],
	feature_flags:[],
	supports_source_unload_sorting_by_pk:false,
	bidi_change_equal_timestamp:false,
	has_get_db_qri_callback:false,
	db_qri_pattern:"",
	table_qri_pattern:""
};

DO.registration_info_Types = {
	db_group:"db_group",
	supports_views:"view_support_options",
	column_expression_validation:"column_expression_validation",
	custom_record_headers:"custom_record_header",
	feature_flags:"feature_flag"
};


DO.custom_record_header = {
	name:"name",
	type:"type",
	description:"description"
};

DO.custom_record_header_Validation = {
	name: {
		required: true
	}
};


DO.custom_record_header_Defaults = {
	name:"",
	type:DO.ar_data_type_options.KAR_DATA_TYPE_UNSPECIFIED,
	description:""
};

DO.custom_record_header_Types = {
	type:"ar_data_type_options"
};


DO.configuration_item = {
	key:"key",
	value:"value"
};

DO.configuration_item_Validation = {
	key: {
		required: true
	}
};


DO.configuration_item_Defaults = {
	key:"",
	value:""
};

DO.configuration_item_Types = {
};


DO.configuration = {
	name:"name",
	based_on:"based_on",
	hidden:"hidden",
	items:"items",
	sub_configs:"sub_configs"
};

DO.configuration_Validation = {
};


DO.configuration_Defaults = {
	name:"default",
	based_on:"",
	hidden:false,
	items:[],
	sub_configs:[]
};

DO.configuration_Types = {
	items:"configuration_item",
	sub_configs:"configuration"
};


DO.odbc = {
	driverNames:"driverNames",
	use_sql_columns:"use_sql_columns"
};

DO.odbc_Validation = {
};


DO.odbc_Defaults = {
	driverNames:[],
	use_sql_columns:true
};

DO.odbc_Types = {
};


DO.connect_enumval = {
	name:"name",
	value:"value",
	display_value:"display_value",
	version:"version",
	visible_exp:"visible_exp",
	feature_flag:"feature_flag"
};

DO.connect_enumval_Validation = {
	name: {
		required: true
	},
	value: {
		required: true,
		number: true
	}
};


DO.connect_enumval_Defaults = {
	name:"",
	value:0,
	display_value:"",
	version:"",
	visible_exp:"",
	feature_flag:""
};

DO.connect_enumval_Types = {
};


DO.layered_settings_msg = {
	exposed_on:"exposed_on"
};

DO.layered_settings_msg_Validation = {
};


DO.layered_settings_msg_Defaults = {
	exposed_on:""
};

DO.layered_settings_msg_Types = {
};


DO.connect_item = {
	name:"name",
	type:"type",
	item_id:"item_id",
	level:"level",
	role:"role",
	min_value:"min_value",
	max_value:"max_value",
	max_length:"max_length",
	ui_name:"ui_name",
	required:"required",
	values:"values",
	default_value:"default_value",
	encrypted_using:"encrypted_using",
	synonym_value:"synonym_value",
	layered_settings:"layered_settings",
	message_type:"message_type",
	version:"version",
	ui_type:"ui_type",
	default_for_add:"default_for_add",
	overrides:"overrides",
	group:"group",
	visible_exp:"visible_exp",
	disabled_exp:"disabled_exp",
	placeholder:"placeholder",
	display_order:"display_order",
	style_class:"style_class",
	browse:"browse",
	container_type:"container_type",
	upload_type:"upload_type",
	error_msg:"error_msg",
	browse_folder_root:"browse_folder_root",
	info:"info",
	select_title:"select_title",
	select_sub_title:"select_sub_title",
	ui_layouts:"ui_layouts",
	predefined_custom_parameter:"predefined_custom_parameter",
	feature_flag:"feature_flag"
};

DO.connect_item_Validation = {
	name: {
		required: true
	},
	type: {
		required: true
	},
	item_id: {
		number: true
	},
	max_length: {
		number: true
	},
	version: {
		required: true
	},
	display_order: {
		number: true
	}
};


DO.connect_item_Defaults = {
	name:"",
	type:DO.connect_item_type.STRING,
	item_id:-1,
	level:DO.connect_item_level.REGULAR,
	role:DO.db_role.BOTH,
	min_value:"",
	max_value:"",
	max_length:0,
	ui_name:"",
	required:false,
	values:[],
	default_value:"",
	encrypted_using:"",
	synonym_value:"",
	layered_settings:null,
	message_type:"",
	version:"",
	ui_type:DO.UIComponentTypes.NONE,
	default_for_add:"",
	overrides:[],
	group:"",
	visible_exp:"",
	disabled_exp:"",
	placeholder:"",
	display_order:0,
	style_class:"",
	browse:DO.browse_type.NONE,
	container_type:"",
	upload_type:"",
	error_msg:"",
	browse_folder_root:"",
	info:"",
	select_title:"",
	select_sub_title:"",
	ui_layouts:"",
	predefined_custom_parameter:false,
	feature_flag:""
};

DO.connect_item_Types = {
	type:"connect_item_type",
	level:"connect_item_level",
	role:"db_role",
	values:"connect_enumval",
	layered_settings:"layered_settings_msg",
	ui_type:"UIComponentTypes",
	overrides:"connect_item_override",
	browse:"browse_type"
};


DO.connect_item_override = {
	name:"name",
	level:"level",
	min_value:"min_value",
	max_value:"max_value",
	max_length:"max_length",
	ui_name:"ui_name",
	required:"required",
	values:"values",
	default_value:"default_value",
	encrypted_using:"encrypted_using"
};

DO.connect_item_override_Validation = {
	name: {
		required: true
	},
	max_length: {
		number: true
	}
};


DO.connect_item_override_Defaults = {
	name:"",
	level:DO.connect_item_level.REGULAR,
	min_value:"",
	max_value:"",
	max_length:0,
	ui_name:"",
	required:false,
	values:[],
	default_value:"",
	encrypted_using:""
};

DO.connect_item_override_Types = {
	level:"connect_item_level",
	values:"connect_enumval"
};


DO.group_def = {
	name:"name",
	ui_name:"ui_name",
	visible_exp:"visible_exp",
	version:"version",
	description:"description"
};

DO.group_def_Validation = {
};


DO.group_def_Defaults = {
	name:"",
	ui_name:"",
	visible_exp:"",
	version:"",
	description:""
};

DO.group_def_Types = {
};


DO.connect_info = {
	items:"items",
	overrides:"overrides",
	groups:"groups"
};

DO.connect_info_Validation = {
};


DO.connect_info_Defaults = {
	items:[],
	overrides:[],
	groups:[]
};

DO.connect_info_Types = {
	items:"connect_item",
	overrides:"connect_item_override",
	groups:"group_def"
};


DO.cifta_settings = {
	pack_threshold:"pack_threshold",
	pack_timeout_msec:"pack_timeout_msec",
	progress:"progress",
	max_slice_size:"max_slice_size",
	lfa_disk_packet_size:"lfa_disk_packet_size",
	parallel_connections:"parallel_connections",
	send_timeout:"send_timeout",
	recv_timeout:"recv_timeout",
	idle_timeout:"idle_timeout",
	make_target_path:"make_target_path",
	multipart:"multipart",
	keep_alive_msec:"keep_alive_msec",
	compression_type:"compression_type",
	compression_level:"compression_level",
	upload_streams:"upload_streams",
	trace_log:"trace_log",
	trace_mask:"trace_mask",
	compression:"compression",
	dont_compress:"dont_compress",
	short_files_buffer:"short_files_buffer",
	fixed_part_size:"fixed_part_size",
	working_directory:"working_directory",
	task_name:"task_name",
	client_suffix:"client_suffix",
	server_temp_dir:"server_temp_dir",
	server_temp_suffix:"server_temp_suffix",
	error_handling:"error_handling",
	long_report_format:"long_report_format",
	auto_purge_receipts:"auto_purge_receipts",
	verify:"verify",
	connection_string:"connection_string"
};

DO.cifta_settings_Validation = {
	pack_threshold: {
		number: true
	},
	pack_timeout_msec: {
		number: true
	},
	progress: {
		number: true
	},
	max_slice_size: {
		number: true
	},
	lfa_disk_packet_size: {
		number: true
	},
	parallel_connections: {
		number: true
	},
	send_timeout: {
		number: true
	},
	recv_timeout: {
		number: true
	},
	idle_timeout: {
		number: true
	},
	keep_alive_msec: {
		number: true
	},
	compression_level: {
		number: true
	},
	upload_streams: {
		number: true
	},
	short_files_buffer: {
		number: true
	},
	fixed_part_size: {
		number: true
	}
};


DO.cifta_settings_Defaults = {
	pack_threshold:0,
	pack_timeout_msec:0,
	progress:0,
	max_slice_size:5242880,
	lfa_disk_packet_size:5242880,
	parallel_connections:0,
	send_timeout:120,
	recv_timeout:120,
	idle_timeout:150,
	make_target_path:false,
	multipart:true,
	keep_alive_msec:60000,
	compression_type:DO.cifta_compression_type.DEFLATE,
	compression_level:6,
	upload_streams:10,
	trace_log:"",
	trace_mask:"",
	compression:true,
	dont_compress:"*.tgz,*.zip",
	short_files_buffer:0,
	fixed_part_size:0,
	working_directory:"",
	task_name:"",
	client_suffix:"",
	server_temp_dir:"",
	server_temp_suffix:"",
	error_handling:"R",
	long_report_format:false,
	auto_purge_receipts:true,
	verify:false,
	connection_string:""
};

DO.cifta_settings_Types = {
	compression_type:"cifta_compression_type"
};


DO.provider_syntax = {
	name:"name",
	query_syntax:"query_syntax",
	data_type_mapping:"data_type_mapping",
	odbc_col_attr:"odbc_col_attr",
	charset_to_converter_mapping:"charset_to_converter_mapping"
};

DO.provider_syntax_Validation = {
	name: {
		required: true
	}
};


DO.provider_syntax_Defaults = {
	name:"",
	query_syntax:null,
	data_type_mapping:[],
	odbc_col_attr:[],
	charset_to_converter_mapping:[]
};

DO.provider_syntax_Types = {
	query_syntax:"query_syntax",
	data_type_mapping:"query_data_type_mapping",
	odbc_col_attr:"odbc_col_attr",
	charset_to_converter_mapping:"charset_to_converter_mapping"
};


DO.query_syntax = {
	create_schema:"create_schema",
	create_table:"create_table",
	create_index:"create_index",
	create_primary_key:"create_primary_key",
	drop_table:"drop_table",
	truncate_table:"truncate_table",
	add_column:"add_column",
	drop_column:"drop_column",
	rename_column:"rename_column",
	modify_column:"modify_column",
	rename_table:"rename_table",
	reorg:"reorg",
	create_clustered_index:"create_clustered_index",
	use_owner_name:"use_owner_name",
	error_code_duplicate_key:"error_code_duplicate_key",
	error_code_constraint_violation:"error_code_constraint_violation",
	error_code_connection_failure:"error_code_connection_failure",
	force_index_to_not_nullable:"force_index_to_not_nullable",
	error_code_data_failure:"error_code_data_failure",
	bulk_update_syntax:"bulk_update_syntax",
	csv_delimiter:"csv_delimiter",
	csv_null_value:"csv_null_value",
	csv_string_quote:"csv_string_quote",
	csv_append_delimiter_at_end:"csv_append_delimiter_at_end",
	load_data_exe_full_path:"load_data_exe_full_path",
	load_data_exe_name:"load_data_exe_name",
	load_data_exe_params:"load_data_exe_params",
	sql_load_data_statement:"sql_load_data_statement",
	sql_load_column_spec:"sql_load_column_spec",
	bulk_delete_syntax:"bulk_delete_syntax",
	error_code_table_error:"error_code_table_error",
	bulk_ignore_binary:"bulk_ignore_binary",
	support_update_one_row:"support_update_one_row",
	error_code_fatal_error:"error_code_fatal_error",
	csv_string_escape:"csv_string_escape",
	support_wchar:"support_wchar",
	char_length_in_bytes:"char_length_in_bytes",
	csv_row_delimiter:"csv_row_delimiter",
	bulk_cast_in_where_clause:"bulk_cast_in_where_clause",
	load_start_script:"load_start_script",
	load_finish_script:"load_finish_script",
	sql_load_binary_col_value:"sql_load_binary_col_value",
	sql_load_binary_cols_values:"sql_load_binary_cols_values",
	sql_load_binary_col_prefix:"sql_load_binary_col_prefix",
	pk_segments_not_updateable:"pk_segments_not_updateable",
	exclude_unchanged_pk_from_after_image:"exclude_unchanged_pk_from_after_image",
	supports_transactions:"supports_transactions",
	distribution_query:"distribution_query",
	max_distribution_columns:"max_distribution_columns",
	bulk_insert_syntax:"bulk_insert_syntax",
	binary_display:"binary_display",
	table_max_row_size:"table_max_row_size",
	max_identifier_length:"max_identifier_length",
	max_columns_per_table:"max_columns_per_table",
	load_exe_network_error_codes:"load_exe_network_error_codes",
	create_foreign_key:"create_foreign_key",
	create_view:"create_view",
	drop_view:"drop_view",
	drop_foreign_key:"drop_foreign_key",
	drop_index:"drop_index",
	create_nonunique_index:"create_nonunique_index",
	create_unique_constraint:"create_unique_constraint",
	qualify_table:"qualify_table",
	qualify_view:"qualify_view",
	timestamp_to_date:"timestamp_to_date",
	string_to_timestamp:"string_to_timestamp",
	string_to_date:"string_to_date",
	row_number_function:"row_number_function",
	mod_function:"mod_function",
	pseudo_source:"pseudo_source",
	merge_terminator:"merge_terminator",
	disable_foreign_key:"disable_foreign_key",
	csv_escape_control_char:"csv_escape_control_char",
	create_temporary_table:"create_temporary_table",
	drop_index__B:"drop_index__B",
	create_index__B:"create_index__B",
	create_nonunique_index__B:"create_nonunique_index__B",
	create_distribute_clause__B:"create_distribute_clause__B",
	create_n_u_distribute_clause__B:"create_n_u_distribute_clause__B",
	create_primary_key__B:"create_primary_key__B",
	create_table__B:"create_table__B",
	drop_table__B:"drop_table__B",
	drop_view__B:"drop_view__B",
	create_foreign_key__B:"create_foreign_key__B",
	drop_foreign_key__B:"drop_foreign_key__B",
	create_unique_constraint__B:"create_unique_constraint__B",
	create_view__B:"create_view__B",
	sql_load_under_transaction:"sql_load_under_transaction",
	disable_foreign_key__B:"disable_foreign_key__B",
	create_non_checking_f_k__B:"create_non_checking_f_k__B",
	create_sort_key__B:"create_sort_key__B",
	truncate_table__B:"truncate_table__B",
	create_statistics__B:"create_statistics__B",
	change_password:"change_password",
	requires_execute_for_describe:"requires_execute_for_describe",
	gen_password_length:"gen_password_length",
	ref_csv_delimiter:"ref_csv_delimiter",
	ref_csv_row_delimiter:"ref_csv_row_delimiter",
	bulk_support_update_pkey_cols:"bulk_support_update_pkey_cols",
	character_semantic:"character_semantic",
	truncate_too_long_data_in_columns:"truncate_too_long_data_in_columns",
	csv_string_binary_zero:"csv_string_binary_zero",
	load_exe_data_error_codes:"load_exe_data_error_codes",
	create_external_table:"create_external_table",
	cast_in_where_clause:"cast_in_where_clause",
	manipulation_filter_string_column_sql:"manipulation_filter_string_column_sql",
	create_columnstore_table:"create_columnstore_table",
	supports_many_unique_indexes:"supports_many_unique_indexes",
	connection_exe_full_path:"connection_exe_full_path",
	connection_exe_name:"connection_exe_name",
	connection_exe_params:"connection_exe_params",
	support_statement_with_parameters:"support_statement_with_parameters",
	literal_escape_sign:"literal_escape_sign",
	get_partition_list:"get_partition_list",
	partition_where_clause:"partition_where_clause",
	load_data_exe_params_linux:"load_data_exe_params_linux",
	check_table_exists_with_schema:"check_table_exists_with_schema",
	check_table_exists_without_schema:"check_table_exists_without_schema",
	check_schema_exist:"check_schema_exist",
	add_column_cascade:"add_column_cascade",
	rename_column_cascade:"rename_column_cascade",
	drop_partitions:"drop_partitions",
	add_partition:"add_partition",
	create_configuration:"create_configuration",
	check_configuration_exist:"check_configuration_exist",
	should_check_schema_befor_check_table:"should_check_schema_befor_check_table",
	handle_auto_commit:"handle_auto_commit",
	add_column_exe_params:"add_column_exe_params",
	using_ddl_with_exe:"using_ddl_with_exe",
	merge_table:"merge_table"
};

DO.query_syntax_Validation = {
	char_length_in_bytes: {
		number: true
	},
	max_distribution_columns: {
		number: true
	},
	table_max_row_size: {
		number: true
	},
	max_identifier_length: {
		number: true
	},
	max_columns_per_table: {
		number: true
	},
	gen_password_length: {
		number: true
	}
};


DO.query_syntax_Defaults = {
	create_schema:"CREATE SCHEMA ${QO}${SCHEMA_NAME}${QC}",
	create_table:"CREATE TABLE ${QO}${TABLE_OWNER}${QC}.${QO}${TABLE_NAME}${QC} ( ${COLUMN_LIST} )",
	create_index:"CREATE UNIQUE INDEX ${QO}${CONSTRAINT_NAME}${QC} ON ${QO}${TABLE_OWNER}${QC}.${QO}${TABLE_NAME}${QC} ( ${COLUMN_LIST} )",
	create_primary_key:"ALTER TABLE ${QO}${TABLE_OWNER}${QC}.${QO}${TABLE_NAME}${QC} ADD CONSTRAINT ${QO}${CONSTRAINT_NAME}${QC} PRIMARY KEY ( ${COLUMN_LIST} )",
	drop_table:"DROP TABLE ${QO}${TABLE_OWNER}${QC}.${QO}${TABLE_NAME}${QC}",
	truncate_table:"TRUNCATE TABLE ${QO}${TABLE_OWNER}${QC}.${QO}${TABLE_NAME}${QC}",
	add_column:"ALTER TABLE ${QO}${TABLE_OWNER}${QC}.${QO}${TABLE_NAME}${QC} ADD COLUMN ${QO}${COLUMN_NAME}${QC} ${COLUMN_TYPE}",
	drop_column:"ALTER TABLE ${QO}${TABLE_OWNER}${QC}.${QO}${TABLE_NAME}${QC} DROP COLUMN ${QO}${COLUMN_NAME}${QC} ",
	rename_column:"ALTER TABLE ${QO}${TABLE_OWNER}${QC}.${QO}${TABLE_NAME}${QC} RENAME COLUMN ${QO}${COLUMN_NAME}${QC} TO ${QO}${NEW_COLUMN_NAME}${QC}",
	modify_column:"ALTER TABLE ${QO}${TABLE_OWNER}${QC}.${QO}${TABLE_NAME}${QC} ALTER COLUMN ${QO}${COLUMN_NAME}${QC} ${COLUMN_TYPE}",
	rename_table:"ALTER TABLE ${QO}${TABLE_OWNER}${QC}.${QO}${TABLE_NAME}${QC} RENAME TO ${QO}${NEW_TABLE_NAME}${QC}",
	reorg:"",
	create_clustered_index:"",
	use_owner_name:true,
	error_code_duplicate_key:"",
	error_code_constraint_violation:"",
	error_code_connection_failure:"",
	force_index_to_not_nullable:DO.force_index_to_not_nullable.FORCE_INDEX_ONLY_PK,
	error_code_data_failure:"",
	bulk_update_syntax:DO.bulk_update_syntax.GENERIC_UPDATE,
	csv_delimiter:",",
	csv_null_value:"",
	csv_string_quote:"\"",
	csv_append_delimiter_at_end:false,
	load_data_exe_full_path:"",
	load_data_exe_name:"",
	load_data_exe_params:"",
	sql_load_data_statement:"",
	sql_load_column_spec:"",
	bulk_delete_syntax:DO.bulk_delete_syntax.GENERIC_DELETE,
	error_code_table_error:"",
	bulk_ignore_binary:true,
	support_update_one_row:true,
	error_code_fatal_error:"",
	csv_string_escape:"",
	support_wchar:true,
	char_length_in_bytes:1,
	csv_row_delimiter:"\n",
	bulk_cast_in_where_clause:true,
	load_start_script:"",
	load_finish_script:"",
	sql_load_binary_col_value:"",
	sql_load_binary_cols_values:"",
	sql_load_binary_col_prefix:"",
	pk_segments_not_updateable:false,
	exclude_unchanged_pk_from_after_image:false,
	supports_transactions:true,
	distribution_query:"",
	max_distribution_columns:0,
	bulk_insert_syntax:DO.bulk_insert_syntax.GENERIC_INSERT,
	binary_display:DO.binary_display.PREFIXED_HEX,
	table_max_row_size:0,
	max_identifier_length:0,
	max_columns_per_table:0,
	load_exe_network_error_codes:"",
	create_foreign_key:"ALTER TABLE ${QO}${TABLE_OWNER}${QC}.${QO}${TABLE_NAME}${QC} ADD CONSTRAINT ${QO}${CONSTRAINT_NAME}${QC} FOREIGN KEY (${COLUMN_LIST}) REFERENCES ${QO}${REF_TABLE_OWNER}${QC}.${QO}${REF_TABLE_NAME}${QC}(${REF_COLUMN_LIST})",
	create_view:"CREATE VIEW ${QO}${VIEW_OWNER}${QC}.${QO}${VIEW_NAME}${QC} AS  SELECT ${VIEW_COLUMN_LIST} FROM ${QO}${TABLE_OWNER}${QC}.${QO}${TABLE_NAME}${QC}",
	drop_view:"DROP VIEW ${QO}${VIEW_OWNER}${QC}.${QO}${VIEW_NAME}${QC}",
	drop_foreign_key:"ALTER TABLE ${QO}${TABLE_OWNER}${QC}.${QO}${TABLE_NAME}${QC} DROP CONSTRAINT ${QO}${CONSTRAINT_NAME}${QC} ",
	drop_index:"DROP INDEX ${QO}${TABLE_OWNER}${QC}.${QO}${TABLE_NAME}${QC}.${CONSTRAINT_NAME}",
	create_nonunique_index:"CREATE INDEX ${QO}${CONSTRAINT_NAME}${QC} ON ${QO}${TABLE_OWNER}${QC}.${QO}${TABLE_NAME}${QC} ( ${COLUMN_LIST} )",
	create_unique_constraint:"ALTER TABLE ${QO}${TABLE_OWNER}${QC}.${QO}${TABLE_NAME}${QC} ADD CONSTRAINT ${QO}${CONSTRAINT_NAME}${QC} UNIQUE ( ${COLUMN_LIST} )",
	qualify_table:"${QO}${DATABASE}${QC}.${QO}${SCHEMA_NAME}${QC}.${QO}${TABLE_NAME}${QC}",
	qualify_view:"${QO}${DATABASE}${QC}.${QO}${SCHEMA_NAME}${QC}.${QO}${TABLE_NAME}${QC}",
	timestamp_to_date:"",
	string_to_timestamp:"",
	string_to_date:"",
	row_number_function:"",
	mod_function:"",
	pseudo_source:"",
	merge_terminator:"",
	disable_foreign_key:"",
	csv_escape_control_char:true,
	create_temporary_table:"",
	drop_index__B:"",
	create_index__B:"",
	create_nonunique_index__B:"",
	create_distribute_clause__B:"",
	create_n_u_distribute_clause__B:"",
	create_primary_key__B:"",
	create_table__B:"",
	drop_table__B:"",
	drop_view__B:"",
	create_foreign_key__B:"",
	drop_foreign_key__B:"",
	create_unique_constraint__B:"",
	create_view__B:"",
	sql_load_under_transaction:false,
	disable_foreign_key__B:"",
	create_non_checking_f_k__B:"",
	create_sort_key__B:"",
	truncate_table__B:"",
	create_statistics__B:"",
	change_password:"",
	requires_execute_for_describe:false,
	gen_password_length:32,
	ref_csv_delimiter:",",
	ref_csv_row_delimiter:"\n",
	bulk_support_update_pkey_cols:true,
	character_semantic:DO.char_semantic.DEFAULT,
	truncate_too_long_data_in_columns:false,
	csv_string_binary_zero:"",
	load_exe_data_error_codes:"",
	create_external_table:"",
	cast_in_where_clause:false,
	manipulation_filter_string_column_sql:"",
	create_columnstore_table:"",
	supports_many_unique_indexes:false,
	connection_exe_full_path:"",
	connection_exe_name:"",
	connection_exe_params:"",
	support_statement_with_parameters:true,
	literal_escape_sign:"",
	get_partition_list:"",
	partition_where_clause:"",
	load_data_exe_params_linux:"",
	check_table_exists_with_schema:"",
	check_table_exists_without_schema:"",
	check_schema_exist:"",
	add_column_cascade:"",
	rename_column_cascade:"",
	drop_partitions:"",
	add_partition:"",
	create_configuration:"",
	check_configuration_exist:"",
	should_check_schema_befor_check_table:false,
	handle_auto_commit:false,
	add_column_exe_params:"",
	using_ddl_with_exe:false,
	merge_table:""
};

DO.query_syntax_Types = {
	force_index_to_not_nullable:"force_index_to_not_nullable",
	bulk_update_syntax:"bulk_update_syntax",
	bulk_delete_syntax:"bulk_delete_syntax",
	bulk_insert_syntax:"bulk_insert_syntax",
	binary_display:"binary_display",
	character_semantic:"char_semantic"
};


DO.query_data_type_mapping = {
	rep_type:"rep_type",
	provider_data_type:"provider_data_type",
	has_length_condition:"has_length_condition",
	from_length:"from_length",
	to_length:"to_length",
	has_precision_condition:"has_precision_condition",
	from_precision:"from_precision",
	to_precision:"to_precision",
	has_scale_condition:"has_scale_condition",
	from_scale:"from_scale",
	to_scale:"to_scale",
	casting_data_type:"casting_data_type",
	has_nullable_condition:"has_nullable_condition",
	override_data_type:"override_data_type",
	has_sub_data_type_condition:"has_sub_data_type_condition",
	sub_data_type:"sub_data_type"
};

DO.query_data_type_mapping_Validation = {
	rep_type: {
		required: true
	},
	provider_data_type: {
		required: true
	},
	from_length: {
		number: true
	},
	to_length: {
		number: true
	},
	from_precision: {
		number: true
	},
	to_precision: {
		number: true
	},
	from_scale: {
		number: true
	},
	to_scale: {
		number: true
	}
};


DO.query_data_type_mapping_Defaults = {
	rep_type:DO.ar_data_type_options.KAR_DATA_TYPE_UNSPECIFIED,
	provider_data_type:"",
	has_length_condition:false,
	from_length:0,
	to_length:0,
	has_precision_condition:false,
	from_precision:0,
	to_precision:0,
	has_scale_condition:false,
	from_scale:0,
	to_scale:0,
	casting_data_type:"",
	has_nullable_condition:false,
	override_data_type:"",
	has_sub_data_type_condition:false,
	sub_data_type:DO.ar_sub_data_type_options.KAR_SUB_DATA_TYPE_UNSPECIFIED
};

DO.query_data_type_mapping_Types = {
	rep_type:"ar_data_type_options",
	sub_data_type:"ar_sub_data_type_options"
};


DO.charset_to_converter_mapping = {
	charset:"charset",
	icu_converter:"icu_converter"
};

DO.charset_to_converter_mapping_Validation = {
	charset: {
		required: true
	},
	icu_converter: {
		required: true
	}
};


DO.charset_to_converter_mapping_Defaults = {
	charset:"",
	icu_converter:""
};

DO.charset_to_converter_mapping_Types = {
};


DO.odbc_col_attr = {
	sql_type:"sql_type",
	sql_type_description:"sql_type_description",
	bind_db_type:"bind_db_type",
	rep_type:"rep_type",
	buffer_length:"buffer_length",
	column_size:"column_size",
	bind_len:"bind_len",
	precision:"precision",
	scale:"scale",
	decimal_digit:"decimal_digit",
	is_nullable:"is_nullable",
	orig_db_type:"orig_db_type",
	is_lob:"is_lob",
	attributes:"attributes"
};

DO.odbc_col_attr_Validation = {
	sql_type: {
		required: true,
		number: true
	},
	bind_db_type: {
		required: true,
		number: true
	},
	rep_type: {
		required: true
	},
	precision: {
		number: true
	},
	scale: {
		number: true
	},
	decimal_digit: {
		number: true
	},
	orig_db_type: {
		number: true
	},
	attributes: {
		number: true
	}
};


DO.odbc_col_attr_Defaults = {
	sql_type:0,
	sql_type_description:"",
	bind_db_type:0,
	rep_type:DO.ar_data_type_options.KAR_DATA_TYPE_UNSPECIFIED,
	buffer_length:"",
	column_size:"",
	bind_len:"",
	precision:0,
	scale:0,
	decimal_digit:0,
	is_nullable:false,
	orig_db_type:0,
	is_lob:false,
	attributes:0
};

DO.odbc_col_attr_Types = {
	rep_type:"ar_data_type_options"
};


DO.source_column_data_type = {
	column_name:"column_name",
	converter_name:"converter_name",
	data_type:"data_type"
};

DO.source_column_data_type_Validation = {
	column_name: {
		required: true
	}
};


DO.source_column_data_type_Defaults = {
	column_name:"",
	converter_name:"",
	data_type:DO.ar_data_type_options.KAR_DATA_TYPE_UNSPECIFIED
};

DO.source_column_data_type_Types = {
	data_type:"ar_data_type_options"
};


DO.primary_key_def = {
	name:"name",
	segments:"segments",
	pk_origin:"pk_origin",
	is_clustered:"is_clustered",
	tablespace_name:"tablespace_name",
	create_in_target:"create_in_target",
	used_for_replication:"used_for_replication"
};

DO.primary_key_def_Validation = {
	name: {
		required: true
	},
	pk_origin: {
		required: true
	}
};


DO.primary_key_def_Defaults = {
	name:"",
	segments:[],
	pk_origin:DO.primary_key_origin_options.primary_key_origin_unspecified,
	is_clustered:true,
	tablespace_name:"",
	create_in_target:false,
	used_for_replication:false
};

DO.primary_key_def_Types = {
	segments:"primary_key_segment",
	pk_origin:"primary_key_origin_options"
};


DO.expression_editor_item = {
	name:"name",
	description:"description",
	type:"type",
	length:"length",
	precision:"precision",
	scale:"scale",
	hidden_type:"hidden_type"
};

DO.expression_editor_item_Validation = {
	name: {
		required: true
	},
	length: {
		number: true
	},
	precision: {
		number: true
	},
	scale: {
		number: true
	}
};


DO.expression_editor_item_Defaults = {
	name:"",
	description:"",
	type:DO.ar_data_type_options.KAR_DATA_TYPE_UNSPECIFIED,
	length:0,
	precision:0,
	scale:0,
	hidden_type:DO.ee_hidden_type.EE_TYPE_ALL
};

DO.expression_editor_item_Types = {
	type:"ar_data_type_options",
	hidden_type:"ee_hidden_type"
};


DO.expression_editor_group = {
	name:"name",
	items:"items"
};

DO.expression_editor_group_Validation = {
	name: {
		required: true
	}
};


DO.expression_editor_group_Defaults = {
	name:"",
	items:[]
};

DO.expression_editor_group_Types = {
	items:"expression_editor_item"
};


DO.expression_editor_category = {
	name:"name",
	prefix:"prefix",
	suffix:"suffix",
	groups:"groups"
};

DO.expression_editor_category_Validation = {
	name: {
		required: true
	}
};


DO.expression_editor_category_Defaults = {
	name:"",
	prefix:"",
	suffix:"",
	groups:[]
};

DO.expression_editor_category_Types = {
	groups:"expression_editor_group"
};


DO.primary_key_segment = {
	name:"name",
	position:"position",
	id:"id",
	order:"order"
};

DO.primary_key_segment_Validation = {
	name: {
		required: true
	},
	position: {
		required: true,
		number: true
	},
	id: {
		number: true
	}
};


DO.primary_key_segment_Defaults = {
	name:"",
	position:0,
	id:0,
	order:DO.primary_key_order.PRIMARY_KEY_ORDER_ASC
};

DO.primary_key_segment_Types = {
	order:"primary_key_order"
};


DO.unload_ranges = {
	column_names:"column_names",
	split_points:"split_points"
};

DO.unload_ranges_Validation = {
};


DO.unload_ranges_Defaults = {
	column_names:[],
	split_points:[]
};

DO.unload_ranges_Types = {
	split_points:"range_split_point"
};


DO.unload_partition = {
	name:"name",
	is_subpartition:"is_subpartition"
};

DO.unload_partition_Validation = {
};


DO.unload_partition_Defaults = {
	name:"",
	is_subpartition:false
};

DO.unload_partition_Types = {
};


DO.split_entry_names = {
	name:"name"
};

DO.split_entry_names_Validation = {
};


DO.split_entry_names_Defaults = {
	name:[]
};

DO.split_entry_names_Types = {
};


DO.range_split_point = {
	values:"values"
};

DO.range_split_point_Validation = {
};


DO.range_split_point_Defaults = {
	values:[]
};

DO.range_split_point_Types = {
};


DO.source_unload_segments = {
	segments_type:"segments_type",
	ranges:"ranges",
	entry_names:"entry_names",
	partitions:"partitions",
	auto_partitions:"auto_partitions"
};

DO.source_unload_segments_Validation = {
};


DO.source_unload_segments_Defaults = {
	segments_type:DO.unload_segments_type.NO_SEGMENTATION,
	ranges:null,
	entry_names:null,
	partitions:[],
	auto_partitions:[]
};

DO.source_unload_segments_Types = {
	segments_type:"unload_segments_type",
	ranges:"unload_ranges",
	entry_names:"split_entry_names",
	partitions:"unload_partition",
	auto_partitions:"unload_partition"
};


DO.source_table_settings = {
	unload_segments:"unload_segments"
};

DO.source_table_settings_Validation = {
};


DO.source_table_settings_Defaults = {
	unload_segments:null
};

DO.source_table_settings_Types = {
	unload_segments:"source_unload_segments"
};


DO.manipulation = {
	name:"name",
	table_manipulation:"table_manipulation"
};

DO.manipulation_Validation = {
	name: {
		required: true
	},
	table_manipulation: {
		required: true
	}
};


DO.manipulation_Defaults = {
	name:"",
	table_manipulation:{}
};

DO.manipulation_Types = {
	table_manipulation:"table_manipulation"
};


DO.column_manipulation = {
	column_name:"column_name",
	new_column_name:"new_column_name",
	action:"action",
	new_data_type:"new_data_type",
	length:"length",
	precision:"precision",
	scale:"scale",
	ranges:"ranges",
	computation_expression:"computation_expression",
	is_pk:"is_pk",
	is_nullable:"is_nullable",
	new_sub_data_type:"new_sub_data_type"
};

DO.column_manipulation_Validation = {
	column_name: {
		required: true
	},
	action: {
		required: true
	},
	length: {
		number: true
	},
	precision: {
		number: true
	},
	scale: {
		number: true
	}
};


DO.column_manipulation_Defaults = {
	column_name:"",
	new_column_name:"",
	action:DO.manipulation_action.DEFAULT_ACTION,
	new_data_type:DO.ar_data_type_options.KAR_DATA_TYPE_UNSPECIFIED,
	length:-1,
	precision:-1,
	scale:-1,
	ranges:"",
	computation_expression:"",
	is_pk:false,
	is_nullable:false,
	new_sub_data_type:DO.ar_sub_data_type_options.KAR_SUB_DATA_TYPE_UNSPECIFIED
};

DO.column_manipulation_Types = {
	action:"manipulation_action",
	new_data_type:"ar_data_type_options",
	new_sub_data_type:"ar_sub_data_type_options"
};


DO.column_filter = {
	column_name:"column_name",
	ranges:"ranges"
};

DO.column_filter_Validation = {
	column_name: {
		required: true
	}
};


DO.column_filter_Defaults = {
	column_name:"",
	ranges:""
};

DO.column_filter_Types = {
};


DO.table_manipulation = {
	owner:"owner",
	name:"name",
	new_table_name:"new_table_name",
	expression:"expression",
	columns:"columns",
	keep_columns_without_manipulation:"keep_columns_without_manipulation",
	new_owner_name:"new_owner_name",
	version:"version",
	filter_columns:"filter_columns",
	transform_columns:"transform_columns",
	pk_manipulated:"pk_manipulated",
	fl_passthru_filter:"fl_passthru_filter",
	source_column_data_types:"source_column_data_types",
	source_table_settings:"source_table_settings",
	new_table_tablespace_name:"new_table_tablespace_name",
	new_index_tablespace_name:"new_index_tablespace_name",
	new_ct_owner_name:"new_ct_owner_name",
	new_ct_table_name:"new_ct_table_name"
};

DO.table_manipulation_Validation = {
	name: {
		required: true
	},
	version: {
		number: true
	}
};


DO.table_manipulation_Defaults = {
	owner:"",
	name:"",
	new_table_name:"",
	expression:"",
	columns:[],
	keep_columns_without_manipulation:true,
	new_owner_name:"",
	version:0,
	filter_columns:[],
	transform_columns:[],
	pk_manipulated:null,
	fl_passthru_filter:"",
	source_column_data_types:[],
	source_table_settings:null,
	new_table_tablespace_name:"",
	new_index_tablespace_name:"",
	new_ct_owner_name:"",
	new_ct_table_name:""
};

DO.table_manipulation_Types = {
	columns:"column_manipulation",
	filter_columns:"column_filter",
	transform_columns:"column_manipulation",
	pk_manipulated:"primary_key_def",
	source_column_data_types:"source_column_data_type",
	source_table_settings:"source_table_settings"
};


DO.table_manipulation_Aux = {
	source_table_settings: {
		"version": "6.1"
	},
	new_table_tablespace_name: {
		"version": "6.1"
	},
	new_index_tablespace_name: {
		"version": "6.1"
	},
	new_ct_owner_name: {
		"version": "6.1"
	},
	new_ct_table_name: {
		"version": "6.1"
	}
};

DO.manipulation_rule = {
	name:"name",
	action:"action",
	old_value:"old_value",
	new_value:"new_value"
};

DO.manipulation_rule_Validation = {
	action: {
		required: true
	}
};


DO.manipulation_rule_Defaults = {
	name:"",
	action:DO.global_manipulation_action.RENAME_SCHEMA,
	old_value:"",
	new_value:""
};

DO.manipulation_rule_Types = {
	action:"global_manipulation_action"
};


DO.simulated_column_manipulation = {
	source_column:"source_column",
	target_column:"target_column",
	affecting_rules:"affecting_rules",
	affected_by_private_manipulation:"affected_by_private_manipulation"
};

DO.simulated_column_manipulation_Validation = {
};


DO.simulated_column_manipulation_Defaults = {
	source_column:null,
	target_column:null,
	affecting_rules:"",
	affected_by_private_manipulation:false
};

DO.simulated_column_manipulation_Types = {
	source_column:"column_def",
	target_column:"column_manipulation"
};


DO.simulated_table_manipulation = {
	target_table:"target_table",
	columns:"columns",
	affecting_rules:"affecting_rules",
	affected_by_private_manipulation:"affected_by_private_manipulation"
};

DO.simulated_table_manipulation_Validation = {
};


DO.simulated_table_manipulation_Defaults = {
	target_table:null,
	columns:[],
	affecting_rules:"",
	affected_by_private_manipulation:false
};

DO.simulated_table_manipulation_Types = {
	target_table:"table_manipulation",
	columns:"simulated_column_manipulation"
};


DO.global_column_manipulation = {
	where_column_name:"where_column_name",
	where_data_type_group:"where_data_type_group",
	where_data_type:"where_data_type",
	new_data_type:"new_data_type",
	new_length:"new_length",
	new_precision:"new_precision",
	new_scale:"new_scale",
	computation_expression:"computation_expression",
	is_pk:"is_pk",
	pk_after:"pk_after",
	where_expression:"where_expression",
	new_length_expression:"new_length_expression",
	where_sub_data_type:"where_sub_data_type",
	new_sub_data_type:"new_sub_data_type"
};

DO.global_column_manipulation_Validation = {
	where_column_name: {
		required: true
	},
	new_length: {
		number: true
	},
	new_precision: {
		number: true
	},
	new_scale: {
		number: true
	}
};


DO.global_column_manipulation_Defaults = {
	where_column_name:"%",
	where_data_type_group:DO.global_manipulation_where_datatype_group.ALL_DATATYPES,
	where_data_type:DO.ar_data_type_options.KAR_DATA_TYPE_UNSPECIFIED,
	new_data_type:DO.ar_data_type_options.KAR_DATA_TYPE_UNSPECIFIED,
	new_length:-1,
	new_precision:-1,
	new_scale:-1,
	computation_expression:"",
	is_pk:false,
	pk_after:false,
	where_expression:"",
	new_length_expression:"",
	where_sub_data_type:DO.ar_sub_data_type_options.KAR_SUB_DATA_TYPE_UNSPECIFIED,
	new_sub_data_type:DO.ar_sub_data_type_options.KAR_SUB_DATA_TYPE_UNSPECIFIED
};

DO.global_column_manipulation_Types = {
	where_data_type_group:"global_manipulation_where_datatype_group",
	where_data_type:"ar_data_type_options",
	new_data_type:"ar_data_type_options",
	where_sub_data_type:"ar_sub_data_type_options",
	new_sub_data_type:"ar_sub_data_type_options"
};


DO.global_manipulation_rule = {
	action:"action",
	name:"name",
	where_owner_name:"where_owner_name",
	where_table_name:"where_table_name",
	expression:"expression",
	column:"column",
	sub_action:"sub_action",
	to_value:"to_value",
	from_value:"from_value",
	where_table_tablespace_name:"where_table_tablespace_name",
	where_index_tablespace_name:"where_index_tablespace_name",
	where_expression:"where_expression",
	description:"description",
	enabled:"enabled"
};

DO.global_manipulation_rule_Validation = {
	action: {
		required: true
	}
};


DO.global_manipulation_rule_Defaults = {
	action:DO.global_manipulation_action.RENAME_SCHEMA,
	name:"",
	where_owner_name:"%",
	where_table_name:"%",
	expression:"",
	column:null,
	sub_action:DO.global_manipulation_sub_action.RENAME,
	to_value:"",
	from_value:"",
	where_table_tablespace_name:"%",
	where_index_tablespace_name:"%",
	where_expression:"",
	description:"",
	enabled:true
};

DO.global_manipulation_rule_Types = {
	action:"global_manipulation_action",
	column:"global_column_manipulation",
	sub_action:"global_manipulation_sub_action"
};


DO.global_manipulation = {
	name:"name",
	rules:"rules"
};

DO.global_manipulation_Validation = {
	name: {
		required: true
	}
};


DO.global_manipulation_Defaults = {
	name:"global_manipulation",
	rules:[]
};

DO.global_manipulation_Types = {
	rules:"global_manipulation_rule"
};


DO.tabledef = {
	name:"name",
	owner:"owner",
	id:"id",
	orig_db_id:"orig_db_id",
	version:"version",
	component_id:"component_id",
	columns:"columns",
	primary_key:"primary_key",
	num_of_rows:"num_of_rows",
	has_lobs:"has_lobs",
	flags:"flags",
	record_size:"record_size",
	table_size:"table_size",
	record_identifier:"record_identifier",
	collation:"collation",
	description:"description",
	ext:"ext",
	table_tablespace:"table_tablespace",
	segments:"segments",
	table_qri:"table_qri"
};

DO.tabledef_Validation = {
	name: {
		required: true
	},
	owner: {
		required: true
	},
	id: {
		number: true
	},
	orig_db_id: {
		number: true
	},
	version: {
		required: true,
		number: true
	},
	component_id: {
		required: true
	},
	num_of_rows: {
		number: true
	},
	flags: {
		number: true
	},
	record_size: {
		number: true
	},
	table_size: {
		number: true
	}
};


DO.tabledef_Defaults = {
	name:"",
	owner:"",
	id:0,
	orig_db_id:0,
	version:0,
	component_id:"",
	columns:[],
	primary_key:null,
	num_of_rows:0,
	has_lobs:false,
	flags:0,
	record_size:0,
	table_size:0,
	record_identifier:DO.record_identifier.RECORD_IDENTIFIER_NONE,
	collation:"",
	description:"",
	ext:[],
	table_tablespace:"",
	segments:null,
	table_qri:""
};

DO.tabledef_Types = {
	columns:"column_def",
	primary_key:"primary_key_def",
	record_identifier:"record_identifier",
	ext:"MetaDefExt",
	segments:"segmentation_info"
};


DO.tabledef_Aux = {
	table_tablespace: {
		"version": "6.1",
		"ui_type": "COMPONENT"
	},
	segments: {
		"version": "6.1"
	}
};

DO.MetaDefExt = {
	persistent:"persistent"
};

DO.MetaDefExt_Validation = {
};


DO.MetaDefExt_Defaults = {
	persistent:false
};

DO.MetaDefExt_Types = {
};


DO.column_def = {
	name:"name",
	id:"id",
	orig_db_id:"orig_db_id",
	type:"type",
	length:"length",
	precision:"precision",
	scale:"scale",
	nullable:"nullable",
	orig_db_type:"orig_db_type",
	bind_db_type:"bind_db_type",
	attributes:"attributes",
	flags:"flags",
	is_pk:"is_pk",
	codepage_id:"codepage_id",
	collation:"collation",
	description:"description",
	col_params:"col_params",
	ext:"ext",
	actual_converter_name:"actual_converter_name",
	orig_db_type_name:"orig_db_type_name",
	sub_type:"sub_type"
};

DO.column_def_Validation = {
	id: {
		number: true
	},
	orig_db_id: {
		number: true
	},
	length: {
		number: true
	},
	precision: {
		number: true
	},
	scale: {
		number: true
	},
	orig_db_type: {
		number: true
	},
	bind_db_type: {
		number: true
	},
	attributes: {
		number: true
	},
	flags: {
		number: true
	},
	codepage_id: {
		number: true
	}
};


DO.column_def_Defaults = {
	name:"",
	id:0,
	orig_db_id:0,
	type:DO.ar_data_type_options.KAR_DATA_TYPE_UNSPECIFIED,
	length:0,
	precision:0,
	scale:0,
	nullable:false,
	orig_db_type:0,
	bind_db_type:0,
	attributes:0,
	flags:0,
	is_pk:false,
	codepage_id:0,
	collation:"",
	description:"",
	col_params:"",
	ext:[],
	actual_converter_name:"",
	orig_db_type_name:"",
	sub_type:DO.ar_sub_data_type_options.KAR_SUB_DATA_TYPE_UNSPECIFIED
};

DO.column_def_Types = {
	type:"ar_data_type_options",
	ext:"MetaDefExt",
	sub_type:"ar_sub_data_type_options"
};


DO.segmentation_info = {
	is_supported:"is_supported",
	src_columns:"src_columns",
	src_partitions:"src_partitions"
};

DO.segmentation_info_Validation = {
};


DO.segmentation_info_Defaults = {
	is_supported:false,
	src_columns:[],
	src_partitions:null
};

DO.segmentation_info_Types = {
	src_columns:"column_def",
	src_partitions:"source_partitions"
};


DO.source_partitions = {
	partitions:"partitions"
};

DO.source_partitions_Validation = {
};


DO.source_partitions_Defaults = {
	partitions:[]
};

DO.source_partitions_Types = {
	partitions:"partition_info"
};


DO.partition_info = {
	partition_name:"partition_name",
	sub_partitions:"sub_partitions"
};

DO.partition_info_Validation = {
};


DO.partition_info_Defaults = {
	partition_name:"",
	sub_partitions:[]
};

DO.partition_info_Types = {
};


DO.ComposeBaseParams = {
	$type:"$type",
	server:"server"
};

DO.ComposeBaseParams_Validation = {
};


DO.ComposeBaseParams_Defaults = {
	$type:"ComposeBaseParams",
	server:"localhost"
};

DO.ComposeBaseParams_Types = {
};


DO.EngineBootSettings = {
	Signature:"Signature",
	PISetNr:"PISetNr",
	lastRunno:"lastRunno"
};

DO.EngineBootSettings_Validation = {
};


DO.EngineBootSettings_Defaults = {
	Signature:"",
	PISetNr:"",
	lastRunno:"-1"
};

DO.EngineBootSettings_Types = {
};


DO.SqlRecoverableExceptions = {
	sql_state_class:"sql_state_class",
	sql_error_code:"sql_error_code",
	max_retry_count:"max_retry_count",
	retry_interval:"retry_interval",
	initialized:"initialized"
};

DO.SqlRecoverableExceptions_Validation = {
	max_retry_count: {
		number: true
	},
	retry_interval: {
		number: true
	}
};


DO.SqlRecoverableExceptions_Defaults = {
	sql_state_class:"",
	sql_error_code:"",
	max_retry_count:0,
	retry_interval:0,
	initialized:false
};

DO.SqlRecoverableExceptions_Types = {
};


DO.GeneralSettings = {
	java_mem:"java_mem",
	command_file:"command_file",
	stt_date:"stt_date",
	up_ddate:"up_ddate",
	end_date:"end_date",
	tgt_os:"tgt_os",
	tgt_sh:"tgt_sh",
	validate_data_types:"validate_data_types",
	validate_only:"validate_only",
	fetch_size:"fetch_size",
	batch_max_rows:"batch_max_rows",
	nr_of_committed_rows:"nr_of_committed_rows",
	parameter_worm:"parameter_worm",
	instruction_delay:"instruction_delay",
	memory_reaper:"memory_reaper",
	ORACLE_DATADIRECT:"ORACLE_DATADIRECT",
	ORACLE_TNSNAMES:"ORACLE_TNSNAMES",
	SQLSERVER_DATADIRECT:"SQLSERVER_DATADIRECT",
	SQLSERVER_DRIVER_1_1:"SQLSERVER_DRIVER_1_1",
	JTDS:"JTDS",
	DB2_DATADIRECT:"DB2_DATADIRECT",
	encrypted_password:"encrypted_password",
	change_processing_by_query:"change_processing_by_query",
	from_date_source_field:"from_date_source_field",
	recoverableExceptions:"recoverableExceptions"
};

DO.GeneralSettings_Validation = {
	fetch_size: {
		number: true
	},
	batch_max_rows: {
		number: true
	},
	nr_of_committed_rows: {
		number: true
	}
};


DO.GeneralSettings_Defaults = {
	java_mem:"-Xms1024M -Xmx4096M",
	command_file:"",
	stt_date:"NOW",
	up_ddate:"NOW",
	end_date:"",
	tgt_os:DO.TargetOS.MSWL,
	tgt_sh:"cmd",
	validate_data_types:false,
	validate_only:false,
	fetch_size:1000,
	batch_max_rows:20,
	nr_of_committed_rows:10000,
	parameter_worm:true,
	instruction_delay:false,
	memory_reaper:false,
	ORACLE_DATADIRECT:false,
	ORACLE_TNSNAMES:"",
	SQLSERVER_DATADIRECT:false,
	SQLSERVER_DRIVER_1_1:true,
	JTDS:false,
	DB2_DATADIRECT:false,
	encrypted_password:true,
	change_processing_by_query:false,
	from_date_source_field:"",
	recoverableExceptions:null
};

DO.GeneralSettings_Types = {
	tgt_os:"TargetOS",
	recoverableExceptions:"SqlRecoverableExceptions"
};


DO.MoppingThreadSettings = {
	mop_direct_write:"mop_direct_write",
	mop_thread_pool_size:"mop_thread_pool_size",
	mop_thread_pool_max:"mop_thread_pool_max",
	mop_thread_queue_max:"mop_thread_queue_max",
	mop_thread_timeout:"mop_thread_timeout",
	mop_write_queue_max:"mop_write_queue_max",
	mop_no_id_ledelins:"mop_no_id_ledelins",
	mop_without_write:"mop_without_write"
};

DO.MoppingThreadSettings_Validation = {
	mop_thread_pool_size: {
		number: true
	},
	mop_thread_pool_max: {
		number: true
	},
	mop_thread_queue_max: {
		number: true
	},
	mop_thread_timeout: {
		number: true
	},
	mop_write_queue_max: {
		number: true
	}
};


DO.MoppingThreadSettings_Defaults = {
	mop_direct_write:false,
	mop_thread_pool_size:18,
	mop_thread_pool_max:18,
	mop_thread_queue_max:2500,
	mop_thread_timeout:3000,
	mop_write_queue_max:100,
	mop_no_id_ledelins:true,
	mop_without_write:false
};

DO.MoppingThreadSettings_Types = {
};


DO.EngineLoggingSettings = {
	log_level:"log_level",
	log_file:"log_file",
	log_file_timestamp:"log_file_timestamp",
	log_console:"log_console",
	log_stack_trace:"log_stack_trace",
	log_jdbc_driver_output:"log_jdbc_driver_output",
	log_mapping_fields:"log_mapping_fields",
	log_mapping_values:"log_mapping_values",
	log_sync_provider_output:"log_sync_provider_output",
	log_prep_statmt_bindings:"log_prep_statmt_bindings",
	log_dbms_leasing:"log_dbms_leasing",
	log_table_contents:"log_table_contents",
	log_sql_monitor_output:"log_sql_monitor_output",
	log_param_substitution:"log_param_substitution",
	log_mop_ids:"log_mop_ids",
	log_java_env:"log_java_env",
	log_mopping_state:"log_mopping_state",
	log_table_cache_rows:"log_table_cache_rows",
	print_final_log:"print_final_log",
	print_dbms_info:"print_dbms_info",
	create_missing_tables:"create_missing_tables"
};

DO.EngineLoggingSettings_Validation = {
	log_table_cache_rows: {
		number: true
	}
};


DO.EngineLoggingSettings_Defaults = {
	log_level:DO.LogLevel.INFO,
	log_file:"$project-path$\\$task-name$\\$task-name$_Log.log",
	log_file_timestamp:true,
	log_console:true,
	log_stack_trace:false,
	log_jdbc_driver_output:false,
	log_mapping_fields:false,
	log_mapping_values:false,
	log_sync_provider_output:false,
	log_prep_statmt_bindings:false,
	log_dbms_leasing:false,
	log_table_contents:false,
	log_sql_monitor_output:false,
	log_param_substitution:false,
	log_mop_ids:false,
	log_java_env:false,
	log_mopping_state:false,
	log_table_cache_rows:20,
	print_final_log:false,
	print_dbms_info:false,
	create_missing_tables:false
};

DO.EngineLoggingSettings_Types = {
	log_level:"LogLevel"
};


DO.DatabaseConnectionSettings = {
	db_pool_size:"db_pool_size",
	db_reap_interval:"db_reap_interval",
	db_lease_timeout:"db_lease_timeout",
	print_db_leases:"print_db_leases"
};

DO.DatabaseConnectionSettings_Validation = {
	db_pool_size: {
		number: true
	},
	db_reap_interval: {
		number: true
	},
	db_lease_timeout: {
		number: true
	}
};


DO.DatabaseConnectionSettings_Defaults = {
	db_pool_size:200,
	db_reap_interval:30000,
	db_lease_timeout:60000,
	print_db_leases:false
};

DO.DatabaseConnectionSettings_Types = {
};


DO.ThreadConnectionSettings = {
	thread_pool_size:"thread_pool_size",
	thread_pool_max:"thread_pool_max",
	thread_queue_max:"thread_queue_max",
	thread_timeout:"thread_timeout"
};

DO.ThreadConnectionSettings_Validation = {
	thread_pool_size: {
		number: true
	},
	thread_pool_max: {
		number: true
	},
	thread_queue_max: {
		number: true
	},
	thread_timeout: {
		number: true
	}
};


DO.ThreadConnectionSettings_Defaults = {
	thread_pool_size:10,
	thread_pool_max:18,
	thread_queue_max:10000,
	thread_timeout:3000
};

DO.ThreadConnectionSettings_Types = {
};


DO.AdvancedSettings = {
	retain_stg_tables:"retain_stg_tables",
	retain_imt_tables:"retain_imt_tables",
	imt_tables_volatile:"imt_tables_volatile",
	write_etl_cmnds_to_db:"write_etl_cmnds_to_db"
};

DO.AdvancedSettings_Validation = {
};


DO.AdvancedSettings_Defaults = {
	retain_stg_tables:false,
	retain_imt_tables:false,
	imt_tables_volatile:false,
	write_etl_cmnds_to_db:false
};

DO.AdvancedSettings_Types = {
};


DO.EngineSettings = {
	thread_connection_settings:"thread_connection_settings",
	database_connection_settings:"database_connection_settings",
	engine_logging_settings:"engine_logging_settings",
	mopping_thread_settings:"mopping_thread_settings",
	general_settings:"general_settings",
	advanced_settings:"advanced_settings",
	spark_settings:"spark_settings"
};

DO.EngineSettings_Validation = {
};


DO.EngineSettings_Defaults = {
	thread_connection_settings:null,
	database_connection_settings:null,
	engine_logging_settings:null,
	mopping_thread_settings:null,
	general_settings:null,
	advanced_settings:null,
	spark_settings:null
};

DO.EngineSettings_Types = {
	thread_connection_settings:"ThreadConnectionSettings",
	database_connection_settings:"DatabaseConnectionSettings",
	engine_logging_settings:"EngineLoggingSettings",
	mopping_thread_settings:"MoppingThreadSettings",
	general_settings:"GeneralSettings",
	advanced_settings:"AdvancedSettings",
	spark_settings:"SparkSettings"
};


DO.SparkSettings = {
	properties:"properties"
};

DO.SparkSettings_Validation = {
};


DO.SparkSettings_Defaults = {
	properties:{}
};

DO.SparkSettings_Types = {
	properties:"KeyValueSparkProps"
};


DO.KeyValueSparkProps = {
	key:"key",
	value:"value"
};

DO.KeyValueSparkProps_Validation = {
};


DO.KeyValueSparkProps_Defaults = {
	key:"",
	value:""
};

DO.KeyValueSparkProps_Types = {
};


DO.ETLCommand = {
	pset_number:"pset_number",
	process_number:"process_number",
	process_step:"process_step",
	process_type:"process_type",
	process_name:"process_name",
	environment:"environment",
	parameter_decl:"parameter_decl",
	only_if:"only_if",
	ent_key:"ent_key",
	sql_statement:"sql_statement",
	sql_overflow:"sql_overflow",
	mopping_type:"mopping_type",
	related_entity:"related_entity",
	delimeter:"delimeter",
	contains_names:"contains_names",
	source_type:"source_type",
	source_table:"source_table",
	source_environment:"source_environment",
	target_table:"target_table",
	show_nr:"show_nr",
	parameters_list:"parameters_list",
	internal_cmd:"internal_cmd",
	spark_command:"spark_command",
	UdefType:"UdefType"
};

DO.ETLCommand_Validation = {
	pset_number: {
		number: true
	},
	process_number: {
		number: true
	},
	process_step: {
		number: true
	},
	environment: {
		number: true
	},
	ent_key: {
		number: true
	},
	sql_overflow: {
		number: true
	},
	mopping_type: {
		number: true
	},
	related_entity: {
		number: true
	},
	contains_names: {
		number: true
	},
	source_environment: {
		number: true
	},
	show_nr: {
		number: true
	},
	UdefType: {
		number: true
	}
};


DO.ETLCommand_Defaults = {
	pset_number:0,
	process_number:0,
	process_step:0,
	process_type:DO.ETLCmdType.Initial,
	process_name:"",
	environment:0,
	parameter_decl:"",
	only_if:"",
	ent_key:0,
	sql_statement:"",
	sql_overflow:0,
	mopping_type:0,
	related_entity:0,
	delimeter:"",
	contains_names:0,
	source_type:"",
	source_table:"",
	source_environment:0,
	target_table:"",
	show_nr:0,
	parameters_list:[],
	internal_cmd:false,
	spark_command:null,
	UdefType:0
};

DO.ETLCommand_Types = {
	process_type:"ETLCmdType",
	spark_command:"SparkCommandBase"
};


DO.SparkCommandBase = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version"
};

DO.SparkCommandBase_Validation = {
	version: {
		number: true
	}
};


DO.SparkCommandBase_Defaults = {
	$type:"SparkCommandBase",
	metadata:null,
	name:"",
	version:0
};

DO.SparkCommandBase_Types = {
	metadata:"DTObjectMetaData"
};


DO.BucketInfo = {
	use_buckets:"use_buckets",
	buckets_columns:"buckets_columns"
};

DO.BucketInfo_Validation = {
	buckets_columns: {
		number: true
	}
};


DO.BucketInfo_Defaults = {
	use_buckets:false,
	buckets_columns:0
};

DO.BucketInfo_Types = {
};


DO.SparkTableInfo = {
	table_name:"table_name",
	schema:"schema",
	location:"location",
	partrition_by_columns:"partrition_by_columns",
	bucket_info:"bucket_info",
	table_format:"table_format",
	save_mode:"save_mode",
	compression_type:"compression_type",
	merge_schema:"merge_schema",
	is_bigquery_provisioning:"is_bigquery_provisioning",
	google_project_id:"google_project_id"
};

DO.SparkTableInfo_Validation = {
};


DO.SparkTableInfo_Defaults = {
	table_name:"",
	schema:"",
	location:"",
	partrition_by_columns:[],
	bucket_info:null,
	table_format:DO.DatalakeStorageType.PARQUET,
	save_mode:DO.TableWriteMode.Overwrite,
	compression_type:"",
	merge_schema:true,
	is_bigquery_provisioning:false,
	google_project_id:""
};

DO.SparkTableInfo_Types = {
	bucket_info:"BucketInfo",
	table_format:"DatalakeStorageType",
	save_mode:"TableWriteMode"
};


DO.DataSet = {
	$type:"$type",
	table_info:"table_info",
	columns:"columns"
};

DO.DataSet_Validation = {
};


DO.DataSet_Defaults = {
	$type:"DataSet",
	table_info:null,
	columns:[]
};

DO.DataSet_Types = {
	table_info:"SparkTableInfo",
	columns:"Column"
};


DO.SQLTransform = {
	spark_select_sql_statement:"spark_select_sql_statement",
	spark_trans_view_name:"spark_trans_view_name"
};

DO.SQLTransform_Validation = {
};


DO.SQLTransform_Defaults = {
	spark_select_sql_statement:"",
	spark_trans_view_name:""
};

DO.SQLTransform_Types = {
};


DO.SourceDataSet = {
	$type:"$type",
	table_info:"table_info",
	columns:"columns",
	spark_select_sql_statement:"spark_select_sql_statement"
};

DO.SourceDataSet_Validation = {
};


DO.SourceDataSet_Defaults = {
	$type:"SourceDataSet",
	table_info:null,
	columns:[],
	spark_select_sql_statement:""
};

DO.SourceDataSet_Types = {
	table_info:"SparkTableInfo",
	columns:"Column"
};


DO.LoadTablesInfo = {
	src_tables_info:"src_tables_info",
	load_tables_view_name:"load_tables_view_name"
};

DO.LoadTablesInfo_Validation = {
};


DO.LoadTablesInfo_Defaults = {
	src_tables_info:[],
	load_tables_view_name:""
};

DO.LoadTablesInfo_Types = {
	src_tables_info:"SourceDataSet"
};


DO.LoadTableInfo = {
	src_table_info:"src_table_info",
	load_table_view_name:"load_table_view_name"
};

DO.LoadTableInfo_Validation = {
};


DO.LoadTableInfo_Defaults = {
	src_table_info:null,
	load_table_view_name:""
};

DO.LoadTableInfo_Types = {
	src_table_info:"SourceDataSet"
};


DO.TargetDataSet = {
	$type:"$type",
	table_info:"table_info",
	columns:"columns",
	spark_select_sql_statement:"spark_select_sql_statement"
};

DO.TargetDataSet_Validation = {
};


DO.TargetDataSet_Defaults = {
	$type:"TargetDataSet",
	table_info:null,
	columns:[],
	spark_select_sql_statement:""
};

DO.TargetDataSet_Types = {
	table_info:"SparkTableInfo",
	columns:"Column"
};


DO.SparkLoadTransSaveTable = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	load_tables_info:"load_tables_info",
	transform_table_info:"transform_table_info",
	save_table_info:"save_table_info"
};

DO.SparkLoadTransSaveTable_Validation = {
	version: {
		number: true
	}
};


DO.SparkLoadTransSaveTable_Defaults = {
	$type:"SparkLoadTransSaveTable",
	metadata:null,
	name:"",
	version:0,
	load_tables_info:null,
	transform_table_info:[],
	save_table_info:null
};

DO.SparkLoadTransSaveTable_Types = {
	metadata:"DTObjectMetaData",
	load_tables_info:"LoadTablesInfo",
	transform_table_info:"SQLTransform",
	save_table_info:"TargetDataSet"
};


DO.SparkLoadTransSaveTables = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	load_tables_info:"load_tables_info",
	transform_table_info:"transform_table_info",
	save_table_info:"save_table_info"
};

DO.SparkLoadTransSaveTables_Validation = {
	version: {
		number: true
	}
};


DO.SparkLoadTransSaveTables_Defaults = {
	$type:"SparkLoadTransSaveTables",
	metadata:null,
	name:"",
	version:0,
	load_tables_info:[],
	transform_table_info:[],
	save_table_info:null
};

DO.SparkLoadTransSaveTables_Types = {
	metadata:"DTObjectMetaData",
	load_tables_info:"LoadTableInfo",
	transform_table_info:"SQLTransform",
	save_table_info:"TargetDataSet"
};


DO.SparkLoadTransCalcTable = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	split_sql_statement:"split_sql_statement",
	load_tables_info:"load_tables_info",
	transform_table_info:"transform_table_info"
};

DO.SparkLoadTransCalcTable_Validation = {
	version: {
		number: true
	}
};


DO.SparkLoadTransCalcTable_Defaults = {
	$type:"SparkLoadTransCalcTable",
	metadata:null,
	name:"",
	version:0,
	split_sql_statement:false,
	load_tables_info:null,
	transform_table_info:[]
};

DO.SparkLoadTransCalcTable_Types = {
	metadata:"DTObjectMetaData",
	load_tables_info:"LoadTablesInfo",
	transform_table_info:"SQLTransform"
};


DO.SparkFlowAnchor = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	cmd_query:"cmd_query"
};

DO.SparkFlowAnchor_Validation = {
	version: {
		number: true
	}
};


DO.SparkFlowAnchor_Defaults = {
	$type:"SparkFlowAnchor",
	metadata:null,
	name:"",
	version:0,
	cmd_query:""
};

DO.SparkFlowAnchor_Types = {
	metadata:"DTObjectMetaData"
};


DO.SparkDeleteDeltaTableFiles = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	database:"database",
	rel_table_paths:"rel_table_paths",
	max_timeframe:"max_timeframe"
};

DO.SparkDeleteDeltaTableFiles_Validation = {
	version: {
		number: true
	}
};


DO.SparkDeleteDeltaTableFiles_Defaults = {
	$type:"SparkDeleteDeltaTableFiles",
	metadata:null,
	name:"",
	version:0,
	database:null,
	rel_table_paths:[],
	max_timeframe:""
};

DO.SparkDeleteDeltaTableFiles_Types = {
	metadata:"DTObjectMetaData",
	database:"DatabaseDto"
};


DO.SparkSqlByJdbc = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	sql_stmt:"sql_stmt"
};

DO.SparkSqlByJdbc_Validation = {
	version: {
		number: true
	}
};


DO.SparkSqlByJdbc_Defaults = {
	$type:"SparkSqlByJdbc",
	metadata:null,
	name:"",
	version:0,
	sql_stmt:""
};

DO.SparkSqlByJdbc_Types = {
	metadata:"DTObjectMetaData"
};


DO.SparkSetValueState = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	save_table_info:"save_table_info"
};

DO.SparkSetValueState_Validation = {
	version: {
		number: true
	}
};


DO.SparkSetValueState_Defaults = {
	$type:"SparkSetValueState",
	metadata:null,
	name:"",
	version:0,
	save_table_info:null
};

DO.SparkSetValueState_Types = {
	metadata:"DTObjectMetaData",
	save_table_info:"TargetDataSet"
};


DO.SparkGetValueState = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	load_tables_info:"load_tables_info",
	transform_table_info:"transform_table_info",
	default_value:"default_value"
};

DO.SparkGetValueState_Validation = {
	version: {
		number: true
	}
};


DO.SparkGetValueState_Defaults = {
	$type:"SparkGetValueState",
	metadata:null,
	name:"",
	version:0,
	load_tables_info:null,
	transform_table_info:[],
	default_value:""
};

DO.SparkGetValueState_Types = {
	metadata:"DTObjectMetaData",
	load_tables_info:"LoadTablesInfo",
	transform_table_info:"SQLTransform"
};


DO.SqlTblDef = {
	name:"name",
	schema:"schema",
	alias:"alias",
	join_type:"join_type",
	join_clauses:"join_clauses",
	entity_id:"entity_id",
	block:"block",
	indx_info:"indx_info",
	dist_info:"dist_info",
	sort_info:"sort_info",
	table_usage:"table_usage",
	part_info:"part_info",
	catalog:"catalog",
	union_expression:"union_expression"
};

DO.SqlTblDef_Validation = {
	entity_id: {
		number: true
	},
	block: {
		number: true
	}
};


DO.SqlTblDef_Defaults = {
	name:"",
	schema:"",
	alias:"",
	join_type:"INNER JOIN",
	join_clauses:[],
	entity_id:0,
	block:0,
	indx_info:null,
	dist_info:null,
	sort_info:null,
	table_usage:DO.TableUsage.PERSISTENT,
	part_info:null,
	catalog:"",
	union_expression:""
};

DO.SqlTblDef_Types = {
	indx_info:"SQLIndxInfo",
	dist_info:"SQLDistInfo",
	sort_info:"SQLSortInfo",
	table_usage:"TableUsage",
	part_info:"SQLPartInfo"
};


DO.SqlCteDef = {
	definition:"definition",
	name:"name",
	indx_info:"indx_info",
	dist_info:"dist_info"
};

DO.SqlCteDef_Validation = {
};


DO.SqlCteDef_Defaults = {
	definition:"",
	name:"",
	indx_info:null,
	dist_info:null
};

DO.SqlCteDef_Types = {
	indx_info:"SQLIndxInfo",
	dist_info:"SQLDistInfo"
};


DO.SQLIndxInfo = {
	name:"name",
	cols:"cols",
	property1:"property1",
	property2:"property2",
	property3:"property3"
};

DO.SQLIndxInfo_Validation = {
};


DO.SQLIndxInfo_Defaults = {
	name:"",
	cols:[],
	property1:"",
	property2:"",
	property3:""
};

DO.SQLIndxInfo_Types = {
};


DO.SQLPartInfo = {
	cols:"cols"
};

DO.SQLPartInfo_Validation = {
};


DO.SQLPartInfo_Defaults = {
	cols:[]
};

DO.SQLPartInfo_Types = {
};


DO.SQLDistInfo = {
	name:"name",
	cols:"cols",
	property1:"property1",
	property2:"property2",
	property3:"property3"
};

DO.SQLDistInfo_Validation = {
};


DO.SQLDistInfo_Defaults = {
	name:"",
	cols:[],
	property1:"",
	property2:"",
	property3:""
};

DO.SQLDistInfo_Types = {
};


DO.SQLSortInfo = {
	name:"name",
	cols:"cols",
	property1:"property1",
	property2:"property2",
	property3:"property3"
};

DO.SQLSortInfo_Validation = {
};


DO.SQLSortInfo_Defaults = {
	name:"",
	cols:[],
	property1:"",
	property2:"",
	property3:""
};

DO.SQLSortInfo_Types = {
};


DO.ETLFlow = {
	pset_number:"pset_number",
	process_number:"process_number",
	wait_for_process:"wait_for_process",
	wait_reason:"wait_reason"
};

DO.ETLFlow_Validation = {
	pset_number: {
		number: true
	},
	process_number: {
		number: true
	},
	wait_for_process: {
		number: true
	}
};


DO.ETLFlow_Defaults = {
	pset_number:0,
	process_number:0,
	wait_for_process:0,
	wait_reason:""
};

DO.ETLFlow_Types = {
};


DO.ETLVersion = {
	major_version:"major_version",
	minor_version:"minor_version",
	sp_version:"sp_version",
	build_number:"build_number"
};

DO.ETLVersion_Validation = {
	major_version: {
		number: true
	},
	minor_version: {
		number: true
	},
	sp_version: {
		number: true
	},
	build_number: {
		number: true
	}
};


DO.ETLVersion_Defaults = {
	major_version:0,
	minor_version:0,
	sp_version:0,
	build_number:0
};

DO.ETLVersion_Types = {
};


DO.ETLCommandsInfoDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	databases:"databases",
	etl_commands:"etl_commands",
	etl_flow:"etl_flow",
	batch_state_path:"batch_state_path",
	task_type:"task_type",
	etl_version:"etl_version"
};

DO.ETLCommandsInfoDto_Validation = {
	version: {
		number: true
	}
};


DO.ETLCommandsInfoDto_Defaults = {
	$type:"ETLCommandsInfoDto",
	metadata:null,
	name:"",
	version:0,
	databases:[],
	etl_commands:[],
	etl_flow:[],
	batch_state_path:"",
	task_type:DO.ETLType.None,
	etl_version:null
};

DO.ETLCommandsInfoDto_Types = {
	metadata:"DTObjectMetaData",
	databases:"DatabaseDto",
	etl_commands:"ETLCommand",
	etl_flow:"ETLFlow",
	task_type:"ETLType",
	etl_version:"ETLVersion"
};


DO.ETLCommandRunInfo = {
	process_number:"process_number",
	process_type:"process_type",
	process_name:"process_name",
	status:"status",
	start_time:"start_time",
	end_time:"end_time",
	elapsed_time_num:"elapsed_time_num",
	rows_read:"rows_read",
	rows_written:"rows_written",
	rows_affected:"rows_affected",
	reason:"reason",
	entity_id:"entity_id",
	process_step:"process_step"
};

DO.ETLCommandRunInfo_Validation = {
	process_number: {
		number: true
	},
	elapsed_time_num: {
		number: true
	},
	rows_read: {
		number: true
	},
	rows_written: {
		number: true
	},
	rows_affected: {
		number: true
	},
	entity_id: {
		number: true
	},
	process_step: {
		number: true
	}
};


DO.ETLCommandRunInfo_Defaults = {
	process_number:0,
	process_type:DO.ETLCmdType.Initial,
	process_name:"",
	status:DO.ETLCommandStatus.BUSY,
	start_time:"",
	end_time:"",
	elapsed_time_num:0,
	rows_read:0,
	rows_written:0,
	rows_affected:0,
	reason:"",
	entity_id:0,
	process_step:0
};

DO.ETLCommandRunInfo_Types = {
	process_type:"ETLCmdType",
	status:"ETLCommandStatus"
};


DO.ETLRunInfoDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	etl_commands_run_info:"etl_commands_run_info",
	is_started:"is_started",
	task_stage:"task_stage",
	pid:"pid"
};

DO.ETLRunInfoDto_Validation = {
	version: {
		number: true
	},
	pid: {
		number: true
	}
};


DO.ETLRunInfoDto_Defaults = {
	$type:"ETLRunInfoDto",
	metadata:null,
	name:"",
	version:0,
	etl_commands_run_info:[],
	is_started:false,
	task_stage:DO.ETLStage.FULL_LOAD,
	pid:0
};

DO.ETLRunInfoDto_Types = {
	metadata:"DTObjectMetaData",
	etl_commands_run_info:"ETLCommandRunInfo",
	task_stage:"ETLStage"
};


DO.SparkRunInfo = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	etl_commands_run_info:"etl_commands_run_info",
	is_started:"is_started",
	task_stage:"task_stage",
	pid:"pid",
	spark_job_url:"spark_job_url",
	application_id:"application_id",
	app_name:"app_name"
};

DO.SparkRunInfo_Validation = {
	version: {
		number: true
	},
	pid: {
		number: true
	}
};


DO.SparkRunInfo_Defaults = {
	$type:"SparkRunInfo",
	metadata:null,
	name:"",
	version:0,
	etl_commands_run_info:[],
	is_started:false,
	task_stage:DO.ETLStage.FULL_LOAD,
	pid:0,
	spark_job_url:"",
	application_id:"",
	app_name:""
};

DO.SparkRunInfo_Types = {
	metadata:"DTObjectMetaData",
	etl_commands_run_info:"ETLCommandRunInfo",
	task_stage:"ETLStage"
};


DO.LandingZone = {
	landing_type:"landing_type",
	db_name:"db_name",
	schema_name:"schema_name",
	replicate_task_type:"replicate_task_type",
	error_marts_schema:"error_marts_schema",
	replicate_task_name:"replicate_task_name",
	associate_with_replicate_task:"associate_with_replicate_task",
	replicate_server_name:"replicate_server_name",
	archive_settings:"archive_settings",
	task_uuid:"task_uuid",
	variant_type:"variant_type"
};

DO.LandingZone_Validation = {
};


DO.LandingZone_Defaults = {
	landing_type:DO.LandingType.DATABASE,
	db_name:"",
	schema_name:"",
	replicate_task_type:DO.ReplicateTaskType.FULL_LOAD_AND_CDC,
	error_marts_schema:"",
	replicate_task_name:"",
	associate_with_replicate_task:false,
	replicate_server_name:"",
	archive_settings:null,
	task_uuid:"",
	variant_type:DO.SnowflakeVariantType.JSON
};

DO.LandingZone_Types = {
	landing_type:"LandingType",
	replicate_task_type:"ReplicateTaskType",
	archive_settings:"ArchiveSettings",
	variant_type:"SnowflakeVariantType"
};


DO.DatabaseDtoPP = {
	usage:"usage"
};

DO.DatabaseDtoPP_Validation = {
};


DO.DatabaseDtoPP_Defaults = {
	usage:DO.DatabaseUsage.ALL
};

DO.DatabaseDtoPP_Types = {
	usage:"DatabaseUsage"
};


DO.ArchiveSettings = {
	$type:"$type",
	ct_post_processing:"ct_post_processing",
	archive_ct_schema:"archive_ct_schema",
	archive_ct_database:"archive_ct_database"
};

DO.ArchiveSettings_Validation = {
};


DO.ArchiveSettings_Defaults = {
	$type:"ArchiveSettings",
	ct_post_processing:DO.ChangeTablesPostProcessing.DO_NOTHING,
	archive_ct_schema:"",
	archive_ct_database:""
};

DO.ArchiveSettings_Types = {
	ct_post_processing:"ChangeTablesPostProcessing"
};


DO.HiveArchiveSettings = {
	$type:"$type",
	ct_post_processing:"ct_post_processing",
	archive_ct_schema:"archive_ct_schema",
	archive_ct_database:"archive_ct_database",
	archive_format:"archive_format"
};

DO.HiveArchiveSettings_Validation = {
};


DO.HiveArchiveSettings_Defaults = {
	$type:"HiveArchiveSettings",
	ct_post_processing:DO.ChangeTablesPostProcessing.DO_NOTHING,
	archive_ct_schema:"",
	archive_ct_database:"",
	archive_format:DO.DatalakeStorageType.ORC
};

DO.HiveArchiveSettings_Types = {
	ct_post_processing:"ChangeTablesPostProcessing",
	archive_format:"DatalakeStorageType"
};


DO.SparkArchiveSettings = {
	$type:"$type",
	ct_post_processing:"ct_post_processing",
	archive_ct_schema:"archive_ct_schema",
	archive_ct_database:"archive_ct_database",
	archive_format:"archive_format"
};

DO.SparkArchiveSettings_Validation = {
};


DO.SparkArchiveSettings_Defaults = {
	$type:"SparkArchiveSettings",
	ct_post_processing:DO.ChangeTablesPostProcessing.DO_NOTHING,
	archive_ct_schema:"",
	archive_ct_database:"",
	archive_format:DO.DatalakeStorageType.ORC
};

DO.SparkArchiveSettings_Types = {
	ct_post_processing:"ChangeTablesPostProcessing",
	archive_format:"DatalakeStorageType"
};


DO.DbBaseSettings = {
	$type:"$type"
};

DO.DbBaseSettings_Validation = {
};


DO.DbBaseSettings_Defaults = {
	$type:"DbBaseSettings"
};

DO.DbBaseSettings_Types = {
};


DO.OracleDbSettings = {
	$type:"$type"
};

DO.OracleDbSettings_Validation = {
};


DO.OracleDbSettings_Defaults = {
	$type:"OracleDbSettings"
};

DO.OracleDbSettings_Types = {
};


DO.RedshiftDbSettings = {
	$type:"$type"
};

DO.RedshiftDbSettings_Validation = {
};


DO.RedshiftDbSettings_Defaults = {
	$type:"RedshiftDbSettings"
};

DO.RedshiftDbSettings_Types = {
};


DO.SnowflakeDbSettings = {
	$type:"$type",
	warehouse:"warehouse"
};

DO.SnowflakeDbSettings_Validation = {
};


DO.SnowflakeDbSettings_Defaults = {
	$type:"SnowflakeDbSettings",
	warehouse:""
};

DO.SnowflakeDbSettings_Types = {
};


DO.SqlServerDbSettings = {
	$type:"$type",
	windows_authentication:"windows_authentication"
};

DO.SqlServerDbSettings_Validation = {
};


DO.SqlServerDbSettings_Defaults = {
	$type:"SqlServerDbSettings",
	windows_authentication:false
};

DO.SqlServerDbSettings_Types = {
};


DO.TeradataDbSettings = {
	$type:"$type",
	authentication_mechanism:"authentication_mechanism"
};

DO.TeradataDbSettings_Validation = {
};


DO.TeradataDbSettings_Defaults = {
	$type:"TeradataDbSettings",
	authentication_mechanism:""
};

DO.TeradataDbSettings_Types = {
};


DO.AzureDWHDbSettings = {
	$type:"$type",
	trust_server_certificate:"trust_server_certificate",
	host_name_in_certificate:"host_name_in_certificate",
	login_timeout:"login_timeout",
	encrypt:"encrypt",
	use_ssl:"use_ssl"
};

DO.AzureDWHDbSettings_Validation = {
	login_timeout: {
		number: true
	}
};


DO.AzureDWHDbSettings_Defaults = {
	$type:"AzureDWHDbSettings",
	trust_server_certificate:false,
	host_name_in_certificate:"*.database.windows.net",
	login_timeout:30,
	encrypt:true,
	use_ssl:true
};

DO.AzureDWHDbSettings_Types = {
};


DO.BigQueryDbSettings = {
	$type:"$type",
	service_account_key:"service_account_key",
	region:"region"
};

DO.BigQueryDbSettings_Validation = {
};


DO.BigQueryDbSettings_Defaults = {
	$type:"BigQueryDbSettings",
	service_account_key:"",
	region:"US"
};

DO.BigQueryDbSettings_Types = {
};


DO.HadoopAuthenticationSettings = {
	$type:"$type"
};

DO.HadoopAuthenticationSettings_Validation = {
};


DO.HadoopAuthenticationSettings_Defaults = {
	$type:"HadoopAuthenticationSettings"
};

DO.HadoopAuthenticationSettings_Types = {
};


DO.HadoopUserConfiguration = {
	$type:"$type"
};

DO.HadoopUserConfiguration_Validation = {
};


DO.HadoopUserConfiguration_Defaults = {
	$type:"HadoopUserConfiguration"
};

DO.HadoopUserConfiguration_Types = {
};


DO.HDInsightConfigurationBase = {
	$type:"$type",
	gateway_path:"gateway_path"
};

DO.HDInsightConfigurationBase_Validation = {
};


DO.HDInsightConfigurationBase_Defaults = {
	$type:"HDInsightConfigurationBase",
	gateway_path:"/hive2"
};

DO.HDInsightConfigurationBase_Types = {
};


DO.HDInsightConfiguration = {
	$type:"$type",
	gateway_path:"gateway_path"
};

DO.HDInsightConfiguration_Validation = {
};


DO.HDInsightConfiguration_Defaults = {
	$type:"HDInsightConfiguration",
	gateway_path:"/hive2"
};

DO.HDInsightConfiguration_Types = {
};


DO.HDInsightConfigurationRemoteAgent = {
	$type:"$type",
	gateway_path:"gateway_path"
};

DO.HDInsightConfigurationRemoteAgent_Validation = {
};


DO.HDInsightConfigurationRemoteAgent_Defaults = {
	$type:"HDInsightConfigurationRemoteAgent",
	gateway_path:"/hive2"
};

DO.HDInsightConfigurationRemoteAgent_Types = {
};


DO.SSLConfiguration = {
	use_ssl:"use_ssl",
	allow_self_signed_certs:"allow_self_signed_certs",
	ssl_trust_store_path:"ssl_trust_store_path",
	ssl_trust_store_password:"ssl_trust_store_password"
};

DO.SSLConfiguration_Validation = {
};


DO.SSLConfiguration_Defaults = {
	use_ssl:false,
	allow_self_signed_certs:false,
	ssl_trust_store_path:"",
	ssl_trust_store_password:""
};

DO.SSLConfiguration_Types = {
};


DO.KnoxConfiguration = {
	$type:"$type",
	gateway_path:"gateway_path",
	cluster_name:"cluster_name"
};

DO.KnoxConfiguration_Validation = {
};


DO.KnoxConfiguration_Defaults = {
	$type:"KnoxConfiguration",
	gateway_path:"",
	cluster_name:""
};

DO.KnoxConfiguration_Types = {
};


DO.HadoopKerberosConfiguration = {
	$type:"$type",
	key_tab_file_path:"key_tab_file_path",
	principal:"principal",
	realm:"realm",
	service_name:"service_name",
	kdc_server_type:"kdc_server_type",
	host_fqdn:"host_fqdn"
};

DO.HadoopKerberosConfiguration_Validation = {
};


DO.HadoopKerberosConfiguration_Defaults = {
	$type:"HadoopKerberosConfiguration",
	key_tab_file_path:"",
	principal:"",
	realm:"",
	service_name:"hive",
	kdc_server_type:DO.KDCServerType.MIT,
	host_fqdn:""
};

DO.HadoopKerberosConfiguration_Types = {
	kdc_server_type:"KDCServerType"
};


DO.DatabricksConfiguration = {
	$type:"$type",
	gateway_path:"gateway_path"
};

DO.DatabricksConfiguration_Validation = {
};


DO.DatabricksConfiguration_Defaults = {
	$type:"DatabricksConfiguration",
	gateway_path:""
};

DO.DatabricksConfiguration_Types = {
};


DO.HiveDbSettings = {
	$type:"$type",
	authentication_type:"authentication_type",
	authentication_settings:"authentication_settings",
	ssl_configuration:"ssl_configuration",
	is_glue_metadata:"is_glue_metadata"
};

DO.HiveDbSettings_Validation = {
};


DO.HiveDbSettings_Defaults = {
	$type:"HiveDbSettings",
	authentication_type:DO.HadoopAuthenticationType.USERNAME,
	authentication_settings:null,
	ssl_configuration:null,
	is_glue_metadata:false
};

DO.HiveDbSettings_Types = {
	authentication_type:"HadoopAuthenticationType",
	authentication_settings:"HadoopAuthenticationSettings",
	ssl_configuration:"SSLConfiguration"
};


DO.DatabricksDbSettings = {
	$type:"$type",
	authentication_type:"authentication_type",
	authentication_settings:"authentication_settings",
	ssl_configuration:"ssl_configuration",
	is_glue_metadata:"is_glue_metadata"
};

DO.DatabricksDbSettings_Validation = {
};


DO.DatabricksDbSettings_Defaults = {
	$type:"DatabricksDbSettings",
	authentication_type:DO.HadoopAuthenticationType.USERNAME,
	authentication_settings:null,
	ssl_configuration:null,
	is_glue_metadata:false
};

DO.DatabricksDbSettings_Types = {
	authentication_type:"HadoopAuthenticationType",
	authentication_settings:"HadoopAuthenticationSettings",
	ssl_configuration:"SSLConfiguration"
};


DO.SparkDbSettings = {
	$type:"$type",
	authentication_type:"authentication_type",
	authentication_settings:"authentication_settings",
	ssl_configuration:"ssl_configuration",
	is_glue_metadata:"is_glue_metadata",
	data_store:"data_store",
	data_store_type:"data_store_type"
};

DO.SparkDbSettings_Validation = {
};


DO.SparkDbSettings_Defaults = {
	$type:"SparkDbSettings",
	authentication_type:DO.HadoopAuthenticationType.USERNAME,
	authentication_settings:null,
	ssl_configuration:null,
	is_glue_metadata:false,
	data_store:null,
	data_store_type:DO.DataStoreType.NONE
};

DO.SparkDbSettings_Types = {
	authentication_type:"HadoopAuthenticationType",
	authentication_settings:"HadoopAuthenticationSettings",
	ssl_configuration:"SSLConfiguration",
	data_store:"DataStoreBase",
	data_store_type:"DataStoreType"
};


DO.DataStoreBase = {
	$type:"$type",
	hive_external_table:"hive_external_table"
};

DO.DataStoreBase_Validation = {
};


DO.DataStoreBase_Defaults = {
	$type:"DataStoreBase",
	hive_external_table:false
};

DO.DataStoreBase_Types = {
};


DO.DataStoreHive = {
	$type:"$type",
	hive_external_table:"hive_external_table"
};

DO.DataStoreHive_Validation = {
};


DO.DataStoreHive_Defaults = {
	$type:"DataStoreHive",
	hive_external_table:false
};

DO.DataStoreHive_Types = {
};


DO.DataStoreDatabricks = {
	$type:"$type",
	hive_external_table:"hive_external_table"
};

DO.DataStoreDatabricks_Validation = {
};


DO.DataStoreDatabricks_Defaults = {
	$type:"DataStoreDatabricks",
	hive_external_table:false
};

DO.DataStoreDatabricks_Types = {
};


DO.DataStoreHdfs = {
	$type:"$type",
	hive_external_table:"hive_external_table",
	root_location_path:"root_location_path"
};

DO.DataStoreHdfs_Validation = {
};


DO.DataStoreHdfs_Defaults = {
	$type:"DataStoreHdfs",
	hive_external_table:false,
	root_location_path:""
};

DO.DataStoreHdfs_Types = {
};


DO.DataStoreGen2 = {
	$type:"$type",
	hive_external_table:"hive_external_table",
	file_system_name:"file_system_name",
	root_location_path:"root_location_path",
	storage_name:"storage_name"
};

DO.DataStoreGen2_Validation = {
};


DO.DataStoreGen2_Defaults = {
	$type:"DataStoreGen2",
	hive_external_table:false,
	file_system_name:"",
	root_location_path:"",
	storage_name:""
};

DO.DataStoreGen2_Types = {
};


DO.DataStoreS3 = {
	$type:"$type",
	hive_external_table:"hive_external_table",
	base_directory_path:"base_directory_path",
	bucket_path:"bucket_path"
};

DO.DataStoreS3_Validation = {
};


DO.DataStoreS3_Defaults = {
	$type:"DataStoreS3",
	hive_external_table:false,
	base_directory_path:"",
	bucket_path:""
};

DO.DataStoreS3_Types = {
};


DO.DataStoreAzureBase = {
	$type:"$type",
	hive_external_table:"hive_external_table"
};

DO.DataStoreAzureBase_Validation = {
};


DO.DataStoreAzureBase_Defaults = {
	$type:"DataStoreAzureBase",
	hive_external_table:false
};

DO.DataStoreAzureBase_Types = {
};


DO.DataStoreAzureDataLake = {
	$type:"$type",
	hive_external_table:"hive_external_table",
	base_directory_path:"base_directory_path",
	adls_url:"adls_url"
};

DO.DataStoreAzureDataLake_Validation = {
};


DO.DataStoreAzureDataLake_Defaults = {
	$type:"DataStoreAzureDataLake",
	hive_external_table:false,
	base_directory_path:"",
	adls_url:""
};

DO.DataStoreAzureDataLake_Types = {
};


DO.DataStoreGoogleStorage = {
	$type:"$type",
	hive_external_table:"hive_external_table",
	base_directory_path:"base_directory_path",
	bucket_path:"bucket_path"
};

DO.DataStoreGoogleStorage_Validation = {
};


DO.DataStoreGoogleStorage_Defaults = {
	$type:"DataStoreGoogleStorage",
	hive_external_table:false,
	base_directory_path:"",
	bucket_path:""
};

DO.DataStoreGoogleStorage_Types = {
};


DO.DataStoreGoogleBigQuery = {
	$type:"$type",
	hive_external_table:"hive_external_table",
	dataset_name:"dataset_name",
	location:"location",
	google_project_id:"google_project_id"
};

DO.DataStoreGoogleBigQuery_Validation = {
};


DO.DataStoreGoogleBigQuery_Defaults = {
	$type:"DataStoreGoogleBigQuery",
	hive_external_table:false,
	dataset_name:"",
	location:"",
	google_project_id:""
};

DO.DataStoreGoogleBigQuery_Types = {
};


DO.DatabaseDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	description:"description",
	usage:"usage",
	dbms:"dbms",
	server_name:"server_name",
	database_name:"database_name",
	user_name:"user_name",
	password:"password",
	included_schemas:"included_schemas",
	templateDatabaseType:"templateDatabaseType",
	dma_schema:"dma_schema",
	original_sourcedb_id:"original_sourcedb_id",
	has_source_definition:"has_source_definition",
	landing_zone:"landing_zone",
	display_name:"display_name",
	port:"port",
	jdbc_connection_string:"jdbc_connection_string",
	odbc_connection_string:"odbc_connection_string",
	db_settings:"db_settings",
	multibyte_character_multiplier:"multibyte_character_multiplier",
	apply_ddl_changes:"apply_ddl_changes",
	max_table_cols_single_read:"max_table_cols_single_read",
	original_sourcedb_name:"original_sourcedb_name",
	uuid:"uuid",
	db_version:"db_version",
	use_long_object_names:"use_long_object_names",
	use_zoo_keeper:"use_zoo_keeper",
	zoo_keeper_servers_list:"zoo_keeper_servers_list",
	zoo_keeper_namespace:"zoo_keeper_namespace",
	cache_only_the_discovered_tables:"cache_only_the_discovered_tables",
	full_connection_string:"full_connection_string"
};

DO.DatabaseDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	server_name: {
		required: true
	},
	database_name: {
		required: true
	},
	included_schemas: {
		required: true
	},
	original_sourcedb_id: {
		number: true
	},
	port: {
		number: true
	},
	multibyte_character_multiplier: {
		number: true
	},
	max_table_cols_single_read: {
		number: true
	}
};


DO.DatabaseDto_Defaults = {
	$type:"DatabaseDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	description:"",
	usage:DO.DatabaseUsage.DATA_WAREHOUSE,
	dbms:"",
	server_name:"",
	database_name:"",
	user_name:"",
	password:"",
	included_schemas:"",
	templateDatabaseType:DO.TemplateDatabaseType.SQLSERVER,
	dma_schema:"",
	original_sourcedb_id:0,
	has_source_definition:false,
	landing_zone:null,
	display_name:"",
	port:0,
	jdbc_connection_string:"",
	odbc_connection_string:"",
	db_settings:null,
	multibyte_character_multiplier:1,
	apply_ddl_changes:false,
	max_table_cols_single_read:100,
	original_sourcedb_name:"",
	uuid:"",
	db_version:"",
	use_long_object_names:false,
	use_zoo_keeper:false,
	zoo_keeper_servers_list:"",
	zoo_keeper_namespace:"hiveserver2",
	cache_only_the_discovered_tables:true,
	full_connection_string:null
};

DO.DatabaseDto_Types = {
	metadata:"DTObjectMetaData",
	usage:"DatabaseUsage",
	templateDatabaseType:"TemplateDatabaseType",
	landing_zone:"LandingZone",
	db_settings:"DbBaseSettings",
	full_connection_string:"FullConnectionString"
};


DO.FullConnectionString = {
	enabled:"enabled",
	jdbc:"jdbc",
	odbc:"odbc"
};

DO.FullConnectionString_Validation = {
};


DO.FullConnectionString_Defaults = {
	enabled:false,
	jdbc:"",
	odbc:""
};

DO.FullConnectionString_Types = {
};


DO.PhysicalEntity = {
	name:"name",
	schema:"schema",
	entity_id:"entity_id",
	block_number:"block_number"
};

DO.PhysicalEntity_Validation = {
	entity_id: {
		number: true
	},
	block_number: {
		number: true
	}
};


DO.PhysicalEntity_Defaults = {
	name:"",
	schema:"",
	entity_id:0,
	block_number:0
};

DO.PhysicalEntity_Types = {
};


DO.PhysicalInfo = {
	name:"name",
	data_type:"data_type",
	size:"size",
	precision:"precision",
	scale:"scale"
};

DO.PhysicalInfo_Validation = {
	size: {
		number: true
	},
	precision: {
		number: true
	},
	scale: {
		number: true
	}
};


DO.PhysicalInfo_Defaults = {
	name:"",
	data_type:"",
	size:-1,
	precision:-1,
	scale:-1
};

DO.PhysicalInfo_Types = {
};


DO.Column = {
	$type:"$type",
	name:"name",
	data_type:"data_type",
	size:"size",
	precision:"precision",
	scale:"scale",
	ordinal:"ordinal",
	nullable:"nullable",
	alias:"alias",
	origin_type:"origin_type",
	original_data_type:"original_data_type",
	name_alias:"name_alias",
	original_name:"original_name",
	physical_info:"physical_info",
	table_name:"table_name",
	fixed_value:"fixed_value",
	hasFeed:"hasFeed",
	isPK:"isPK",
	isFK:"isFK",
	Path:"Path",
	col_type:"col_type"
};

DO.Column_Validation = {
	size: {
		number: true
	},
	precision: {
		number: true
	},
	scale: {
		number: true
	},
	ordinal: {
		number: true
	},
	col_type: {
		number: true
	}
};


DO.Column_Defaults = {
	$type:"Column",
	name:"",
	data_type:DO.ACDataType.NotSupported,
	size:-1,
	precision:-1,
	scale:-1,
	ordinal:0,
	nullable:true,
	alias:"",
	origin_type:"",
	original_data_type:"",
	name_alias:"",
	original_name:"",
	physical_info:null,
	table_name:"",
	fixed_value:"",
	hasFeed:true,
	isPK:"unk",
	isFK:"unk",
	Path:"",
	col_type:0
};

DO.Column_Types = {
	data_type:"ACDataType",
	physical_info:"PhysicalInfo"
};


DO.DwhColumn = {
	$type:"$type",
	name:"name",
	data_type:"data_type",
	size:"size",
	precision:"precision",
	scale:"scale",
	ordinal:"ordinal",
	nullable:"nullable",
	alias:"alias",
	origin_type:"origin_type",
	original_data_type:"original_data_type",
	name_alias:"name_alias",
	original_name:"original_name",
	physical_info:"physical_info",
	table_name:"table_name",
	fixed_value:"fixed_value",
	hasFeed:"hasFeed",
	isPK:"isPK",
	isFK:"isFK",
	Path:"Path",
	col_type:"col_type",
	role_id:"role_id",
	column_name_internal:"column_name_internal"
};

DO.DwhColumn_Validation = {
	size: {
		number: true
	},
	precision: {
		number: true
	},
	scale: {
		number: true
	},
	ordinal: {
		number: true
	},
	col_type: {
		number: true
	},
	role_id: {
		number: true
	}
};


DO.DwhColumn_Defaults = {
	$type:"DwhColumn",
	name:"",
	data_type:DO.ACDataType.NotSupported,
	size:-1,
	precision:-1,
	scale:-1,
	ordinal:0,
	nullable:true,
	alias:"",
	origin_type:"",
	original_data_type:"",
	name_alias:"",
	original_name:"",
	physical_info:null,
	table_name:"",
	fixed_value:"",
	hasFeed:true,
	isPK:"unk",
	isFK:"unk",
	Path:"",
	col_type:0,
	role_id:-1,
	column_name_internal:""
};

DO.DwhColumn_Types = {
	data_type:"ACDataType",
	physical_info:"PhysicalInfo"
};


DO.ComposeDataTableRow = {
	items:"items"
};

DO.ComposeDataTableRow_Validation = {
};


DO.ComposeDataTableRow_Defaults = {
	items:[]
};

DO.ComposeDataTableRow_Types = {
};


DO.ComposeDataTable = {
	columns:"columns",
	rows:"rows"
};

DO.ComposeDataTable_Validation = {
};


DO.ComposeDataTable_Defaults = {
	columns:[],
	rows:[]
};

DO.ComposeDataTable_Types = {
	rows:"ComposeDataTableRow"
};


DO.TableData = {
	$type:"$type",
	schema:"schema",
	name:"name",
	type:"type"
};

DO.TableData_Validation = {
};


DO.TableData_Defaults = {
	$type:"TableData",
	schema:"",
	name:"",
	type:DO.TableType.TABLE
};

DO.TableData_Types = {
	type:"TableType"
};


DO.ForeignKeyColumns = {
	has_mapping_bind:"has_mapping_bind",
	col_name:"col_name",
	ref_col_name:"ref_col_name",
	src_lnd_col:"src_lnd_col",
	src_stg_col:"src_stg_col",
	tgt_dwh_col:"tgt_dwh_col",
	tgt_stg_col:"tgt_stg_col"
};

DO.ForeignKeyColumns_Validation = {
};


DO.ForeignKeyColumns_Defaults = {
	has_mapping_bind:false,
	col_name:"",
	ref_col_name:"",
	src_lnd_col:"",
	src_stg_col:"",
	tgt_dwh_col:"",
	tgt_stg_col:""
};

DO.ForeignKeyColumns_Types = {
};


DO.ForeignKey = {
	fk_name:"fk_name",
	ref_table_schema:"ref_table_schema",
	ref_table_name:"ref_table_name",
	ref_table_id:"ref_table_id",
	fk_columns:"fk_columns",
	roleKeyOrg:"roleKeyOrg",
	roleKeyNew:"roleKeyNew",
	id:"id"
};

DO.ForeignKey_Validation = {
	ref_table_id: {
		number: true
	},
	roleKeyOrg: {
		number: true
	},
	roleKeyNew: {
		number: true
	}
};


DO.ForeignKey_Defaults = {
	fk_name:"",
	ref_table_schema:"",
	ref_table_name:"",
	ref_table_id:0,
	fk_columns:[],
	roleKeyOrg:0,
	roleKeyNew:0,
	id:""
};

DO.ForeignKey_Types = {
	fk_columns:"ForeignKeyColumns"
};


DO.ComposePrimaryKeySegment = {
	ordinal:"ordinal",
	name:"name"
};

DO.ComposePrimaryKeySegment_Validation = {
	ordinal: {
		number: true
	}
};


DO.ComposePrimaryKeySegment_Defaults = {
	ordinal:0,
	name:""
};

DO.ComposePrimaryKeySegment_Types = {
};


DO.PrimaryKey = {
	name:"name",
	segments:"segments"
};

DO.PrimaryKey_Validation = {
};


DO.PrimaryKey_Defaults = {
	name:"",
	segments:[]
};

DO.PrimaryKey_Types = {
	segments:"ComposePrimaryKeySegment"
};


DO.SortKeyInfo = {
	columns:"columns",
	type:"type"
};

DO.SortKeyInfo_Validation = {
	type: {
		required: true
	}
};


DO.SortKeyInfo_Defaults = {
	columns:[],
	type:""
};

DO.SortKeyInfo_Types = {
};


DO.Index = {
	name:"name",
	columns:"columns",
	is_unique:"is_unique",
	type:"type"
};

DO.Index_Validation = {
	name: {
		required: true
	},
	is_unique: {
		required: true
	}
};


DO.Index_Defaults = {
	name:"",
	columns:[],
	is_unique:false,
	type:""
};

DO.Index_Types = {
};


DO.DistributionInfo = {
	$type:"$type",
	name:"name",
	columns:"columns",
	is_unique:"is_unique",
	azure_index_type:"azure_index_type"
};

DO.DistributionInfo_Validation = {
	name: {
		required: true
	},
	is_unique: {
		required: true
	}
};


DO.DistributionInfo_Defaults = {
	$type:"DistributionInfo",
	name:"",
	columns:[],
	is_unique:false,
	azure_index_type:DO.AzurePrimaryIndexType.HASH
};

DO.DistributionInfo_Types = {
	azure_index_type:"AzurePrimaryIndexType"
};


DO.RedshiftDistributionInfo = {
	$type:"$type",
	name:"name",
	columns:"columns",
	is_unique:"is_unique",
	azure_index_type:"azure_index_type",
	type:"type"
};

DO.RedshiftDistributionInfo_Validation = {
	name: {
		required: true
	},
	is_unique: {
		required: true
	}
};


DO.RedshiftDistributionInfo_Defaults = {
	$type:"RedshiftDistributionInfo",
	name:"",
	columns:[],
	is_unique:false,
	azure_index_type:DO.AzurePrimaryIndexType.HASH,
	type:DO.RedshiftPrimaryIndexType.EVEN
};

DO.RedshiftDistributionInfo_Types = {
	azure_index_type:"AzurePrimaryIndexType",
	type:"RedshiftPrimaryIndexType"
};


DO.TablePartitionInfo = {
	partition_by_columns:"partition_by_columns"
};

DO.TablePartitionInfo_Validation = {
};


DO.TablePartitionInfo_Defaults = {
	partition_by_columns:[]
};

DO.TablePartitionInfo_Types = {
	partition_by_columns:"Column"
};


DO.TableColumns = {
	columns:"columns",
	unsupported_attrs:"unsupported_attrs"
};

DO.TableColumns_Validation = {
};


DO.TableColumns_Defaults = {
	columns:[],
	unsupported_attrs:[]
};

DO.TableColumns_Types = {
	columns:"Column",
	unsupported_attrs:"Column"
};


DO.PKData = {
	column_name:"column_name",
	constraint_name:"constraint_name"
};

DO.PKData_Validation = {
};


DO.PKData_Defaults = {
	column_name:"",
	constraint_name:""
};

DO.PKData_Types = {
};


DO.FKData = {
	column_name:"column_name",
	ref_table_owner:"ref_table_owner",
	ref_table_name:"ref_table_name",
	ref_column_name:"ref_column_name",
	constraint_name:"constraint_name"
};

DO.FKData_Validation = {
};


DO.FKData_Defaults = {
	column_name:"",
	ref_table_owner:"",
	ref_table_name:"",
	ref_column_name:"",
	constraint_name:""
};

DO.FKData_Types = {
};


DO.KeyValuePkData = {
	key:"key",
	value:"value"
};

DO.KeyValuePkData_Validation = {
};


DO.KeyValuePkData_Defaults = {
	key:null,
	value:[]
};

DO.KeyValuePkData_Types = {
	key:"TableData",
	value:"PKData"
};


DO.KeyValueFkData = {
	key:"key",
	value:"value"
};

DO.KeyValueFkData_Validation = {
};


DO.KeyValueFkData_Defaults = {
	key:null,
	value:[]
};

DO.KeyValueFkData_Types = {
	key:"TableData",
	value:"FKData"
};


DO.KeyValueDistInfo = {
	key:"key",
	value:"value"
};

DO.KeyValueDistInfo_Validation = {
};


DO.KeyValueDistInfo_Defaults = {
	key:null,
	value:null
};

DO.KeyValueDistInfo_Types = {
	key:"TableData",
	value:"DistributionInfo"
};


DO.KeyValueTableColumns = {
	key:"key",
	value:"value"
};

DO.KeyValueTableColumns_Validation = {
};


DO.KeyValueTableColumns_Defaults = {
	key:null,
	value:null
};

DO.KeyValueTableColumns_Types = {
	key:"TableData",
	value:"TableColumns"
};


DO.KeyValueTableData = {
	key:"key",
	value:"value"
};

DO.KeyValueTableData_Validation = {
};


DO.KeyValueTableData_Defaults = {
	key:"",
	value:[]
};

DO.KeyValueTableData_Types = {
	value:"TableData"
};


DO.KeyValueTablePartitions = {
	key:"key",
	value:"value"
};

DO.KeyValueTablePartitions_Validation = {
};


DO.KeyValueTablePartitions_Defaults = {
	key:null,
	value:null
};

DO.KeyValueTablePartitions_Types = {
	key:"TableData",
	value:"TablePartitionInfo"
};


DO.DBMetaDataDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	tables_pk_data:"tables_pk_data",
	tables_fk_data:"tables_fk_data",
	list_dist_key_schemas:"list_dist_key_schemas",
	tables_dist_info:"tables_dist_info",
	tables_columns:"tables_columns",
	tables_partitions:"tables_partitions",
	schema_tables:"schema_tables",
	list_table_columns_schemas:"list_table_columns_schemas"
};

DO.DBMetaDataDto_Validation = {
	version: {
		number: true
	}
};


DO.DBMetaDataDto_Defaults = {
	$type:"DBMetaDataDto",
	metadata:null,
	name:"",
	version:0,
	tables_pk_data:{},
	tables_fk_data:{},
	list_dist_key_schemas:[],
	tables_dist_info:{},
	tables_columns:{},
	tables_partitions:{},
	schema_tables:{},
	list_table_columns_schemas:[]
};

DO.DBMetaDataDto_Types = {
	metadata:"DTObjectMetaData",
	tables_pk_data:"KeyValuePkData",
	tables_fk_data:"KeyValueFkData",
	tables_dist_info:"KeyValueDistInfo",
	tables_columns:"KeyValueTableColumns",
	tables_partitions:"KeyValueTablePartitions",
	schema_tables:"KeyValueTableData"
};


DO.DiscoverTablePattern = {
	$type:"$type",
	schema:"schema",
	name:"name",
	type:"type",
	catalog:"catalog",
	comment:"comment",
	mapped_replicate_schema:"mapped_replicate_schema"
};

DO.DiscoverTablePattern_Validation = {
};


DO.DiscoverTablePattern_Defaults = {
	$type:"DiscoverTablePattern",
	schema:"",
	name:"",
	type:DO.TableType.TABLE,
	catalog:"",
	comment:"",
	mapped_replicate_schema:""
};

DO.DiscoverTablePattern_Types = {
	type:"TableType"
};


DO.TableSettings = {
	$type:"$type",
	partition_info:"partition_info"
};

DO.TableSettings_Validation = {
};


DO.TableSettings_Defaults = {
	$type:"TableSettings",
	partition_info:null
};

DO.TableSettings_Types = {
	partition_info:"TablePartitionInfo"
};


DO.HiveTableSettings = {
	$type:"$type",
	partition_info:"partition_info",
	transactional_table:"transactional_table",
	format:"format",
	use_buckets:"use_buckets",
	number_of_buckets:"number_of_buckets",
	location_path:"location_path"
};

DO.HiveTableSettings_Validation = {
	number_of_buckets: {
		number: true
	}
};


DO.HiveTableSettings_Defaults = {
	$type:"HiveTableSettings",
	partition_info:null,
	transactional_table:false,
	format:DO.DatalakeStorageType.ORC,
	use_buckets:true,
	number_of_buckets:10,
	location_path:""
};

DO.HiveTableSettings_Types = {
	partition_info:"TablePartitionInfo",
	format:"DatalakeStorageType"
};


DO.KeyValueAlias = {
	org_name:"org_name",
	aka_name:"aka_name"
};

DO.KeyValueAlias_Validation = {
};


DO.KeyValueAlias_Defaults = {
	org_name:"",
	aka_name:""
};

DO.KeyValueAlias_Types = {
};


DO.TableMetaData = {
	$type:"$type",
	schema:"schema",
	name:"name",
	type:"type",
	catalog:"catalog",
	comment:"comment",
	mapped_replicate_schema:"mapped_replicate_schema",
	columns:"columns",
	foreign_keys:"foreign_keys",
	primary_key:"primary_key",
	indices:"indices",
	dma_table_type:"dma_table_type",
	distribution_inf:"distribution_inf",
	statistics_inf:"statistics_inf",
	table_type:"table_type",
	sort_key_inf:"sort_key_inf",
	table_usage:"table_usage",
	table_settings:"table_settings",
	aliases:"aliases",
	create_table_suffix:"create_table_suffix"
};

DO.TableMetaData_Validation = {
};


DO.TableMetaData_Defaults = {
	$type:"TableMetaData",
	schema:"",
	name:"",
	type:DO.TableType.TABLE,
	catalog:"",
	comment:"",
	mapped_replicate_schema:"",
	columns:[],
	foreign_keys:[],
	primary_key:null,
	indices:[],
	dma_table_type:"",
	distribution_inf:null,
	statistics_inf:[],
	table_type:"",
	sort_key_inf:null,
	table_usage:DO.TableUsage.PERSISTENT,
	table_settings:null,
	aliases:{},
	create_table_suffix:""
};

DO.TableMetaData_Types = {
	type:"TableType",
	columns:"Column",
	foreign_keys:"ForeignKey",
	primary_key:"PrimaryKey",
	indices:"Index",
	distribution_inf:"DistributionInfo",
	statistics_inf:"Index",
	sort_key_inf:"SortKeyInfo",
	table_usage:"TableUsage",
	table_settings:"TableSettings",
	aliases:"KeyValueAlias"
};


DO.ReplicateServerConfigurationDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	server:"server",
	port:"port",
	user_name:"user_name",
	password:"password",
	description:"description",
	timeouts:"timeouts"
};

DO.ReplicateServerConfigurationDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	port: {
		number: true
	}
};


DO.ReplicateServerConfigurationDto_Defaults = {
	$type:"ReplicateServerConfigurationDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	server:"",
	port:443,
	user_name:"",
	password:"",
	description:"",
	timeouts:null
};

DO.ReplicateServerConfigurationDto_Types = {
	metadata:"DTObjectMetaData",
	timeouts:"ReplicateTimeouts"
};


DO.ReplicateTimeouts = {
	get_task_metadata:"get_task_metadata",
	start_task:"start_task",
	wait_for_process_to_finish:"wait_for_process_to_finish",
	wait_for_process_to_stopped:"wait_for_process_to_stopped",
	get_monitor_task_status_time_elapsed:"get_monitor_task_status_time_elapsed"
};

DO.ReplicateTimeouts_Validation = {
	get_task_metadata: {
		number: true
	},
	start_task: {
		number: true
	},
	wait_for_process_to_finish: {
		number: true
	},
	wait_for_process_to_stopped: {
		number: true
	},
	get_monitor_task_status_time_elapsed: {
		number: true
	}
};


DO.ReplicateTimeouts_Defaults = {
	get_task_metadata:10,
	start_task:30,
	wait_for_process_to_finish:1,
	wait_for_process_to_stopped:1,
	get_monitor_task_status_time_elapsed:5
};

DO.ReplicateTimeouts_Types = {
};


DO.VersionControlDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	path:"path",
	type:"type",
	use_remote_server:"use_remote_server",
	remote_url:"remote_url",
	user_name:"user_name",
	password:"password"
};

DO.VersionControlDto_Validation = {
	version: {
		number: true
	}
};


DO.VersionControlDto_Defaults = {
	$type:"VersionControlDto",
	metadata:null,
	name:"",
	version:0,
	path:"",
	type:DO.VersionControlType.Git,
	use_remote_server:false,
	remote_url:"",
	user_name:"",
	password:""
};

DO.VersionControlDto_Types = {
	metadata:"DTObjectMetaData",
	type:"VersionControlType"
};


DO.ComposeHostConfigurationDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	host_address:"host_address",
	host_http_port:"host_http_port",
	host_https_port:"host_https_port",
	host_root:"host_root",
	disable_http_cache_control:"disable_http_cache_control",
	max_receive_message_length:"max_receive_message_length",
	session_timeout_sec:"session_timeout_sec",
	allow_unsafe_protocols:"allow_unsafe_protocols",
	use_kerberos_authentication:"use_kerberos_authentication",
	test_https:"test_https",
	min_size_for_compression:"min_size_for_compression",
	max_size_for_compression:"max_size_for_compression",
	max_concurrent_calls:"max_concurrent_calls",
	max_concurrent_sessions:"max_concurrent_sessions",
	auth_method:"auth_method",
	default_ad_domain:"default_ad_domain",
	user_idle_timeout_sec:"user_idle_timeout_sec",
	idp_url:"idp_url",
	idp_issuer:"idp_issuer",
	idp_certificate:"idp_certificate",
	idp_user_name_attribute:"idp_user_name_attribute",
	idp_user_display_name_attribute:"idp_user_display_name_attribute",
	idp_user_groups_attribute:"idp_user_groups_attribute",
	static_http_headers:"static_http_headers",
	rest_http_headers:"rest_http_headers",
	ad_default_container:"ad_default_container",
	allow_user_scripts:"allow_user_scripts"
};

DO.ComposeHostConfigurationDto_Validation = {
	version: {
		number: true
	},
	host_http_port: {
		number: true
	},
	host_https_port: {
		number: true
	},
	max_receive_message_length: {
		number: true
	},
	session_timeout_sec: {
		number: true
	},
	min_size_for_compression: {
		number: true
	},
	max_size_for_compression: {
		number: true
	},
	max_concurrent_calls: {
		number: true
	},
	max_concurrent_sessions: {
		number: true
	},
	user_idle_timeout_sec: {
		number: true
	}
};


DO.ComposeHostConfigurationDto_Defaults = {
	$type:"ComposeHostConfigurationDto",
	metadata:null,
	name:"host_configuration",
	version:0,
	host_address:"",
	host_http_port:80,
	host_https_port:443,
	host_root:"attunitycompose",
	disable_http_cache_control:false,
	max_receive_message_length:104857600,
	session_timeout_sec:300,
	allow_unsafe_protocols:false,
	use_kerberos_authentication:false,
	test_https:true,
	min_size_for_compression:0,
	max_size_for_compression:1572864,
	max_concurrent_calls:128,
	max_concurrent_sessions:800,
	auth_method:DO.AuthenticationMethod.SSO,
	default_ad_domain:"",
	user_idle_timeout_sec:300,
	idp_url:"",
	idp_issuer:"",
	idp_certificate:"",
	idp_user_name_attribute:"username",
	idp_user_display_name_attribute:"displayname",
	idp_user_groups_attribute:"groups",
	static_http_headers:[],
	rest_http_headers:[],
	ad_default_container:"",
	allow_user_scripts:false
};

DO.ComposeHostConfigurationDto_Types = {
	metadata:"DTObjectMetaData",
	auth_method:"AuthenticationMethod"
};


DO.ClientTemplateVariables = {
	pre_defined:"pre_defined",
	user_defined:"user_defined"
};

DO.ClientTemplateVariables_Validation = {
};


DO.ClientTemplateVariables_Defaults = {
	pre_defined:{},
	user_defined:{}
};

DO.ClientTemplateVariables_Types = {
	pre_defined:"KeyValue",
	user_defined:"KeyValue"
};


DO.TemplateVariablesDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	pre_defined:"pre_defined",
	user_defined:"user_defined"
};

DO.TemplateVariablesDto_Validation = {
	version: {
		number: true
	}
};


DO.TemplateVariablesDto_Defaults = {
	$type:"TemplateVariablesDto",
	metadata:null,
	name:"",
	version:0,
	pre_defined:{},
	user_defined:{}
};

DO.TemplateVariablesDto_Types = {
	metadata:"DTObjectMetaData",
	pre_defined:"KeyValue",
	user_defined:"KeyValue"
};


DO.ReferencingTable = {
	entity_id:"entity_id",
	roles_list:"roles_list"
};

DO.ReferencingTable_Validation = {
	entity_id: {
		number: true
	},
	roles_list: {
		number: true
	}
};


DO.ReferencingTable_Defaults = {
	entity_id:0,
	roles_list:[]
};

DO.ReferencingTable_Types = {
};


DO.ComposeLicense = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	product:"product",
	license_type:"license_type",
	issued_to:"issued_to",
	issued_by:"issued_by",
	serial_no:"serial_no",
	expiration_date:"expiration_date",
	hosts:"hosts",
	host_role:"host_role",
	product_version:"product_version",
	notes:"notes",
	issue_time:"issue_time",
	signature:"signature",
	license_json_doc:"license_json_doc",
	source_db_types:"source_db_types",
	dwh_type:"dwh_type",
	number_of_dms:"number_of_dms",
	managed_dwh_size:"managed_dwh_size",
	number_of_developers:"number_of_developers",
	dl_type:"dl_type"
};

DO.ComposeLicense_Validation = {
	version: {
		number: true
	},
	managed_dwh_size: {
		number: true
	},
	number_of_developers: {
		number: true
	}
};


DO.ComposeLicense_Defaults = {
	$type:"ComposeLicense",
	metadata:null,
	name:"",
	version:0,
	product:"",
	license_type:"",
	issued_to:"",
	issued_by:"",
	serial_no:"",
	expiration_date:"",
	hosts:"",
	host_role:"",
	product_version:"",
	notes:"",
	issue_time:"",
	signature:"",
	license_json_doc:"",
	source_db_types:"",
	dwh_type:"",
	number_of_dms:"",
	managed_dwh_size:0,
	number_of_developers:0,
	dl_type:"NONE"
};

DO.ComposeLicense_Types = {
	metadata:"DTObjectMetaData"
};


DO.ReferencingEntities = {
	entity:"entity",
	ref_entities:"ref_entities"
};

DO.ReferencingEntities_Validation = {
};


DO.ReferencingEntities_Defaults = {
	entity:null,
	ref_entities:[]
};

DO.ReferencingEntities_Types = {
	entity:"EntityDto",
	ref_entities:"EntityDto"
};


DO.NamingConvention = {
	dwh_prefix:"dwh_prefix",
	hub_suffix:"hub_suffix",
	sat_suffix:"sat_suffix",
	lnk_suffix:"lnk_suffix",
	dma_prefix:"dma_prefix",
	dwh_view_prefix:"dwh_view_prefix",
	replicate_change_table_suffix:"replicate_change_table_suffix",
	error_mart_suffix:"error_mart_suffix",
	dma_view_prefix:"dma_view_prefix",
	ct_archive_suffix:"ct_archive_suffix",
	control_table_prefix:"control_table_prefix",
	column_prefix:"column_prefix",
	from_date_suffix:"from_date_suffix",
	to_date_suffix:"to_date_suffix",
	soft_delete_suffix:"soft_delete_suffix",
	created_batch_suffix:"created_batch_suffix",
	modified_batch_suffix:"modified_batch_suffix",
	dropped_column_suffix:"dropped_column_suffix",
	provisioning_table_prefix:"provisioning_table_prefix",
	store_suffix:"store_suffix",
	change_oper_suffix:"change_oper_suffix",
	timestamp_suffix:"timestamp_suffix",
	app_timestamp_suffix:"app_timestamp_suffix",
	archive_timestamp_suffix:"archive_timestamp_suffix",
	dl_naming_conventions:"dl_naming_conventions"
};

DO.NamingConvention_Validation = {
	dwh_prefix: {
		required: true
	}
};


DO.NamingConvention_Defaults = {
	dwh_prefix:"TDWH_",
	hub_suffix:"_HUB",
	sat_suffix:"_S",
	lnk_suffix:"_L",
	dma_prefix:"TDMA_",
	dwh_view_prefix:"VDWH_",
	replicate_change_table_suffix:"__ct",
	error_mart_suffix:"__ex",
	dma_view_prefix:"VDMA_",
	ct_archive_suffix:"__ar",
	control_table_prefix:"qlik_cmps_",
	column_prefix:"header__",
	from_date_suffix:"from_date",
	to_date_suffix:"to_date",
	soft_delete_suffix:"deleted",
	created_batch_suffix:"created_batch",
	modified_batch_suffix:"modified_batch",
	dropped_column_suffix:"__dropped",
	provisioning_table_prefix:"",
	store_suffix:"store",
	change_oper_suffix:"change_oper",
	timestamp_suffix:"timestamp",
	app_timestamp_suffix:"app_timestamp",
	archive_timestamp_suffix:"archive_timestamp",
	dl_naming_conventions:null
};

DO.NamingConvention_Types = {
	dl_naming_conventions:"DLNamingConvention"
};


DO.DLNamingConvention = {
	views_database_suffix:"views_database_suffix",
	internal_views_database_suffix:"internal_views_database_suffix",
	ods_view_suffix:"ods_view_suffix",
	ods_live_view_suffix:"ods_live_view_suffix",
	hds_view_suffix:"hds_view_suffix",
	hds_live_view_suffix:"hds_live_view_suffix"
};

DO.DLNamingConvention_Validation = {
};


DO.DLNamingConvention_Defaults = {
	views_database_suffix:"_v",
	internal_views_database_suffix:"_v_internal",
	ods_view_suffix:"",
	ods_live_view_suffix:"_live",
	hds_view_suffix:"_history",
	hds_live_view_suffix:"_live_history"
};

DO.DLNamingConvention_Types = {
};


DO.ACProjectSettings = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	from_date_col_name:"from_date_col_name",
	to_date_col_name:"to_date_col_name",
	lowest_date:"lowest_date",
	highest_date:"highest_date",
	map_name_prefix:"map_name_prefix",
	stop_after_staging:"stop_after_staging",
	use_datetime2:"use_datetime2",
	dwh_key_name:"dwh_key_name",
	naming_conv:"naming_conv",
	create_ddl_scripts_only:"create_ddl_scripts_only",
	ignore_data_type_check:"ignore_data_type_check",
	write_tdwm_to_db:"write_tdwm_to_db",
	hide_default_workflows:"hide_default_workflows",
	environment:"environment",
	support_backdating:"support_backdating",
	use_precurse_rows:"use_precurse_rows",
	project_type:"project_type",
	dwh_type:"dwh_type",
	datalakes_project_settings:"datalakes_project_settings",
	delete_type:"delete_type",
	skip_lookup_check_on_generate:"skip_lookup_check_on_generate",
	use_utc:"use_utc",
	ddl_execution_threads:"ddl_execution_threads",
	table_modifiers:"table_modifiers",
	recoverable_exceptions:"recoverable_exceptions",
	max_runtime_instances_to_keep:"max_runtime_instances_to_keep",
	full_entities_tree_nodes:"full_entities_tree_nodes",
	max_number_of_entities_in_tree_nodes:"max_number_of_entities_in_tree_nodes",
	max_transactional_date_tree_depth:"max_transactional_date_tree_depth"
};

DO.ACProjectSettings_Validation = {
	version: {
		number: true
	},
	from_date_col_name: {
		required: true
	},
	to_date_col_name: {
		required: true
	},
	ddl_execution_threads: {
		number: true
	},
	max_runtime_instances_to_keep: {
		number: true
	},
	max_number_of_entities_in_tree_nodes: {
		number: true
	},
	max_transactional_date_tree_depth: {
		number: true
	}
};


DO.ACProjectSettings_Defaults = {
	$type:"ACProjectSettings",
	metadata:null,
	name:"",
	version:0,
	from_date_col_name:"FD",
	to_date_col_name:"TD",
	lowest_date:"1780-01-01",
	highest_date:"9999-12-31",
	map_name_prefix:"Map",
	stop_after_staging:false,
	use_datetime2:false,
	dwh_key_name:"ID",
	naming_conv:null,
	create_ddl_scripts_only:false,
	ignore_data_type_check:false,
	write_tdwm_to_db:false,
	hide_default_workflows:false,
	environment:null,
	support_backdating:false,
	use_precurse_rows:false,
	project_type:DO.ProjectType.DWH,
	dwh_type:DO.Dbms.MSACCESS,
	datalakes_project_settings:null,
	delete_type:DO.DeleteType.DONOTHING,
	skip_lookup_check_on_generate:false,
	use_utc:true,
	ddl_execution_threads:20,
	table_modifiers:null,
	recoverable_exceptions:null,
	max_runtime_instances_to_keep:100,
	full_entities_tree_nodes:true,
	max_number_of_entities_in_tree_nodes:500,
	max_transactional_date_tree_depth:6
};

DO.ACProjectSettings_Types = {
	metadata:"DTObjectMetaData",
	naming_conv:"NamingConvention",
	environment:"ProjectEnvironment",
	project_type:"ProjectType",
	dwh_type:"Dbms",
	datalakes_project_settings:"DatalakesProjectSettings",
	delete_type:"DeleteType",
	table_modifiers:"ProjectTableModifiers",
	recoverable_exceptions:"SqlRecoverableExceptions"
};


DO.DatalakesProjectSettings = {
	public_views_info:"public_views_info",
	merge_load_into_table:"merge_load_into_table",
	can_drop_views_db:"can_drop_views_db",
	truncate_tables_on_full_load:"truncate_tables_on_full_load",
	db_location:"db_location",
	datalake_deployment_type:"datalake_deployment_type",
	datalake_storage_type:"datalake_storage_type",
	datalake_compute_type:"datalake_compute_type",
	use_buckets:"use_buckets",
	number_of_buckets:"number_of_buckets",
	default_save_history:"default_save_history"
};

DO.DatalakesProjectSettings_Validation = {
	number_of_buckets: {
		number: true
	}
};


DO.DatalakesProjectSettings_Defaults = {
	public_views_info:null,
	merge_load_into_table:true,
	can_drop_views_db:false,
	truncate_tables_on_full_load:true,
	db_location:"",
	datalake_deployment_type:DO.DatalakeDeploymentType.Azure,
	datalake_storage_type:DO.DatalakeStorageType.DATABRICKSDELTA,
	datalake_compute_type:DO.DatalakeComputeType.DATABRICKS,
	use_buckets:true,
	number_of_buckets:10,
	default_save_history:true
};

DO.DatalakesProjectSettings_Types = {
	public_views_info:"PublicViewsSettings",
	datalake_deployment_type:"DatalakeDeploymentType",
	datalake_storage_type:"DatalakeStorageType",
	datalake_compute_type:"DatalakeComputeType"
};


DO.ProjectEnvironment = {
	environment_type:"environment_type",
	environment_title:"environment_title",
	project_title:"project_title"
};

DO.ProjectEnvironment_Validation = {
	environment_title: {
		maxLength: 80
	},
	project_title: {
		maxLength: 80
	}
};


DO.ProjectEnvironment_Defaults = {
	environment_type:DO.EnvironmentType.OTHER,
	environment_title:"",
	project_title:""
};

DO.ProjectEnvironment_Types = {
	environment_type:"EnvironmentType"
};


DO.TableModifiers = {
	table_modifier_type:"table_modifier_type",
	custom_suffix_text:"custom_suffix_text"
};

DO.TableModifiers_Validation = {
};


DO.TableModifiers_Defaults = {
	table_modifier_type:DO.TableModifierTypes.NONE,
	custom_suffix_text:""
};

DO.TableModifiers_Types = {
	table_modifier_type:"TableModifierTypes"
};


DO.ProjectTableModifiers = {
	table_modifier_hub:"table_modifier_hub",
	table_modifier_sat:"table_modifier_sat",
	table_modifier_fact:"table_modifier_fact",
	table_modifier_dimension:"table_modifier_dimension",
	table_modifier_current:"table_modifier_current",
	table_modifier_archive:"table_modifier_archive",
	initialized:"initialized"
};

DO.ProjectTableModifiers_Validation = {
};


DO.ProjectTableModifiers_Defaults = {
	table_modifier_hub:null,
	table_modifier_sat:null,
	table_modifier_fact:null,
	table_modifier_dimension:null,
	table_modifier_current:null,
	table_modifier_archive:null,
	initialized:false
};

DO.ProjectTableModifiers_Types = {
	table_modifier_hub:"TableModifiers",
	table_modifier_sat:"TableModifiers",
	table_modifier_fact:"TableModifiers",
	table_modifier_dimension:"TableModifiers",
	table_modifier_current:"TableModifiers",
	table_modifier_archive:"TableModifiers"
};


DO.BaseResp = {
	$type:"$type"
};

DO.BaseResp_Validation = {
};


DO.BaseResp_Defaults = {
	$type:"BaseResp"
};

DO.BaseResp_Types = {
};


DO.BaseDDLResp = {
	$type:"$type",
	generated_scripts:"generated_scripts"
};

DO.BaseDDLResp_Validation = {
};


DO.BaseDDLResp_Defaults = {
	$type:"BaseDDLResp",
	generated_scripts:[]
};

DO.BaseDDLResp_Types = {
};


DO.AzureDistributionInfo = {
	$type:"$type",
	name:"name",
	columns:"columns",
	is_unique:"is_unique",
	azure_index_type:"azure_index_type",
	type:"type"
};

DO.AzureDistributionInfo_Validation = {
	name: {
		required: true
	},
	is_unique: {
		required: true
	}
};


DO.AzureDistributionInfo_Defaults = {
	$type:"AzureDistributionInfo",
	name:"",
	columns:[],
	is_unique:false,
	azure_index_type:DO.AzurePrimaryIndexType.HASH,
	type:DO.AzurePrimaryIndexType.HASH
};

DO.AzureDistributionInfo_Types = {
	azure_index_type:"AzurePrimaryIndexType",
	type:"AzurePrimaryIndexType"
};


DO.CheckProjectResult = {
	error_code:"error_code",
	severity:"severity",
	entity_name:"entity_name",
	entity_id:"entity_id",
	error_message:"error_message",
	resolve:"resolve"
};

DO.CheckProjectResult_Validation = {
	entity_id: {
		number: true
	}
};


DO.CheckProjectResult_Defaults = {
	error_code:DO.CheckProjectErrors.NO_ERROR,
	severity:DO.CheckProjectSeverity.ERROR,
	entity_name:"",
	entity_id:0,
	error_message:"",
	resolve:DO.CheckProjectResolve.EDIT_MODEL
};

DO.CheckProjectResult_Types = {
	error_code:"CheckProjectErrors",
	severity:"CheckProjectSeverity",
	resolve:"CheckProjectResolve"
};


DO.CompareDWHResult = {
	compare_error_message:"compare_error_message",
	dwh_entity_name:"dwh_entity_name",
	dwh_view_entity_name:"dwh_view_entity_name",
	model_entity_name:"model_entity_name",
	old_column_name:"old_column_name",
	dwh_column_info:"dwh_column_info",
	column_entity_id:"column_entity_id",
	block_number:"block_number",
	model_entity_key:"model_entity_key",
	dwh_old_data_type:"dwh_old_data_type",
	adjustable:"adjustable",
	isPrimaryKey:"isPrimaryKey",
	staging_table:"staging_table",
	dwh_old_entity_name:"dwh_old_entity_name",
	dwh_old_view_name:"dwh_old_view_name",
	dwh_old_staging_name:"dwh_old_staging_name",
	role_id:"role_id",
	is_fk:"is_fk"
};

DO.CompareDWHResult_Validation = {
	column_entity_id: {
		number: true
	},
	block_number: {
		number: true
	},
	model_entity_key: {
		number: true
	}
};


DO.CompareDWHResult_Defaults = {
	compare_error_message:DO.CompareDwhErrors.ENTITY_WILL_BE_DELETED,
	dwh_entity_name:"",
	dwh_view_entity_name:"",
	model_entity_name:"",
	old_column_name:"",
	dwh_column_info:null,
	column_entity_id:0,
	block_number:0,
	model_entity_key:0,
	dwh_old_data_type:DO.ACDataType.NotSupported,
	adjustable:true,
	isPrimaryKey:false,
	staging_table:"",
	dwh_old_entity_name:"",
	dwh_old_view_name:"",
	dwh_old_staging_name:"",
	role_id:"",
	is_fk:false
};

DO.CompareDWHResult_Types = {
	compare_error_message:"CompareDwhErrors",
	dwh_column_info:"Column",
	dwh_old_data_type:"ACDataType"
};


DO.CompareDMResult = {
	error_message:"error_message",
	data_mart_id:"data_mart_id",
	data_mart_name:"data_mart_name",
	fact_dim_id:"fact_dim_id",
	fact_dim_name:"fact_dim_name",
	column_name:"column_name",
	new_fact_dim_name:"new_fact_dim_name",
	internal_column_path:"internal_column_path",
	adjustable:"adjustable",
	new_column_name:"new_column_name",
	is_fact:"is_fact",
	old_data_type:"old_data_type",
	new_column_data:"new_column_data"
};

DO.CompareDMResult_Validation = {
	data_mart_id: {
		number: true
	},
	fact_dim_id: {
		number: true
	}
};


DO.CompareDMResult_Defaults = {
	error_message:DO.CompareDMError.DATA_MART_DIMENSION_WILL_BE_DELETED,
	data_mart_id:0,
	data_mart_name:"",
	fact_dim_id:0,
	fact_dim_name:"",
	column_name:"",
	new_fact_dim_name:"",
	internal_column_path:"",
	adjustable:true,
	new_column_name:"",
	is_fact:false,
	old_data_type:DO.ACDataType.NotSupported,
	new_column_data:null
};

DO.CompareDMResult_Types = {
	error_message:"CompareDMError",
	old_data_type:"ACDataType",
	new_column_data:"Column"
};


DO.LandingInfo = {
	landing_db:"landing_db",
	original_source_db_id:"original_source_db_id",
	mapping_info:"mapping_info",
	replicate_task:"replicate_task",
	replicate_source:"replicate_source"
};

DO.LandingInfo_Validation = {
	original_source_db_id: {
		number: true
	}
};


DO.LandingInfo_Defaults = {
	landing_db:"",
	original_source_db_id:0,
	mapping_info:null,
	replicate_task:"",
	replicate_source:""
};

DO.LandingInfo_Types = {
	mapping_info:"MappingDto"
};


DO.DataMartInfoForLineage = {
	data_mart_name:"data_mart_name",
	data_mart_id:"data_mart_id",
	table_name:"table_name",
	display_name:"display_name",
	data_mart_type:"data_mart_type",
	is_virtual:"is_virtual",
	attribute_name:"attribute_name"
};

DO.DataMartInfoForLineage_Validation = {
	data_mart_id: {
		number: true
	}
};


DO.DataMartInfoForLineage_Defaults = {
	data_mart_name:"",
	data_mart_id:0,
	table_name:"",
	display_name:"",
	data_mart_type:DO.DmTableType.DIMENSION,
	is_virtual:false,
	attribute_name:""
};

DO.DataMartInfoForLineage_Types = {
	data_mart_type:"DmTableType"
};


DO.DWHLineageInfo = {
	entity_name:"entity_name",
	attribute_name:"attribute_name",
	attribute_internal_name:"attribute_internal_name",
	datamarts:"datamarts",
	landing_info:"landing_info",
	derived_attribute_expression:"derived_attribute_expression"
};

DO.DWHLineageInfo_Validation = {
};


DO.DWHLineageInfo_Defaults = {
	entity_name:"",
	attribute_name:"",
	attribute_internal_name:"",
	datamarts:[],
	landing_info:[],
	derived_attribute_expression:null
};

DO.DWHLineageInfo_Types = {
	datamarts:"DataMartInfoForLineage",
	landing_info:"LandingInfo",
	derived_attribute_expression:"Expression"
};


DO.DataMartLineageInfo = {
	data_mart_info:"data_mart_info",
	entity_lineage:"entity_lineage"
};

DO.DataMartLineageInfo_Validation = {
};


DO.DataMartLineageInfo_Defaults = {
	data_mart_info:null,
	entity_lineage:[]
};

DO.DataMartLineageInfo_Types = {
	data_mart_info:"DataMartInfoForLineage",
	entity_lineage:"DWHLineageInfo"
};


DO.TdwmColumn = {
	table_name:"table_name",
	ordering_nr:"ordering_nr",
	column_name:"column_name",
	index_type:"index_type",
	view_column_name:"view_column_name",
	entity_id:"entity_id",
	column_path:"column_path",
	internal_name:"internal_name"
};

DO.TdwmColumn_Validation = {
	ordering_nr: {
		number: true
	},
	entity_id: {
		number: true
	}
};


DO.TdwmColumn_Defaults = {
	table_name:"",
	ordering_nr:0,
	column_name:"",
	index_type:DO.DwhIndexType.N,
	view_column_name:"",
	entity_id:0,
	column_path:"",
	internal_name:""
};

DO.TdwmColumn_Types = {
	index_type:"DwhIndexType"
};


DO.TdwmTable = {
	table_name:"table_name",
	view_name:"view_name",
	entity_key:"entity_key",
	block_nr:"block_nr",
	staging_name:"staging_name",
	use_precurse_rows:"use_precurse_rows"
};

DO.TdwmTable_Validation = {
	entity_key: {
		number: true
	},
	block_nr: {
		number: true
	}
};


DO.TdwmTable_Defaults = {
	table_name:"",
	view_name:"",
	entity_key:0,
	block_nr:0,
	staging_name:"",
	use_precurse_rows:false
};

DO.TdwmTable_Types = {
};


DO.TdwmColumnsDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	columns:"columns"
};

DO.TdwmColumnsDto_Validation = {
	version: {
		number: true
	}
};


DO.TdwmColumnsDto_Defaults = {
	$type:"TdwmColumnsDto",
	metadata:null,
	name:"",
	version:0,
	columns:[]
};

DO.TdwmColumnsDto_Types = {
	metadata:"DTObjectMetaData",
	columns:"TdwmColumn"
};


DO.TdwmTablesDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	tables:"tables"
};

DO.TdwmTablesDto_Validation = {
	version: {
		number: true
	}
};


DO.TdwmTablesDto_Defaults = {
	$type:"TdwmTablesDto",
	metadata:null,
	name:"",
	version:0,
	tables:[]
};

DO.TdwmTablesDto_Types = {
	metadata:"DTObjectMetaData",
	tables:"TdwmTable"
};


DO.PublicViewsSettings = {
	include_store_type:"include_store_type",
	include_store_op:"include_store_op",
	include_soft_delete:"include_soft_delete",
	include_created_batch:"include_created_batch",
	include_modified_batch:"include_modified_batch",
	include_timestamp:"include_timestamp",
	include_app_timestamp:"include_app_timestamp",
	include_from_date:"include_from_date",
	include_to_date:"include_to_date",
	include_archive_timestamp:"include_archive_timestamp"
};

DO.PublicViewsSettings_Validation = {
};


DO.PublicViewsSettings_Defaults = {
	include_store_type:true,
	include_store_op:true,
	include_soft_delete:true,
	include_created_batch:true,
	include_modified_batch:true,
	include_timestamp:true,
	include_app_timestamp:true,
	include_from_date:true,
	include_to_date:true,
	include_archive_timestamp:true
};

DO.PublicViewsSettings_Types = {
};


DO.ProjectInfo = {
	name:"name",
	description:"description",
	dwh_database:"dwh_database",
	project_type:"project_type"
};

DO.ProjectInfo_Validation = {
	name: {
		required: true
	}
};


DO.ProjectInfo_Defaults = {
	name:"",
	description:"",
	dwh_database:null,
	project_type:DO.ProjectType.DWH
};

DO.ProjectInfo_Types = {
	dwh_database:"DatabaseDto",
	project_type:"ProjectType"
};


DO.GenerateUpgradeScriptsParams = {
	project_name:"project_name"
};

DO.GenerateUpgradeScriptsParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GenerateUpgradeScriptsParams_Defaults = {
	project_name:""
};

DO.GenerateUpgradeScriptsParams_Types = {
};


DO.GenerateUpgradeScriptsRsp = {
	scriptName:"scriptName"
};

DO.GenerateUpgradeScriptsRsp_Validation = {
};


DO.GenerateUpgradeScriptsRsp_Defaults = {
	scriptName:{}
};

DO.GenerateUpgradeScriptsRsp_Types = {
	scriptName:"KeyValueScripName"
};


DO.KeyValueScripName = {
	key:"key",
	value:"value"
};

DO.KeyValueScripName_Validation = {
};


DO.KeyValueScripName_Defaults = {
	key:"",
	value:""
};

DO.KeyValueScripName_Types = {
};


DO.AdjustDlProjectDeploymentForMigrationParams = {
	project_name:"project_name",
	infile:"infile"
};

DO.AdjustDlProjectDeploymentForMigrationParams_Validation = {
	project_name: {
		required: true
	},
	infile: {
		required: true
	}
};


DO.AdjustDlProjectDeploymentForMigrationParams_Defaults = {
	project_name:"",
	infile:""
};

DO.AdjustDlProjectDeploymentForMigrationParams_Types = {
};


DO.CreateDLDataMigrationScriptParams = {
	project_name:"project_name",
	infile:"infile",
	states_path:"states_path"
};

DO.CreateDLDataMigrationScriptParams_Validation = {
	project_name: {
		required: true
	},
	infile: {
		required: true
	},
	states_path: {
		required: true
	}
};


DO.CreateDLDataMigrationScriptParams_Defaults = {
	project_name:"",
	infile:"",
	states_path:""
};

DO.CreateDLDataMigrationScriptParams_Types = {
};


DO.ListProjectsParams = {
};

DO.ListProjectsParams_Validation = {
};


DO.ListProjectsParams_Defaults = {
};

DO.ListProjectsParams_Types = {
};


DO.ProjectListRsp = {
	projects:"projects"
};

DO.ProjectListRsp_Validation = {
};


DO.ProjectListRsp_Defaults = {
	projects:[]
};

DO.ProjectListRsp_Types = {
	projects:"ProjectInfo"
};


DO.CreateProjectParams = {
};

DO.CreateProjectParams_Validation = {
};


DO.CreateProjectParams_Defaults = {
};

DO.CreateProjectParams_Types = {
};


DO.CreateProjectReq = {
	project_info:"project_info",
	environment:"environment",
	project_type:"project_type"
};

DO.CreateProjectReq_Validation = {
};


DO.CreateProjectReq_Defaults = {
	project_info:null,
	environment:null,
	project_type:DO.ProjectType.DWH
};

DO.CreateProjectReq_Types = {
	project_info:"ProjectInfo",
	environment:"ProjectEnvironment",
	project_type:"ProjectType"
};


DO.CopyProjectParams = {
};

DO.CopyProjectParams_Validation = {
};


DO.CopyProjectParams_Defaults = {
};

DO.CopyProjectParams_Types = {
};


DO.CopyProjectReq = {
	project_name:"project_name",
	new_project_name:"new_project_name"
};

DO.CopyProjectReq_Validation = {
	project_name: {
		required: true
	},
	new_project_name: {
		required: true
	}
};


DO.CopyProjectReq_Defaults = {
	project_name:"",
	new_project_name:""
};

DO.CopyProjectReq_Types = {
};


DO.DeleteProjectParams = {
	project_name:"project_name"
};

DO.DeleteProjectParams_Validation = {
	project_name: {
		required: true
	}
};


DO.DeleteProjectParams_Defaults = {
	project_name:""
};

DO.DeleteProjectParams_Types = {
};


DO.CloseProjectParams = {
	project_name:"project_name"
};

DO.CloseProjectParams_Validation = {
	project_name: {
		required: true
	}
};


DO.CloseProjectParams_Defaults = {
	project_name:""
};

DO.CloseProjectParams_Types = {
};


DO.GetProjectInfoParams = {
	project_name:"project_name"
};

DO.GetProjectInfoParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetProjectInfoParams_Defaults = {
	project_name:""
};

DO.GetProjectInfoParams_Types = {
};


DO.ProjectInfoRsp = {
	project_info:"project_info"
};

DO.ProjectInfoRsp_Validation = {
};


DO.ProjectInfoRsp_Defaults = {
	project_info:null
};

DO.ProjectInfoRsp_Types = {
	project_info:"ProjectInfo"
};


DO.GetCurrentCallMessagesParams = {
	project_name:"project_name",
	message_guid:"message_guid"
};

DO.GetCurrentCallMessagesParams_Validation = {
	project_name: {
		required: true
	},
	message_guid: {
		required: true
	}
};


DO.GetCurrentCallMessagesParams_Defaults = {
	project_name:"",
	message_guid:""
};

DO.GetCurrentCallMessagesParams_Types = {
};


DO.GetCurrentCallMessagesRsp = {
	messages:"messages"
};

DO.GetCurrentCallMessagesRsp_Validation = {
};


DO.GetCurrentCallMessagesRsp_Defaults = {
	messages:[]
};

DO.GetCurrentCallMessagesRsp_Types = {
	messages:"StatusMessage"
};


DO.StatusMessage = {
	type:"type",
	text:"text"
};

DO.StatusMessage_Validation = {
	type: {
		required: true
	}
};


DO.StatusMessage_Defaults = {
	type:DO.MessageType.STATUS_MSG,
	text:""
};

DO.StatusMessage_Types = {
	type:"MessageType"
};


DO.ResetProjectParams = {
	project_name:"project_name",
	message_guid:"message_guid"
};

DO.ResetProjectParams_Validation = {
	project_name: {
		required: true
	}
};


DO.ResetProjectParams_Defaults = {
	project_name:"",
	message_guid:""
};

DO.ResetProjectParams_Types = {
};


DO.ResetProjectReq = {
	reset_model:"reset_model",
	reset_reusable_transformations:"reset_reusable_transformations",
	reset_global_mappings:"reset_global_mappings",
	reset_databases:"reset_databases",
	reset_command_tasks:"reset_command_tasks",
	reset_ddl_scripts:"reset_ddl_scripts",
	reset_ct_archive_tables:"reset_ct_archive_tables"
};

DO.ResetProjectReq_Validation = {
};


DO.ResetProjectReq_Defaults = {
	reset_model:true,
	reset_reusable_transformations:false,
	reset_global_mappings:false,
	reset_databases:false,
	reset_command_tasks:false,
	reset_ddl_scripts:false,
	reset_ct_archive_tables:false
};

DO.ResetProjectReq_Types = {
};


DO.ResetProjectRsp = {
	success_tables:"success_tables",
	error_tables:"error_tables"
};

DO.ResetProjectRsp_Validation = {
};


DO.ResetProjectRsp_Defaults = {
	success_tables:[],
	error_tables:[]
};

DO.ResetProjectRsp_Types = {
};


DO.GetTransformationUsageParams = {
	project_name:"project_name",
	transformation_name:"transformation_name"
};

DO.GetTransformationUsageParams_Validation = {
	project_name: {
		required: true
	},
	transformation_name: {
		required: true
	}
};


DO.GetTransformationUsageParams_Defaults = {
	project_name:"",
	transformation_name:""
};

DO.GetTransformationUsageParams_Types = {
};


DO.GetTransformationUsageResp = {
	usage_list:"usage_list"
};

DO.GetTransformationUsageResp_Validation = {
};


DO.GetTransformationUsageResp_Defaults = {
	usage_list:[]
};

DO.GetTransformationUsageResp_Types = {
	usage_list:"TxUsageBase"
};


DO.TxUsageBase = {
	$type:"$type",
	expression:"expression"
};

DO.TxUsageBase_Validation = {
};


DO.TxUsageBase_Defaults = {
	$type:"TxUsageBase",
	expression:null
};

DO.TxUsageBase_Types = {
	expression:"Expression"
};


DO.UsageInDerivedAttribute = {
	$type:"$type",
	expression:"expression",
	entity:"entity",
	table_column_ext:"table_column_ext"
};

DO.UsageInDerivedAttribute_Validation = {
};


DO.UsageInDerivedAttribute_Defaults = {
	$type:"UsageInDerivedAttribute",
	expression:null,
	entity:null,
	table_column_ext:null
};

DO.UsageInDerivedAttribute_Types = {
	expression:"Expression",
	entity:"EntityDto",
	table_column_ext:"TableColumnExtended"
};


DO.UsageInTransformation = {
	$type:"$type",
	expression:"expression",
	transformation_name:"transformation_name"
};

DO.UsageInTransformation_Validation = {
};


DO.UsageInTransformation_Defaults = {
	$type:"UsageInTransformation",
	expression:null,
	transformation_name:""
};

DO.UsageInTransformation_Types = {
	expression:"Expression"
};


DO.UsageInMapping = {
	$type:"$type",
	expression:"expression",
	entity:"entity",
	mapping:"mapping"
};

DO.UsageInMapping_Validation = {
};


DO.UsageInMapping_Defaults = {
	$type:"UsageInMapping",
	expression:null,
	entity:null,
	mapping:null
};

DO.UsageInMapping_Types = {
	expression:"Expression",
	entity:"EntityDto",
	mapping:"MappingDto"
};


DO.UsageInMappingColumnExpression = {
	$type:"$type",
	expression:"expression",
	entity:"entity",
	mapping:"mapping",
	column_display_name:"column_display_name",
	column_staging_name:"column_staging_name"
};

DO.UsageInMappingColumnExpression_Validation = {
};


DO.UsageInMappingColumnExpression_Defaults = {
	$type:"UsageInMappingColumnExpression",
	expression:null,
	entity:null,
	mapping:null,
	column_display_name:"",
	column_staging_name:""
};

DO.UsageInMappingColumnExpression_Types = {
	expression:"Expression",
	entity:"EntityDto",
	mapping:"MappingDto"
};


DO.UsageInMappingColumnLookup = {
	$type:"$type",
	expression:"expression",
	entity:"entity",
	mapping:"mapping",
	column_display_name:"column_display_name",
	column_staging_name:"column_staging_name",
	is_condition:"is_condition"
};

DO.UsageInMappingColumnLookup_Validation = {
};


DO.UsageInMappingColumnLookup_Defaults = {
	$type:"UsageInMappingColumnLookup",
	expression:null,
	entity:null,
	mapping:null,
	column_display_name:"",
	column_staging_name:"",
	is_condition:false
};

DO.UsageInMappingColumnLookup_Types = {
	expression:"Expression",
	entity:"EntityDto",
	mapping:"MappingDto"
};


DO.UsageInMappingFilter = {
	$type:"$type",
	expression:"expression",
	entity:"entity",
	mapping:"mapping"
};

DO.UsageInMappingFilter_Validation = {
};


DO.UsageInMappingFilter_Defaults = {
	$type:"UsageInMappingFilter",
	expression:null,
	entity:null,
	mapping:null
};

DO.UsageInMappingFilter_Types = {
	expression:"Expression",
	entity:"EntityDto",
	mapping:"MappingDto"
};


DO.UsageInMappingDataQuality = {
	$type:"$type",
	expression:"expression",
	entity:"entity",
	mapping:"mapping",
	rule_name:"rule_name"
};

DO.UsageInMappingDataQuality_Validation = {
};


DO.UsageInMappingDataQuality_Defaults = {
	$type:"UsageInMappingDataQuality",
	expression:null,
	entity:null,
	mapping:null,
	rule_name:""
};

DO.UsageInMappingDataQuality_Types = {
	expression:"Expression",
	entity:"EntityDto",
	mapping:"MappingDto"
};


DO.UsageInMappingDataCleansing = {
	$type:"$type",
	expression:"expression",
	entity:"entity",
	mapping:"mapping",
	rule_name:"rule_name",
	is_condition:"is_condition"
};

DO.UsageInMappingDataCleansing_Validation = {
};


DO.UsageInMappingDataCleansing_Defaults = {
	$type:"UsageInMappingDataCleansing",
	expression:null,
	entity:null,
	mapping:null,
	rule_name:"",
	is_condition:false
};

DO.UsageInMappingDataCleansing_Types = {
	expression:"Expression",
	entity:"EntityDto",
	mapping:"MappingDto"
};


DO.UsageInDataMartBase = {
	$type:"$type",
	expression:"expression",
	datamart_info:"datamart_info",
	fact_dim:"fact_dim"
};

DO.UsageInDataMartBase_Validation = {
};


DO.UsageInDataMartBase_Defaults = {
	$type:"UsageInDataMartBase",
	expression:null,
	datamart_info:null,
	fact_dim:null
};

DO.UsageInDataMartBase_Types = {
	expression:"Expression",
	datamart_info:"DataMartInfoDto",
	fact_dim:"FactDimInfo"
};


DO.UsageInDataMartStarSchemaColumn = {
	$type:"$type",
	expression:"expression",
	datamart_info:"datamart_info",
	fact_dim:"fact_dim",
	column_name:"column_name"
};

DO.UsageInDataMartStarSchemaColumn_Validation = {
};


DO.UsageInDataMartStarSchemaColumn_Defaults = {
	$type:"UsageInDataMartStarSchemaColumn",
	expression:null,
	datamart_info:null,
	fact_dim:null,
	column_name:""
};

DO.UsageInDataMartStarSchemaColumn_Types = {
	expression:"Expression",
	datamart_info:"DataMartInfoDto",
	fact_dim:"FactDimInfo"
};


DO.UsageInDataMartStarSchemaFilter = {
	$type:"$type",
	expression:"expression",
	datamart_info:"datamart_info",
	fact_dim:"fact_dim"
};

DO.UsageInDataMartStarSchemaFilter_Validation = {
};


DO.UsageInDataMartStarSchemaFilter_Defaults = {
	$type:"UsageInDataMartStarSchemaFilter",
	expression:null,
	datamart_info:null,
	fact_dim:null
};

DO.UsageInDataMartStarSchemaFilter_Types = {
	expression:"Expression",
	datamart_info:"DataMartInfoDto",
	fact_dim:"FactDimInfo"
};


DO.UsageInDataMartStarSchemaAggregateFilter = {
	$type:"$type",
	expression:"expression",
	datamart_info:"datamart_info",
	fact_dim:"fact_dim"
};

DO.UsageInDataMartStarSchemaAggregateFilter_Validation = {
};


DO.UsageInDataMartStarSchemaAggregateFilter_Defaults = {
	$type:"UsageInDataMartStarSchemaAggregateFilter",
	expression:null,
	datamart_info:null,
	fact_dim:null
};

DO.UsageInDataMartStarSchemaAggregateFilter_Types = {
	expression:"Expression",
	datamart_info:"DataMartInfoDto",
	fact_dim:"FactDimInfo"
};


DO.UsageInDataMartDimensionColumn = {
	$type:"$type",
	expression:"expression",
	datamart_info:"datamart_info",
	fact_dim:"fact_dim",
	column_name:"column_name"
};

DO.UsageInDataMartDimensionColumn_Validation = {
};


DO.UsageInDataMartDimensionColumn_Defaults = {
	$type:"UsageInDataMartDimensionColumn",
	expression:null,
	datamart_info:null,
	fact_dim:null,
	column_name:""
};

DO.UsageInDataMartDimensionColumn_Types = {
	expression:"Expression",
	datamart_info:"DataMartInfoDto",
	fact_dim:"FactDimInfo"
};


DO.UsageInDataMartDimensionFilter = {
	$type:"$type",
	expression:"expression",
	datamart_info:"datamart_info",
	fact_dim:"fact_dim"
};

DO.UsageInDataMartDimensionFilter_Validation = {
};


DO.UsageInDataMartDimensionFilter_Defaults = {
	$type:"UsageInDataMartDimensionFilter",
	expression:null,
	datamart_info:null,
	fact_dim:null
};

DO.UsageInDataMartDimensionFilter_Types = {
	expression:"Expression",
	datamart_info:"DataMartInfoDto",
	fact_dim:"FactDimInfo"
};


DO.RenameReusableTransformationParams = {
	project_name:"project_name",
	old_name:"old_name",
	new_name:"new_name"
};

DO.RenameReusableTransformationParams_Validation = {
	project_name: {
		required: true
	},
	old_name: {
		required: true
	},
	new_name: {
		required: true
	}
};


DO.RenameReusableTransformationParams_Defaults = {
	project_name:"",
	old_name:"",
	new_name:""
};

DO.RenameReusableTransformationParams_Types = {
};


DO.ReusableTransformationsDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	transformations:"transformations"
};

DO.ReusableTransformationsDto_Validation = {
	version: {
		number: true
	}
};


DO.ReusableTransformationsDto_Defaults = {
	$type:"ReusableTransformationsDto",
	metadata:null,
	name:"",
	version:0,
	transformations:[]
};

DO.ReusableTransformationsDto_Types = {
	metadata:"DTObjectMetaData",
	transformations:"ReusableTransformation"
};


DO.ReusableTransformation = {
	name:"name",
	category:"category",
	description:"description",
	expression_statement:"expression_statement",
	params:"params",
	is_internal:"is_internal"
};

DO.ReusableTransformation_Validation = {
	name: {
		required: true
	},
	category: {
		required: true
	}
};


DO.ReusableTransformation_Defaults = {
	name:"",
	category:"General",
	description:"",
	expression_statement:"",
	params:[],
	is_internal:false
};

DO.ReusableTransformation_Types = {
	params:"ReusableTransformationParam"
};


DO.ReusableTransformationParam = {
	alias_name:"alias_name",
	alias_description:"alias_description",
	data_type:"data_type"
};

DO.ReusableTransformationParam_Validation = {
};


DO.ReusableTransformationParam_Defaults = {
	alias_name:"",
	alias_description:"",
	data_type:DO.ACDataType.NotSupported
};

DO.ReusableTransformationParam_Types = {
	data_type:"ACDataType"
};


DO.CreateDataWarehouseParams = {
	project_name:"project_name",
	message_guid:"message_guid"
};

DO.CreateDataWarehouseParams_Validation = {
	project_name: {
		required: true
	}
};


DO.CreateDataWarehouseParams_Defaults = {
	project_name:"",
	message_guid:""
};

DO.CreateDataWarehouseParams_Types = {
};


DO.CreateDataWarehouseReq = {
	clean_dwh:"clean_dwh"
};

DO.CreateDataWarehouseReq_Validation = {
	clean_dwh: {
		required: true
	}
};


DO.CreateDataWarehouseReq_Defaults = {
	clean_dwh:false
};

DO.CreateDataWarehouseReq_Types = {
};


DO.CreateDataWarehouseResp = {
	$type:"$type",
	generated_scripts:"generated_scripts",
	results:"results"
};

DO.CreateDataWarehouseResp_Validation = {
};


DO.CreateDataWarehouseResp_Defaults = {
	$type:"CreateDataWarehouseResp",
	generated_scripts:[],
	results:[]
};

DO.CreateDataWarehouseResp_Types = {
	results:"CheckProjectResult"
};


DO.GenerateDWHETLsParams = {
	project_name:"project_name",
	message_guid:"message_guid",
	skip_external_checks:"skip_external_checks"
};

DO.GenerateDWHETLsParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GenerateDWHETLsParams_Defaults = {
	project_name:"",
	message_guid:"",
	skip_external_checks:false
};

DO.GenerateDWHETLsParams_Types = {
};


DO.GenerateDWHETLsReq = {
	etl_item:"etl_item"
};

DO.GenerateDWHETLsReq_Validation = {
};


DO.GenerateDWHETLsReq_Defaults = {
	etl_item:null
};

DO.GenerateDWHETLsReq_Types = {
	etl_item:"ETLInfoDto"
};


DO.GenerateDWHETLsResp = {
	$type:"$type",
	generated_scripts:"generated_scripts",
	results:"results"
};

DO.GenerateDWHETLsResp_Validation = {
};


DO.GenerateDWHETLsResp_Defaults = {
	$type:"GenerateDWHETLsResp",
	generated_scripts:[],
	results:[]
};

DO.GenerateDWHETLsResp_Types = {
	results:"CheckProjectResult"
};


DO.ETLInfoDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	description:"description",
	data:"data",
	active_mappings:"active_mappings",
	entity_action:"entity_action",
	etl_type:"etl_type",
	active_custom_etls:"active_custom_etls",
	task_Stage:"task_Stage"
};

DO.ETLInfoDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	active_mappings: {
		number: true
	},
	active_custom_etls: {
		number: true
	}
};


DO.ETLInfoDto_Defaults = {
	$type:"ETLInfoDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	description:"",
	data:null,
	active_mappings:[],
	entity_action:[],
	etl_type:DO.ETLType.DataWarehouse,
	active_custom_etls:[],
	task_Stage:DO.ETLType.DataWarehouse
};

DO.ETLInfoDto_Types = {
	metadata:"DTObjectMetaData",
	data:"PIData",
	entity_action:"EtlItemAction",
	etl_type:"ETLType",
	task_Stage:"ETLType"
};


DO.GetETLsParams = {
	project_name:"project_name"
};

DO.GetETLsParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetETLsParams_Defaults = {
	project_name:""
};

DO.GetETLsParams_Types = {
};


DO.GetETLsResp = {
	list:"list"
};

DO.GetETLsResp_Validation = {
};


DO.GetETLsResp_Defaults = {
	list:[]
};

DO.GetETLsResp_Types = {
	list:"ETLInfoDto"
};


DO.StopETLParams = {
	project_name:"project_name",
	etl_id:"etl_id"
};

DO.StopETLParams_Validation = {
	project_name: {
		required: true
	},
	etl_id: {
		number: true
	}
};


DO.StopETLParams_Defaults = {
	project_name:"",
	etl_id:0
};

DO.StopETLParams_Types = {
};


DO.PopulateETLSetParams = {
	project_name:"project_name",
	task_type:"task_type",
	task_name:"task_name",
	etl_id:"etl_id"
};

DO.PopulateETLSetParams_Validation = {
	project_name: {
		required: true
	},
	etl_id: {
		number: true
	}
};


DO.PopulateETLSetParams_Defaults = {
	project_name:"",
	task_type:DO.ETLType.None,
	task_name:"",
	etl_id:0
};

DO.PopulateETLSetParams_Types = {
	task_type:"ETLType"
};


DO.PopulateETLSetReq = {
};

DO.PopulateETLSetReq_Validation = {
};


DO.PopulateETLSetReq_Defaults = {
};

DO.PopulateETLSetReq_Types = {
};


DO.PIData = {
	seqr_processing:"seqr_processing",
	FULLREBUILD:"FULLREBUILD",
	SELOFRUNS:"SELOFRUNS",
	DESCRIPTION:"DESCRIPTION",
	COMMANDFILE:"COMMANDFILE",
	error_mart_schema:"error_mart_schema",
	EMPTYRUNNRSTABLE:"EMPTYRUNNRSTABLE",
	INSERTRUNNRSTABLE:"INSERTRUNNRSTABLE",
	MAXCDC_COLUMNS:"MAXCDC_COLUMNS",
	SPLITRELSANDATTS:"SPLITRELSANDATTS",
	STOPAFTERSTAGING:"STOPAFTERSTAGING",
	PARAM_RUNNR:"PARAM_RUNNR",
	dm_cohorts:"dm_cohorts",
	engine_settings:"engine_settings",
	Using_Max_partitions_for_CDC:"Using_Max_partitions_for_CDC",
	Max_partitions_for_CDC:"Max_partitions_for_CDC",
	workflow_position:"workflow_position",
	dwh_full_load:"dwh_full_load",
	dm_enable_table_logging:"dm_enable_table_logging",
	allow_updating_to_null:"allow_updating_to_null",
	do_not_create_indexes:"do_not_create_indexes",
	CDC__delay:"CDC__delay",
	consolidation_task:"consolidation_task",
	source_list:"source_list"
};

DO.PIData_Validation = {
	SELOFRUNS: {
		number: true
	},
	MAXCDC_COLUMNS: {
		number: true
	},
	Max_partitions_for_CDC: {
		number: true
	},
	workflow_position: {
		number: true
	},
	CDC__delay: {
		number: true
	}
};


DO.PIData_Defaults = {
	seqr_processing:false,
	FULLREBUILD:false,
	SELOFRUNS:0,
	DESCRIPTION:"",
	COMMANDFILE:"",
	error_mart_schema:"",
	EMPTYRUNNRSTABLE:true,
	INSERTRUNNRSTABLE:true,
	MAXCDC_COLUMNS:10,
	SPLITRELSANDATTS:false,
	STOPAFTERSTAGING:false,
	PARAM_RUNNR:"1",
	dm_cohorts:[],
	engine_settings:null,
	Using_Max_partitions_for_CDC:false,
	Max_partitions_for_CDC:0,
	workflow_position:1,
	dwh_full_load:false,
	dm_enable_table_logging:false,
	allow_updating_to_null:true,
	do_not_create_indexes:false,
	CDC__delay:0,
	consolidation_task:false,
	source_list:[]
};

DO.PIData_Types = {
	dm_cohorts:"DataMartCohort",
	engine_settings:"EngineSettings"
};


DO.DataMartCohort = {
	mapping_id:"mapping_id",
	fdName:"fdName",
	type:"type",
	number_of_cohorts:"number_of_cohorts",
	dma_id:"dma_id",
	fctdim_id:"fctdim_id"
};

DO.DataMartCohort_Validation = {
	mapping_id: {
		number: true
	},
	number_of_cohorts: {
		number: true
	},
	dma_id: {
		number: true
	},
	fctdim_id: {
		number: true
	}
};


DO.DataMartCohort_Defaults = {
	mapping_id:0,
	fdName:"",
	type:"",
	number_of_cohorts:0,
	dma_id:0,
	fctdim_id:0
};

DO.DataMartCohort_Types = {
};


DO.UpdateETLParams = {
	project_name:"project_name"
};

DO.UpdateETLParams_Validation = {
	project_name: {
		required: true
	}
};


DO.UpdateETLParams_Defaults = {
	project_name:""
};

DO.UpdateETLParams_Types = {
};


DO.UpdateETLReq = {
	etl_info:"etl_info"
};

DO.UpdateETLReq_Validation = {
	etl_info: {
		required: true
	}
};


DO.UpdateETLReq_Defaults = {
	etl_info:{}
};

DO.UpdateETLReq_Types = {
	etl_info:"ETLInfoDto"
};


DO.UpdateETLResp = {
	etl_info:"etl_info"
};

DO.UpdateETLResp_Validation = {
	etl_info: {
		required: true
	}
};


DO.UpdateETLResp_Defaults = {
	etl_info:{}
};

DO.UpdateETLResp_Types = {
	etl_info:"ETLInfoDto"
};


DO.CopyETLParams = {
	project_name:"project_name"
};

DO.CopyETLParams_Validation = {
	project_name: {
		required: true
	}
};


DO.CopyETLParams_Defaults = {
	project_name:""
};

DO.CopyETLParams_Types = {
};


DO.CopyETLReq = {
	ETL_id:"ETL_id",
	ETL_name:"ETL_name",
	environment_id:"environment_id",
	schema:"schema",
	copy_etl_type:"copy_etl_type"
};

DO.CopyETLReq_Validation = {
	ETL_id: {
		required: true,
		number: true
	},
	ETL_name: {
		required: true
	},
	environment_id: {
		required: true,
		number: true
	}
};


DO.CopyETLReq_Defaults = {
	ETL_id:0,
	ETL_name:"",
	environment_id:0,
	schema:"",
	copy_etl_type:DO.DuplicateEtlType.FULL_LOAD_AND_CDC
};

DO.CopyETLReq_Types = {
	copy_etl_type:"DuplicateEtlType"
};


DO.CopyETLReqETLResp = {
	created:"created"
};

DO.CopyETLReqETLResp_Validation = {
};


DO.CopyETLReqETLResp_Defaults = {
	created:false
};

DO.CopyETLReqETLResp_Types = {
};


DO.DeleteETLParams = {
	project_name:"project_name",
	etl_id:"etl_id",
	delete_active_mappings:"delete_active_mappings",
	delete_active_custom_etls:"delete_active_custom_etls"
};

DO.DeleteETLParams_Validation = {
	project_name: {
		required: true
	},
	etl_id: {
		required: true,
		number: true
	}
};


DO.DeleteETLParams_Defaults = {
	project_name:"",
	etl_id:0,
	delete_active_mappings:false,
	delete_active_custom_etls:false
};

DO.DeleteETLParams_Types = {
};


DO.DeleteETLResp = {
	deleted:"deleted"
};

DO.DeleteETLResp_Validation = {
};


DO.DeleteETLResp_Defaults = {
	deleted:false
};

DO.DeleteETLResp_Types = {
};


DO.PILogInfo = {
	log_id:"log_id",
	start_date:"start_date",
	end_date:"end_date",
	exit_code:"exit_code",
	exit_message:"exit_message",
	pi_file_name:"pi_file_name",
	pi_version:"pi_version",
	error_count:"error_count",
	dwh_id:"dwh_id",
	dwh_schema:"dwh_schema"
};

DO.PILogInfo_Validation = {
	log_id: {
		number: true
	},
	exit_code: {
		number: true
	},
	error_count: {
		number: true
	},
	dwh_id: {
		number: true
	}
};


DO.PILogInfo_Defaults = {
	log_id:0,
	start_date:"",
	end_date:"",
	exit_code:0,
	exit_message:"",
	pi_file_name:"",
	pi_version:"",
	error_count:0,
	dwh_id:0,
	dwh_schema:""
};

DO.PILogInfo_Types = {
};


DO.PILogData = {
	entity_id:"entity_id",
	table_name:"table_name",
	view_name:"view_name",
	sql_insert_count:"sql_insert_count",
	sql_delete_count:"sql_delete_count",
	sql_update_count:"sql_update_count",
	block:"block",
	error_count:"error_count"
};

DO.PILogData_Validation = {
	entity_id: {
		number: true
	},
	sql_insert_count: {
		number: true
	},
	sql_delete_count: {
		number: true
	},
	sql_update_count: {
		number: true
	},
	block: {
		number: true
	},
	error_count: {
		number: true
	}
};


DO.PILogData_Defaults = {
	entity_id:0,
	table_name:"",
	view_name:"",
	sql_insert_count:0,
	sql_delete_count:0,
	sql_update_count:0,
	block:0,
	error_count:0
};

DO.PILogData_Types = {
};


DO.GetExistingPILogsParams = {
	project_name:"project_name",
	pi_id:"pi_id"
};

DO.GetExistingPILogsParams_Validation = {
	project_name: {
		required: true
	},
	pi_id: {
		required: true,
		number: true
	}
};


DO.GetExistingPILogsParams_Defaults = {
	project_name:"",
	pi_id:0
};

DO.GetExistingPILogsParams_Types = {
};


DO.GetExistingPILogsResp = {
	log_id_list:"log_id_list"
};

DO.GetExistingPILogsResp_Validation = {
	log_id_list: {
		number: true
	}
};


DO.GetExistingPILogsResp_Defaults = {
	log_id_list:[]
};

DO.GetExistingPILogsResp_Types = {
};


DO.InspectETLParams = {
	project_name:"project_name",
	pi_id:"pi_id"
};

DO.InspectETLParams_Validation = {
	project_name: {
		required: true
	},
	pi_id: {
		required: true,
		number: true
	}
};


DO.InspectETLParams_Defaults = {
	project_name:"",
	pi_id:0
};

DO.InspectETLParams_Types = {
};


DO.InspectETLResp = {
	items_list:"items_list"
};

DO.InspectETLResp_Validation = {
};


DO.InspectETLResp_Defaults = {
	items_list:[]
};

DO.InspectETLResp_Types = {
	items_list:"InspectETL"
};


DO.InspectETL = {
	$type:"$type",
	pi_set:"pi_set",
	process_number:"process_number",
	process_type:"process_type",
	process_name:"process_name",
	environment:"environment",
	target_table:"target_table",
	source_type:"source_type",
	source_environment:"source_environment",
	source_table:"source_table",
	parameter_decl:"parameter_decl",
	sql_statement:"sql_statement",
	show_nr:"show_nr",
	ent_key:"ent_key",
	process_step:"process_step",
	related_entity:"related_entity",
	mopping_type:"mopping_type",
	delimeter:"delimeter",
	contain_names:"contain_names",
	runtime_clause:"runtime_clause",
	sql_overflow:"sql_overflow",
	view_name:"view_name",
	parameters_list:"parameters_list"
};

DO.InspectETL_Validation = {
	pi_set: {
		number: true
	},
	process_number: {
		number: true
	},
	environment: {
		number: true
	},
	source_environment: {
		number: true
	},
	show_nr: {
		number: true
	},
	ent_key: {
		number: true
	},
	related_entity: {
		number: true
	},
	mopping_type: {
		number: true
	},
	contain_names: {
		number: true
	},
	sql_overflow: {
		number: true
	}
};


DO.InspectETL_Defaults = {
	$type:"InspectETL",
	pi_set:-1,
	process_number:-1,
	process_type:DO.ETLProcessType.None,
	process_name:"",
	environment:-1,
	target_table:"",
	source_type:"",
	source_environment:-1,
	source_table:"",
	parameter_decl:"",
	sql_statement:"",
	show_nr:-1,
	ent_key:-1,
	process_step:"",
	related_entity:-1,
	mopping_type:-1,
	delimeter:"",
	contain_names:-1,
	runtime_clause:"",
	sql_overflow:-1,
	view_name:"",
	parameters_list:[]
};

DO.InspectETL_Types = {
	process_type:"ETLProcessType"
};


DO.UpdateInspectETLParams = {
	project_name:"project_name",
	pi_id:"pi_id"
};

DO.UpdateInspectETLParams_Validation = {
	project_name: {
		required: true
	},
	pi_id: {
		required: true,
		number: true
	}
};


DO.UpdateInspectETLParams_Defaults = {
	project_name:"",
	pi_id:0
};

DO.UpdateInspectETLParams_Types = {
};


DO.UpdateInspectETLReq = {
	inspect_etl:"inspect_etl"
};

DO.UpdateInspectETLReq_Validation = {
};


DO.UpdateInspectETLReq_Defaults = {
	inspect_etl:null
};

DO.UpdateInspectETLReq_Types = {
	inspect_etl:"InspectETL"
};


DO.UpdateInspectETLResp = {
	updated:"updated"
};

DO.UpdateInspectETLResp_Validation = {
};


DO.UpdateInspectETLResp_Defaults = {
	updated:false
};

DO.UpdateInspectETLResp_Types = {
};


DO.InspectETLFlowParams = {
	project_name:"project_name",
	pi_id:"pi_id"
};

DO.InspectETLFlowParams_Validation = {
	project_name: {
		required: true
	},
	pi_id: {
		required: true,
		number: true
	}
};


DO.InspectETLFlowParams_Defaults = {
	project_name:"",
	pi_id:0
};

DO.InspectETLFlowParams_Types = {
};


DO.InspectETLFlowResp = {
	items_list:"items_list"
};

DO.InspectETLFlowResp_Validation = {
};


DO.InspectETLFlowResp_Defaults = {
	items_list:[]
};

DO.InspectETLFlowResp_Types = {
	items_list:"InspectETLFlow"
};


DO.InspectETLFlow = {
	pi_set:"pi_set",
	wait_for_process:"wait_for_process",
	process_number:"process_number"
};

DO.InspectETLFlow_Validation = {
	pi_set: {
		number: true
	},
	wait_for_process: {
		number: true
	},
	process_number: {
		number: true
	}
};


DO.InspectETLFlow_Defaults = {
	pi_set:-1,
	wait_for_process:-1,
	process_number:-1
};

DO.InspectETLFlow_Types = {
};


DO.GetRunnerLogParams = {
	project_name:"project_name",
	runner_number:"runner_number",
	status:"status",
	etl_id:"etl_id"
};

DO.GetRunnerLogParams_Validation = {
	project_name: {
		required: true
	},
	runner_number: {
		required: true,
		number: true
	},
	status: {
		required: true
	},
	etl_id: {
		required: true,
		number: true
	}
};


DO.GetRunnerLogParams_Defaults = {
	project_name:"",
	runner_number:0,
	status:DO.ETLCommandStatus.BUSY,
	etl_id:0
};

DO.GetRunnerLogParams_Types = {
	status:"ETLCommandStatus"
};


DO.GetRunnerLogResp = {
	items_list:"items_list"
};

DO.GetRunnerLogResp_Validation = {
};


DO.GetRunnerLogResp_Defaults = {
	items_list:[]
};

DO.GetRunnerLogResp_Types = {
	items_list:"RunnerLog"
};


DO.RunnerLog = {
	$type:"$type",
	pi_set:"pi_set",
	process_number:"process_number",
	process_type:"process_type",
	process_name:"process_name",
	environment:"environment",
	target_table:"target_table",
	source_type:"source_type",
	source_environment:"source_environment",
	source_table:"source_table",
	parameter_decl:"parameter_decl",
	sql_statement:"sql_statement",
	show_nr:"show_nr",
	ent_key:"ent_key",
	process_step:"process_step",
	related_entity:"related_entity",
	mopping_type:"mopping_type",
	delimeter:"delimeter",
	contain_names:"contain_names",
	runtime_clause:"runtime_clause",
	sql_overflow:"sql_overflow",
	view_name:"view_name",
	parameters_list:"parameters_list",
	runner_num:"runner_num",
	status:"status",
	start_time:"start_time",
	end_time:"end_time",
	elapsed_time_char:"elapsed_time_char",
	elapsed_time_num:"elapsed_time_num",
	throughput:"throughput",
	rows_read:"rows_read",
	rows_written:"rows_written",
	rows_affected:"rows_affected",
	reason:"reason"
};

DO.RunnerLog_Validation = {
	pi_set: {
		number: true
	},
	process_number: {
		number: true
	},
	environment: {
		number: true
	},
	source_environment: {
		number: true
	},
	show_nr: {
		number: true
	},
	ent_key: {
		number: true
	},
	related_entity: {
		number: true
	},
	mopping_type: {
		number: true
	},
	contain_names: {
		number: true
	},
	sql_overflow: {
		number: true
	},
	runner_num: {
		number: true
	},
	elapsed_time_num: {
		number: true
	},
	throughput: {
		number: true
	},
	rows_read: {
		number: true
	},
	rows_written: {
		number: true
	},
	rows_affected: {
		number: true
	}
};


DO.RunnerLog_Defaults = {
	$type:"RunnerLog",
	pi_set:-1,
	process_number:-1,
	process_type:DO.ETLProcessType.None,
	process_name:"",
	environment:-1,
	target_table:"",
	source_type:"",
	source_environment:-1,
	source_table:"",
	parameter_decl:"",
	sql_statement:"",
	show_nr:-1,
	ent_key:-1,
	process_step:"",
	related_entity:-1,
	mopping_type:-1,
	delimeter:"",
	contain_names:-1,
	runtime_clause:"",
	sql_overflow:-1,
	view_name:"",
	parameters_list:[],
	runner_num:0,
	status:DO.ETLCommandStatus.BUSY,
	start_time:"",
	end_time:"",
	elapsed_time_char:"",
	elapsed_time_num:0,
	throughput:0,
	rows_read:0,
	rows_written:0,
	rows_affected:0,
	reason:""
};

DO.RunnerLog_Types = {
	process_type:"ETLProcessType",
	status:"ETLCommandStatus"
};


DO.ListCustomETLParams = {
	project_name:"project_name"
};

DO.ListCustomETLParams_Validation = {
	project_name: {
		required: true
	}
};


DO.ListCustomETLParams_Defaults = {
	project_name:""
};

DO.ListCustomETLParams_Types = {
};


DO.ListCustomETLReq = {
	datamart_id:"datamart_id"
};

DO.ListCustomETLReq_Validation = {
	datamart_id: {
		number: true
	}
};


DO.ListCustomETLReq_Defaults = {
	datamart_id:0
};

DO.ListCustomETLReq_Types = {
};


DO.ListCustomETLRsp = {
	custome_etl_list:"custome_etl_list"
};

DO.ListCustomETLRsp_Validation = {
};


DO.ListCustomETLRsp_Defaults = {
	custome_etl_list:[]
};

DO.ListCustomETLRsp_Types = {
	custome_etl_list:"CustomETLDto"
};


DO.CustomETLDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	type:"type",
	entity_id:"entity_id",
	datamart_id:"datamart_id",
	seq_nr:"seq_nr",
	sql_statement:"sql_statement",
	description:"description",
	is_stored_procedure:"is_stored_procedure"
};

DO.CustomETLDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	entity_id: {
		number: true
	},
	datamart_id: {
		number: true
	},
	seq_nr: {
		required: true,
		number: true,
		min: 1
	}
};


DO.CustomETLDto_Defaults = {
	$type:"CustomETLDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	type:DO.CustomeETLType.PreStaging,
	entity_id:0,
	datamart_id:0,
	seq_nr:1,
	sql_statement:"",
	description:"",
	is_stored_procedure:false
};

DO.CustomETLDto_Types = {
	metadata:"DTObjectMetaData",
	type:"CustomeETLType"
};


DO.CustomETLDtoPP = {
	custom_etl_type:"custom_etl_type"
};

DO.CustomETLDtoPP_Validation = {
};


DO.CustomETLDtoPP_Defaults = {
	custom_etl_type:DO.CustomeETLType.PreStaging
};

DO.CustomETLDtoPP_Types = {
	custom_etl_type:"CustomeETLType"
};


DO.AddCustomETLParams = {
	project_name:"project_name"
};

DO.AddCustomETLParams_Validation = {
	project_name: {
		required: true
	}
};


DO.AddCustomETLParams_Defaults = {
	project_name:""
};

DO.AddCustomETLParams_Types = {
};


DO.AddCustomETLReq = {
	custom_etl:"custom_etl"
};

DO.AddCustomETLReq_Validation = {
};


DO.AddCustomETLReq_Defaults = {
	custom_etl:null
};

DO.AddCustomETLReq_Types = {
	custom_etl:"CustomETLDto"
};


DO.AddCustomETLRsp = {
	custom_etl:"custom_etl"
};

DO.AddCustomETLRsp_Validation = {
};


DO.AddCustomETLRsp_Defaults = {
	custom_etl:null
};

DO.AddCustomETLRsp_Types = {
	custom_etl:"CustomETLDto"
};


DO.DeleteCustomETLParams = {
	project_name:"project_name",
	id:"id"
};

DO.DeleteCustomETLParams_Validation = {
	project_name: {
		required: true
	},
	id: {
		required: true,
		number: true
	}
};


DO.DeleteCustomETLParams_Defaults = {
	project_name:"",
	id:0
};

DO.DeleteCustomETLParams_Types = {
};


DO.DeleteCustomResp = {
	deleted:"deleted"
};

DO.DeleteCustomResp_Validation = {
};


DO.DeleteCustomResp_Defaults = {
	deleted:false
};

DO.DeleteCustomResp_Types = {
};


DO.GetCustomETLTablesParams = {
	project_name:"project_name"
};

DO.GetCustomETLTablesParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetCustomETLTablesParams_Defaults = {
	project_name:""
};

DO.GetCustomETLTablesParams_Types = {
};


DO.GetCustomETLTablesReq = {
	$type:"$type",
	name:"name",
	entity_id:"entity_id",
	dma_id:"dma_id",
	etl_type:"etl_type",
	type:"type"
};

DO.GetCustomETLTablesReq_Validation = {
	name: {
		required: true
	},
	entity_id: {
		required: true,
		number: true
	},
	dma_id: {
		required: true,
		number: true
	},
	etl_type: {
		required: true
	},
	type: {
		required: true
	}
};


DO.GetCustomETLTablesReq_Defaults = {
	$type:"GetCustomETLTablesReq",
	name:"",
	entity_id:0,
	dma_id:0,
	etl_type:DO.ETLType.None,
	type:DO.CustomeETLType.PreStaging
};

DO.GetCustomETLTablesReq_Types = {
	etl_type:"ETLType",
	type:"CustomeETLType"
};


DO.CustomETLTableData = {
	$type:"$type",
	schema:"schema",
	name:"name",
	type:"type",
	display_name:"display_name",
	entity_id:"entity_id",
	block_num:"block_num"
};

DO.CustomETLTableData_Validation = {
	entity_id: {
		number: true
	},
	block_num: {
		number: true
	}
};


DO.CustomETLTableData_Defaults = {
	$type:"CustomETLTableData",
	schema:"",
	name:"",
	type:DO.TableType.TABLE,
	display_name:"",
	entity_id:0,
	block_num:0
};

DO.CustomETLTableData_Types = {
	type:"TableType"
};


DO.GetCustomETLTablesRsp = {
	tables:"tables",
	database:"database"
};

DO.GetCustomETLTablesRsp_Validation = {
};


DO.GetCustomETLTablesRsp_Defaults = {
	tables:[],
	database:null
};

DO.GetCustomETLTablesRsp_Types = {
	tables:"PhysicalEntity",
	database:"DatabaseDto"
};


DO.GetCustomETLColumnsParams = {
	project_name:"project_name"
};

DO.GetCustomETLColumnsParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetCustomETLColumnsParams_Defaults = {
	project_name:""
};

DO.GetCustomETLColumnsParams_Types = {
};


DO.GetCustomETLColumnsReq = {
	$type:"$type",
	name:"name",
	entity_id:"entity_id",
	dma_id:"dma_id",
	etl_type:"etl_type",
	type:"type",
	table_name:"table_name",
	schema:"schema",
	block_num:"block_num"
};

DO.GetCustomETLColumnsReq_Validation = {
	name: {
		required: true
	},
	entity_id: {
		required: true,
		number: true
	},
	dma_id: {
		required: true,
		number: true
	},
	etl_type: {
		required: true
	},
	type: {
		required: true
	},
	table_name: {
		required: true
	},
	schema: {
		required: true
	},
	block_num: {
		number: true
	}
};


DO.GetCustomETLColumnsReq_Defaults = {
	$type:"GetCustomETLColumnsReq",
	name:"",
	entity_id:0,
	dma_id:0,
	etl_type:DO.ETLType.None,
	type:DO.CustomeETLType.PreStaging,
	table_name:"",
	schema:"",
	block_num:-1
};

DO.GetCustomETLColumnsReq_Types = {
	etl_type:"ETLType",
	type:"CustomeETLType"
};


DO.GetCustomETLColumnsRsp = {
	Columns:"Columns"
};

DO.GetCustomETLColumnsRsp_Validation = {
};


DO.GetCustomETLColumnsRsp_Defaults = {
	Columns:[]
};

DO.GetCustomETLColumnsRsp_Types = {
	Columns:"Column"
};


DO.GetDWHTablesParams = {
	project_name:"project_name",
	table_created:"table_created"
};

DO.GetDWHTablesParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetDWHTablesParams_Defaults = {
	project_name:"",
	table_created:false
};

DO.GetDWHTablesParams_Types = {
};


DO.GetDWHTablesRsp = {
	tables:"tables",
	dwh_id:"dwh_id",
	schema_name:"schema_name"
};

DO.GetDWHTablesRsp_Validation = {
	dwh_id: {
		number: true
	}
};


DO.GetDWHTablesRsp_Defaults = {
	tables:[],
	dwh_id:0,
	schema_name:""
};

DO.GetDWHTablesRsp_Types = {
	tables:"DWHTable"
};


DO.DWHTable = {
	name:"name",
	row_count:"row_count",
	view_name:"view_name",
	entity_key:"entity_key",
	block_num:"block_num",
	display_name:"display_name"
};

DO.DWHTable_Validation = {
	row_count: {
		number: true
	},
	entity_key: {
		number: true
	},
	block_num: {
		number: true
	}
};


DO.DWHTable_Defaults = {
	name:"",
	row_count:0,
	view_name:"",
	entity_key:0,
	block_num:0,
	display_name:""
};

DO.DWHTable_Types = {
};


DO.DatawarehouseGetDatabaseInfoParams = {
	project_name:"project_name"
};

DO.DatawarehouseGetDatabaseInfoParams_Validation = {
	project_name: {
		required: true
	}
};


DO.DatawarehouseGetDatabaseInfoParams_Defaults = {
	project_name:""
};

DO.DatawarehouseGetDatabaseInfoParams_Types = {
};


DO.DatawarehouseGetDatabaseInfoRsp = {
	max_namelength:"max_namelength"
};

DO.DatawarehouseGetDatabaseInfoRsp_Validation = {
	max_namelength: {
		number: true
	}
};


DO.DatawarehouseGetDatabaseInfoRsp_Defaults = {
	max_namelength:0
};

DO.DatawarehouseGetDatabaseInfoRsp_Types = {
};


DO.RecreateViewsParams = {
	project_name:"project_name",
	message_guid:"message_guid"
};

DO.RecreateViewsParams_Validation = {
	project_name: {
		required: true
	}
};


DO.RecreateViewsParams_Defaults = {
	project_name:"",
	message_guid:""
};

DO.RecreateViewsParams_Types = {
};


DO.RecreateViewsResp = {
	$type:"$type",
	generated_scripts:"generated_scripts",
	success:"success"
};

DO.RecreateViewsResp_Validation = {
	success: {
		required: true
	}
};


DO.RecreateViewsResp_Defaults = {
	$type:"RecreateViewsResp",
	generated_scripts:[],
	success:false
};

DO.RecreateViewsResp_Types = {
};


DO.DropTablesParams = {
	project_name:"project_name",
	message_guid:"message_guid"
};

DO.DropTablesParams_Validation = {
	project_name: {
		required: true
	}
};


DO.DropTablesParams_Defaults = {
	project_name:"",
	message_guid:""
};

DO.DropTablesParams_Types = {
};


DO.DropTablesReq = {
	drop_dwh:"drop_dwh",
	drop_logging:"drop_logging",
	drop_intermediate:"drop_intermediate",
	regenerate_dwh:"regenerate_dwh",
	regenerate_logging:"regenerate_logging",
	drop_data_mart:"drop_data_mart",
	drop_script_folder:"drop_script_folder",
	reset_project:"reset_project",
	adjust_drop_and_create:"adjust_drop_and_create",
	drop_error_marts:"drop_error_marts",
	drop_archive_ct:"drop_archive_ct"
};

DO.DropTablesReq_Validation = {
};


DO.DropTablesReq_Defaults = {
	drop_dwh:false,
	drop_logging:false,
	drop_intermediate:false,
	regenerate_dwh:false,
	regenerate_logging:false,
	drop_data_mart:false,
	drop_script_folder:false,
	reset_project:false,
	adjust_drop_and_create:false,
	drop_error_marts:false,
	drop_archive_ct:false
};

DO.DropTablesReq_Types = {
};


DO.DropTablesResp = {
	$type:"$type",
	generated_scripts:"generated_scripts"
};

DO.DropTablesResp_Validation = {
};


DO.DropTablesResp_Defaults = {
	$type:"DropTablesResp",
	generated_scripts:[]
};

DO.DropTablesResp_Types = {
};


DO.CleanTablesParams = {
	project_name:"project_name"
};

DO.CleanTablesParams_Validation = {
	project_name: {
		required: true
	}
};


DO.CleanTablesParams_Defaults = {
	project_name:""
};

DO.CleanTablesParams_Types = {
};


DO.PutReplicateServerSettingsParams = {
	replicate_server:"replicate_server"
};

DO.PutReplicateServerSettingsParams_Validation = {
	replicate_server: {
		required: true
	}
};


DO.PutReplicateServerSettingsParams_Defaults = {
	replicate_server:""
};

DO.PutReplicateServerSettingsParams_Types = {
};


DO.DeleteReplicateServerSettingsParams = {
	replicate_server:"replicate_server"
};

DO.DeleteReplicateServerSettingsParams_Validation = {
};


DO.DeleteReplicateServerSettingsParams_Defaults = {
	replicate_server:""
};

DO.DeleteReplicateServerSettingsParams_Types = {
};


DO.GetReplicateServerSettingsParams = {
	replicate_server:"replicate_server"
};

DO.GetReplicateServerSettingsParams_Validation = {
};


DO.GetReplicateServerSettingsParams_Defaults = {
	replicate_server:""
};

DO.GetReplicateServerSettingsParams_Types = {
};


DO.GetReplicateServerSettingsRsp = {
	setting:"setting"
};

DO.GetReplicateServerSettingsRsp_Validation = {
};


DO.GetReplicateServerSettingsRsp_Defaults = {
	setting:null
};

DO.GetReplicateServerSettingsRsp_Types = {
	setting:"ReplicateServerConfigurationDto"
};


DO.GetReplicateServersParams = {
};

DO.GetReplicateServersParams_Validation = {
};


DO.GetReplicateServersParams_Defaults = {
};

DO.GetReplicateServersParams_Types = {
};


DO.GetReplicateServersRsp = {
	replicate_servers:"replicate_servers"
};

DO.GetReplicateServersRsp_Validation = {
};


DO.GetReplicateServersRsp_Defaults = {
	replicate_servers:[]
};

DO.GetReplicateServersRsp_Types = {
	replicate_servers:"ReplicateServerConfigurationDto"
};


DO.GetReplicateTasksParams = {
	project_name:"project_name",
	replicate_server:"replicate_server"
};

DO.GetReplicateTasksParams_Validation = {
};


DO.GetReplicateTasksParams_Defaults = {
	project_name:"",
	replicate_server:""
};

DO.GetReplicateTasksParams_Types = {
};


DO.GetReplicateTasksRsp = {
	replicate_tasks:"replicate_tasks"
};

DO.GetReplicateTasksRsp_Validation = {
};


DO.GetReplicateTasksRsp_Defaults = {
	replicate_tasks:[]
};

DO.GetReplicateTasksRsp_Types = {
};


DO.TestReplicateConnectionParams = {
};

DO.TestReplicateConnectionParams_Validation = {
};


DO.TestReplicateConnectionParams_Defaults = {
};

DO.TestReplicateConnectionParams_Types = {
};


DO.TestReplicateConnectionRsp = {
	status:"status",
	status_text:"status_text"
};

DO.TestReplicateConnectionRsp_Validation = {
};


DO.TestReplicateConnectionRsp_Defaults = {
	status:false,
	status_text:"Connection tested successfully."
};

DO.TestReplicateConnectionRsp_Types = {
};


DO.ListDatabasesParams = {
	project_name:"project_name",
	full:"full"
};

DO.ListDatabasesParams_Validation = {
	project_name: {
		required: true
	},
	full: {
		required: true
	}
};


DO.ListDatabasesParams_Defaults = {
	project_name:"",
	full:false
};

DO.ListDatabasesParams_Types = {
};


DO.DatabaseListRsp = {
	databases:"databases"
};

DO.DatabaseListRsp_Validation = {
};


DO.DatabaseListRsp_Defaults = {
	databases:[]
};

DO.DatabaseListRsp_Types = {
	databases:"DatabaseDto"
};


DO.GetDatabaseParams = {
	project_name:"project_name",
	name_or_id:"name_or_id"
};

DO.GetDatabaseParams_Validation = {
	project_name: {
		required: true
	},
	name_or_id: {
		required: true
	}
};


DO.GetDatabaseParams_Defaults = {
	project_name:"",
	name_or_id:""
};

DO.GetDatabaseParams_Types = {
};


DO.GetDatabaseRsp = {
	database:"database"
};

DO.GetDatabaseRsp_Validation = {
};


DO.GetDatabaseRsp_Defaults = {
	database:null
};

DO.GetDatabaseRsp_Types = {
	database:"DatabaseDto"
};


DO.AddDatabaseParams = {
	$type:"$type",
	project_name:"project_name"
};

DO.AddDatabaseParams_Validation = {
	project_name: {
		required: true
	}
};


DO.AddDatabaseParams_Defaults = {
	$type:"AddDatabaseParams",
	project_name:""
};

DO.AddDatabaseParams_Types = {
};


DO.AddDatabaseReq = {
	$type:"$type",
	database:"database"
};

DO.AddDatabaseReq_Validation = {
};


DO.AddDatabaseReq_Defaults = {
	$type:"AddDatabaseReq",
	database:null
};

DO.AddDatabaseReq_Types = {
	database:"DatabaseDto"
};


DO.AddDatabaseRsp = {
	$type:"$type",
	name_or_id:"name_or_id",
	message:"message"
};

DO.AddDatabaseRsp_Validation = {
	name_or_id: {
		required: true
	}
};


DO.AddDatabaseRsp_Defaults = {
	$type:"AddDatabaseRsp",
	name_or_id:"",
	message:[]
};

DO.AddDatabaseRsp_Types = {
};


DO.AddDwhDatabaseParams = {
	$type:"$type",
	project_name:"project_name"
};

DO.AddDwhDatabaseParams_Validation = {
	project_name: {
		required: true
	}
};


DO.AddDwhDatabaseParams_Defaults = {
	$type:"AddDwhDatabaseParams",
	project_name:""
};

DO.AddDwhDatabaseParams_Types = {
};


DO.AddDwhDatabaseReq = {
	$type:"$type",
	database:"database"
};

DO.AddDwhDatabaseReq_Validation = {
};


DO.AddDwhDatabaseReq_Defaults = {
	$type:"AddDwhDatabaseReq",
	database:null
};

DO.AddDwhDatabaseReq_Types = {
	database:"DatabaseDto"
};


DO.AddDwhDatabaseRsp = {
	$type:"$type",
	name_or_id:"name_or_id",
	message:"message"
};

DO.AddDwhDatabaseRsp_Validation = {
	name_or_id: {
		required: true
	}
};


DO.AddDwhDatabaseRsp_Defaults = {
	$type:"AddDwhDatabaseRsp",
	name_or_id:"",
	message:[]
};

DO.AddDwhDatabaseRsp_Types = {
};


DO.DeleteDatabaseParams = {
	$type:"$type",
	project_name:"project_name",
	database_id:"database_id"
};

DO.DeleteDatabaseParams_Validation = {
	project_name: {
		required: true
	},
	database_id: {
		required: true,
		number: true
	}
};


DO.DeleteDatabaseParams_Defaults = {
	$type:"DeleteDatabaseParams",
	project_name:"",
	database_id:0
};

DO.DeleteDatabaseParams_Types = {
};


DO.DeleteDatabaseRsp = {
	$type:"$type",
	name_or_id:"name_or_id"
};

DO.DeleteDatabaseRsp_Validation = {
};


DO.DeleteDatabaseRsp_Defaults = {
	$type:"DeleteDatabaseRsp",
	name_or_id:""
};

DO.DeleteDatabaseRsp_Types = {
};


DO.DeleteDwhDatabaseParams = {
	$type:"$type",
	project_name:"project_name",
	database_id:"database_id"
};

DO.DeleteDwhDatabaseParams_Validation = {
	project_name: {
		required: true
	},
	database_id: {
		required: true,
		number: true
	}
};


DO.DeleteDwhDatabaseParams_Defaults = {
	$type:"DeleteDwhDatabaseParams",
	project_name:"",
	database_id:0
};

DO.DeleteDwhDatabaseParams_Types = {
};


DO.DeleteDwhDatabaseRsp = {
	$type:"$type",
	name_or_id:"name_or_id"
};

DO.DeleteDwhDatabaseRsp_Validation = {
};


DO.DeleteDwhDatabaseRsp_Defaults = {
	$type:"DeleteDwhDatabaseRsp",
	name_or_id:""
};

DO.DeleteDwhDatabaseRsp_Types = {
};


DO.PutWorkFlowParams = {
	project_name:"project_name",
	name:"name"
};

DO.PutWorkFlowParams_Validation = {
	project_name: {
		required: true
	}
};


DO.PutWorkFlowParams_Defaults = {
	project_name:"",
	name:""
};

DO.PutWorkFlowParams_Types = {
};


DO.PutWorkFlowReq = {
	workflow:"workflow",
	is_default_workflow:"is_default_workflow"
};

DO.PutWorkFlowReq_Validation = {
	workflow: {
		required: true
	}
};


DO.PutWorkFlowReq_Defaults = {
	workflow:{},
	is_default_workflow:false
};

DO.PutWorkFlowReq_Types = {
	workflow:"FlowDto"
};


DO.UpdateDatabaseParams = {
	$type:"$type",
	project_name:"project_name"
};

DO.UpdateDatabaseParams_Validation = {
	project_name: {
		required: true
	}
};


DO.UpdateDatabaseParams_Defaults = {
	$type:"UpdateDatabaseParams",
	project_name:""
};

DO.UpdateDatabaseParams_Types = {
};


DO.UpdateDatabaseReq = {
	$type:"$type",
	database:"database"
};

DO.UpdateDatabaseReq_Validation = {
	database: {
		required: true
	}
};


DO.UpdateDatabaseReq_Defaults = {
	$type:"UpdateDatabaseReq",
	database:{}
};

DO.UpdateDatabaseReq_Types = {
	database:"DatabaseDto"
};


DO.UpdateDatabaseRsp = {
	$type:"$type",
	name_or_id:"name_or_id",
	message:"message"
};

DO.UpdateDatabaseRsp_Validation = {
	name_or_id: {
		required: true
	}
};


DO.UpdateDatabaseRsp_Defaults = {
	$type:"UpdateDatabaseRsp",
	name_or_id:"",
	message:[]
};

DO.UpdateDatabaseRsp_Types = {
};


DO.UpdateDwhDatabaseParams = {
	$type:"$type",
	project_name:"project_name"
};

DO.UpdateDwhDatabaseParams_Validation = {
	project_name: {
		required: true
	}
};


DO.UpdateDwhDatabaseParams_Defaults = {
	$type:"UpdateDwhDatabaseParams",
	project_name:""
};

DO.UpdateDwhDatabaseParams_Types = {
};


DO.UpdateDwhDatabaseReq = {
	$type:"$type",
	database:"database"
};

DO.UpdateDwhDatabaseReq_Validation = {
	database: {
		required: true
	}
};


DO.UpdateDwhDatabaseReq_Defaults = {
	$type:"UpdateDwhDatabaseReq",
	database:{}
};

DO.UpdateDwhDatabaseReq_Types = {
	database:"DatabaseDto"
};


DO.UpdateDwhDatabaseRsp = {
	$type:"$type",
	name_or_id:"name_or_id",
	message:"message"
};

DO.UpdateDwhDatabaseRsp_Validation = {
	name_or_id: {
		required: true
	}
};


DO.UpdateDwhDatabaseRsp_Defaults = {
	$type:"UpdateDwhDatabaseRsp",
	name_or_id:"",
	message:[]
};

DO.UpdateDwhDatabaseRsp_Types = {
};


DO.DatabaseProvider = {
	dbmsId:"dbmsId",
	name:"name",
	display_name:"display_name",
	driver:"driver",
	support_owners:"support_owners",
	support_database_list:"support_database_list",
	role:"role",
	database_name_is_file:"database_name_is_file",
	database_file_ext:"database_file_ext",
	factory:"factory",
	license_token:"license_token",
	qoute_open:"qoute_open",
	qoute_close:"qoute_close",
	can_create_schema:"can_create_schema",
	port:"port",
	max_varchar_length:"max_varchar_length",
	max_byte_length:"max_byte_length",
	max_object_name_init:"max_object_name_init",
	multibyte_character_multiplier:"multibyte_character_multiplier",
	support_regions_list:"support_regions_list",
	support_nvarchar:"support_nvarchar",
	max_nvarchar_length:"max_nvarchar_length",
	support_json:"support_json",
	support_xml:"support_xml"
};

DO.DatabaseProvider_Validation = {
	port: {
		number: true
	},
	max_varchar_length: {
		number: true
	},
	max_byte_length: {
		number: true
	},
	max_object_name_init: {
		number: true
	},
	multibyte_character_multiplier: {
		number: true
	},
	max_nvarchar_length: {
		number: true
	}
};


DO.DatabaseProvider_Defaults = {
	dbmsId:DO.Dbms.MSACCESS,
	name:"",
	display_name:"",
	driver:"",
	support_owners:false,
	support_database_list:false,
	role:DO.Role.SOURCE,
	database_name_is_file:false,
	database_file_ext:"",
	factory:"",
	license_token:"",
	qoute_open:"\"",
	qoute_close:"\"",
	can_create_schema:false,
	port:0,
	max_varchar_length:0,
	max_byte_length:0,
	max_object_name_init:0,
	multibyte_character_multiplier:1,
	support_regions_list:false,
	support_nvarchar:false,
	max_nvarchar_length:0,
	support_json:false,
	support_xml:false
};

DO.DatabaseProvider_Types = {
	dbmsId:"Dbms",
	role:"Role"
};


DO.ListDatabaseProvidersParams = {
	project_name:"project_name"
};

DO.ListDatabaseProvidersParams_Validation = {
	project_name: {
		required: true
	}
};


DO.ListDatabaseProvidersParams_Defaults = {
	project_name:""
};

DO.ListDatabaseProvidersParams_Types = {
};


DO.DatabaseProviderListRsp = {
	database_providers:"database_providers"
};

DO.DatabaseProviderListRsp_Validation = {
};


DO.DatabaseProviderListRsp_Defaults = {
	database_providers:[]
};

DO.DatabaseProviderListRsp_Types = {
	database_providers:"DatabaseProvider"
};


DO.AddTablesToModelParams = {
	project_name:"project_name",
	message_guid:"message_guid",
	name_or_id:"name_or_id"
};

DO.AddTablesToModelParams_Validation = {
	project_name: {
		required: true
	},
	name_or_id: {
		required: true
	}
};


DO.AddTablesToModelParams_Defaults = {
	project_name:"",
	message_guid:"",
	name_or_id:""
};

DO.AddTablesToModelParams_Types = {
};


DO.AddTablesToModelReq = {
	pk_from_replicate:"pk_from_replicate",
	table_patterns:"table_patterns",
	merge:"merge"
};

DO.AddTablesToModelReq_Validation = {
};


DO.AddTablesToModelReq_Defaults = {
	pk_from_replicate:false,
	table_patterns:[],
	merge:false
};

DO.AddTablesToModelReq_Types = {
	table_patterns:"DiscoverTablePattern"
};


DO.AddToModelStatus = {
	id:"id",
	type:"type",
	text:"text"
};

DO.AddToModelStatus_Validation = {
	id: {
		required: true,
		number: true
	}
};


DO.AddToModelStatus_Defaults = {
	id:0,
	type:"",
	text:""
};

DO.AddToModelStatus_Types = {
};


DO.AddTablesToModelRsp = {
	messages:"messages"
};

DO.AddTablesToModelRsp_Validation = {
};


DO.AddTablesToModelRsp_Defaults = {
	messages:[]
};

DO.AddTablesToModelRsp_Types = {
	messages:"AddToModelStatus"
};


DO.GetDatabaseTablesParams = {
	project_name:"project_name"
};

DO.GetDatabaseTablesParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetDatabaseTablesParams_Defaults = {
	project_name:""
};

DO.GetDatabaseTablesParams_Types = {
};


DO.GetDatabaseTablesReq = {
	name_or_id:"name_or_id",
	schema:"schema",
	table_pattern:"table_pattern",
	table_type:"table_type",
	replicate_change_table:"replicate_change_table"
};

DO.GetDatabaseTablesReq_Validation = {
	name_or_id: {
		required: true
	}
};


DO.GetDatabaseTablesReq_Defaults = {
	name_or_id:"",
	schema:"",
	table_pattern:"",
	table_type:DO.TableType.TABLE,
	replicate_change_table:true
};

DO.GetDatabaseTablesReq_Types = {
	table_type:"TableType"
};


DO.GetDatabaseTablesRsp = {
	tables:"tables"
};

DO.GetDatabaseTablesRsp_Validation = {
};


DO.GetDatabaseTablesRsp_Defaults = {
	tables:[]
};

DO.GetDatabaseTablesRsp_Types = {
	tables:"TableData"
};


DO.GetDatabaseSchemasParams = {
	project_name:"project_name",
	name_or_id:"name_or_id",
	schema:"schema"
};

DO.GetDatabaseSchemasParams_Validation = {
	project_name: {
		required: true
	},
	name_or_id: {
		required: true
	}
};


DO.GetDatabaseSchemasParams_Defaults = {
	project_name:"",
	name_or_id:"",
	schema:""
};

DO.GetDatabaseSchemasParams_Types = {
};


DO.GetDatabaseSchemasRsp = {
	schemas:"schemas"
};

DO.GetDatabaseSchemasRsp_Validation = {
};


DO.GetDatabaseSchemasRsp_Defaults = {
	schemas:[]
};

DO.GetDatabaseSchemasRsp_Types = {
};


DO.ClearDBMetaDataParams = {
	project_name:"project_name",
	name_or_id:"name_or_id",
	schema_name:"schema_name",
	table_name:"table_name"
};

DO.ClearDBMetaDataParams_Validation = {
	project_name: {
		required: true
	},
	name_or_id: {
		required: true
	}
};


DO.ClearDBMetaDataParams_Defaults = {
	project_name:"",
	name_or_id:"",
	schema_name:"",
	table_name:""
};

DO.ClearDBMetaDataParams_Types = {
};


DO.FillStorageMetadataFromDatabaseParams = {
	project_name:"project_name",
	message_guid:"message_guid"
};

DO.FillStorageMetadataFromDatabaseParams_Validation = {
	project_name: {
		required: true
	}
};


DO.FillStorageMetadataFromDatabaseParams_Defaults = {
	project_name:"",
	message_guid:""
};

DO.FillStorageMetadataFromDatabaseParams_Types = {
};


DO.GetMaxNameLengthParams = {
	project_name:"project_name",
	db_id:"db_id"
};

DO.GetMaxNameLengthParams_Validation = {
	db_id: {
		number: true
	}
};


DO.GetMaxNameLengthParams_Defaults = {
	project_name:"",
	db_id:0
};

DO.GetMaxNameLengthParams_Types = {
};


DO.GetMaxNameLengthRsp = {
	len:"len"
};

DO.GetMaxNameLengthRsp_Validation = {
	len: {
		number: true
	}
};


DO.GetMaxNameLengthRsp_Defaults = {
	len:0
};

DO.GetMaxNameLengthRsp_Types = {
};


DO.TestConnectionParams = {
	project_name:"project_name"
};

DO.TestConnectionParams_Validation = {
	project_name: {
		required: true
	}
};


DO.TestConnectionParams_Defaults = {
	project_name:""
};

DO.TestConnectionParams_Types = {
};


DO.TestConnectionRsp = {
	status:"status",
	status_text:"status_text"
};

DO.TestConnectionRsp_Validation = {
	status: {
		required: true
	}
};


DO.TestConnectionRsp_Defaults = {
	status:false,
	status_text:"Connection tested successfully."
};

DO.TestConnectionRsp_Types = {
};


DO.TestConnectionReq = {
	database:"database",
	type:"type"
};

DO.TestConnectionReq_Validation = {
};


DO.TestConnectionReq_Defaults = {
	database:null,
	type:DO.ConnectionStringTestType.All
};

DO.TestConnectionReq_Types = {
	database:"DatabaseDto",
	type:"ConnectionStringTestType"
};


DO.TestRemoteConnectionParams = {
	$type:"$type",
	server:"server"
};

DO.TestRemoteConnectionParams_Validation = {
};


DO.TestRemoteConnectionParams_Defaults = {
	$type:"TestRemoteConnectionParams",
	server:"localhost"
};

DO.TestRemoteConnectionParams_Types = {
};


DO.TestConnectionByIdParams = {
	project_name:"project_name",
	id:"id"
};

DO.TestConnectionByIdParams_Validation = {
	id: {
		number: true
	}
};


DO.TestConnectionByIdParams_Defaults = {
	project_name:"",
	id:0
};

DO.TestConnectionByIdParams_Types = {
};


DO.ListCatalogsParams = {
	project_name:"project_name"
};

DO.ListCatalogsParams_Validation = {
};


DO.ListCatalogsParams_Defaults = {
	project_name:""
};

DO.ListCatalogsParams_Types = {
};


DO.ListCatalogsReq = {
	database:"database"
};

DO.ListCatalogsReq_Validation = {
	database: {
		required: true
	}
};


DO.ListCatalogsReq_Defaults = {
	database:{}
};

DO.ListCatalogsReq_Types = {
	database:"DatabaseDto"
};


DO.ListCatalogsRsp = {
	catalogs:"catalogs"
};

DO.ListCatalogsRsp_Validation = {
};


DO.ListCatalogsRsp_Defaults = {
	catalogs:[]
};

DO.ListCatalogsRsp_Types = {
};


DO.ListSchemasParams = {
	project_name:"project_name"
};

DO.ListSchemasParams_Validation = {
};


DO.ListSchemasParams_Defaults = {
	project_name:""
};

DO.ListSchemasParams_Types = {
};


DO.ListSchemasReq = {
	database:"database"
};

DO.ListSchemasReq_Validation = {
	database: {
		required: true
	}
};


DO.ListSchemasReq_Defaults = {
	database:{}
};

DO.ListSchemasReq_Types = {
	database:"DatabaseDto"
};


DO.ListSchemasRsp = {
	schemas:"schemas"
};

DO.ListSchemasRsp_Validation = {
};


DO.ListSchemasRsp_Defaults = {
	schemas:[]
};

DO.ListSchemasRsp_Types = {
};


DO.ListRegionsParams = {
	project_name:"project_name"
};

DO.ListRegionsParams_Validation = {
};


DO.ListRegionsParams_Defaults = {
	project_name:""
};

DO.ListRegionsParams_Types = {
};


DO.ListRegionsReq = {
	database:"database"
};

DO.ListRegionsReq_Validation = {
	database: {
		required: true
	}
};


DO.ListRegionsReq_Defaults = {
	database:{}
};

DO.ListRegionsReq_Types = {
	database:"DatabaseDto"
};


DO.ListRegionsRsp = {
	regions:"regions"
};

DO.ListRegionsRsp_Validation = {
};


DO.ListRegionsRsp_Defaults = {
	regions:[]
};

DO.ListRegionsRsp_Types = {
};


DO.ListSnowflakeWarehousesParams = {
	project_name:"project_name"
};

DO.ListSnowflakeWarehousesParams_Validation = {
};


DO.ListSnowflakeWarehousesParams_Defaults = {
	project_name:""
};

DO.ListSnowflakeWarehousesParams_Types = {
};


DO.ListSnowflakeWarehousesReq = {
	database:"database"
};

DO.ListSnowflakeWarehousesReq_Validation = {
	database: {
		required: true
	}
};


DO.ListSnowflakeWarehousesReq_Defaults = {
	database:{}
};

DO.ListSnowflakeWarehousesReq_Types = {
	database:"DatabaseDto"
};


DO.ListSnowflakeWarehousesRsp = {
	ListSnowflakeWarehouses:"ListSnowflakeWarehouses"
};

DO.ListSnowflakeWarehousesRsp_Validation = {
};


DO.ListSnowflakeWarehousesRsp_Defaults = {
	ListSnowflakeWarehouses:[]
};

DO.ListSnowflakeWarehousesRsp_Types = {
	ListSnowflakeWarehouses:"SnowflakeWarehouse"
};


DO.SnowflakeWarehouse = {
	warehouse_name:"warehouse_name",
	is_active:"is_active"
};

DO.SnowflakeWarehouse_Validation = {
};


DO.SnowflakeWarehouse_Defaults = {
	warehouse_name:"",
	is_active:""
};

DO.SnowflakeWarehouse_Types = {
};


DO.ListTableColumnsParams = {
	project_name:"project_name",
	table_schema:"table_schema",
	table_name:"table_name",
	db_id:"db_id"
};

DO.ListTableColumnsParams_Validation = {
};


DO.ListTableColumnsParams_Defaults = {
	project_name:"",
	table_schema:"",
	table_name:"",
	db_id:""
};

DO.ListTableColumnsParams_Types = {
};


DO.ListTableColumnsRsp = {
	Columns:"Columns"
};

DO.ListTableColumnsRsp_Validation = {
};


DO.ListTableColumnsRsp_Defaults = {
	Columns:[]
};

DO.ListTableColumnsRsp_Types = {
	Columns:"Column"
};


DO.ListDescribeQueryColumnsParams = {
	project_name:"project_name",
	db_id:"db_id"
};

DO.ListDescribeQueryColumnsParams_Validation = {
	project_name: {
		required: true
	},
	db_id: {
		required: true
	}
};


DO.ListDescribeQueryColumnsParams_Defaults = {
	project_name:"",
	db_id:""
};

DO.ListDescribeQueryColumnsParams_Types = {
};


DO.ListDescribeQueryColumnsRsp = {
	Columns:"Columns"
};

DO.ListDescribeQueryColumnsRsp_Validation = {
};


DO.ListDescribeQueryColumnsRsp_Defaults = {
	Columns:[]
};

DO.ListDescribeQueryColumnsRsp_Types = {
	Columns:"Column"
};


DO.ListDescribeQueryColumnsReq = {
	statement:"statement"
};

DO.ListDescribeQueryColumnsReq_Validation = {
	statement: {
		required: true
	}
};


DO.ListDescribeQueryColumnsReq_Defaults = {
	statement:""
};

DO.ListDescribeQueryColumnsReq_Types = {
};


DO.ProjectTaskStatus = {
	TaskName:"TaskName",
	StartTime:"StartTime",
	EndTime:"EndTime",
	Active:"Active",
	ExitStatus:"ExitStatus"
};

DO.ProjectTaskStatus_Validation = {
	ExitStatus: {
		number: true
	}
};


DO.ProjectTaskStatus_Defaults = {
	TaskName:"",
	StartTime:"",
	EndTime:"",
	Active:false,
	ExitStatus:0
};

DO.ProjectTaskStatus_Types = {
};


DO.ProjectStatus = {
	source_db:"source_db",
	dwh_db:"dwh_db",
	entities:"entities",
	relationships:"relationships",
	attributes:"attributes",
	source_databases:"source_databases",
	dwh_databases:"dwh_databases",
	task_statuses:"task_statuses",
	dwh_tables_count:"dwh_tables_count",
	dwh_etl_statuses_list:"dwh_etl_statuses_list",
	datamart_etl_statuses_list:"datamart_etl_statuses_list",
	is_dwh_populated:"is_dwh_populated",
	connected_to_dwh:"connected_to_dwh",
	error_msg:"error_msg",
	cmd_tasks_status:"cmd_tasks_status",
	is_date_model_exist:"is_date_model_exist",
	is_time_model_exist:"is_time_model_exist"
};

DO.ProjectStatus_Validation = {
	source_db: {
		number: true
	},
	dwh_db: {
		number: true
	},
	entities: {
		number: true
	},
	relationships: {
		number: true
	},
	attributes: {
		number: true
	},
	dwh_tables_count: {
		number: true
	}
};


DO.ProjectStatus_Defaults = {
	source_db:0,
	dwh_db:0,
	entities:0,
	relationships:0,
	attributes:0,
	source_databases:[],
	dwh_databases:[],
	task_statuses:[],
	dwh_tables_count:0,
	dwh_etl_statuses_list:[],
	datamart_etl_statuses_list:[],
	is_dwh_populated:false,
	connected_to_dwh:false,
	error_msg:"",
	cmd_tasks_status:[],
	is_date_model_exist:false,
	is_time_model_exist:false
};

DO.ProjectStatus_Types = {
	source_databases:"DatabaseDto",
	dwh_databases:"DatabaseDto",
	task_statuses:"ProjectTaskStatus",
	dwh_etl_statuses_list:"DWHProjectEtlStatus",
	datamart_etl_statuses_list:"DmProjectEtlStatus",
	cmd_tasks_status:"CommandTaskStatus"
};


DO.CommandTaskStatus = {
	cmd_task_name:"cmd_task_name",
	can_run:"can_run",
	run_message:"run_message"
};

DO.CommandTaskStatus_Validation = {
};


DO.CommandTaskStatus_Defaults = {
	cmd_task_name:"",
	can_run:true,
	run_message:""
};

DO.CommandTaskStatus_Types = {
};


DO.ProjectEtlStatus = {
	$type:"$type",
	name:"name",
	id:"id",
	instruction_count:"instruction_count",
	can_populate:"can_populate",
	run_message:"run_message",
	dwh_full_load:"dwh_full_load",
	can_not_populate_reason:"can_not_populate_reason"
};

DO.ProjectEtlStatus_Validation = {
	id: {
		number: true
	},
	instruction_count: {
		number: true
	}
};


DO.ProjectEtlStatus_Defaults = {
	$type:"ProjectEtlStatus",
	name:"",
	id:0,
	instruction_count:0,
	can_populate:false,
	run_message:"",
	dwh_full_load:false,
	can_not_populate_reason:DO.CanNotPopulateReason.CAN_POPULATE
};

DO.ProjectEtlStatus_Types = {
	can_not_populate_reason:"CanNotPopulateReason"
};


DO.DWHProjectEtlStatus = {
	$type:"$type",
	name:"name",
	id:"id",
	instruction_count:"instruction_count",
	can_populate:"can_populate",
	run_message:"run_message",
	dwh_full_load:"dwh_full_load",
	can_not_populate_reason:"can_not_populate_reason"
};

DO.DWHProjectEtlStatus_Validation = {
	id: {
		number: true
	},
	instruction_count: {
		number: true
	}
};


DO.DWHProjectEtlStatus_Defaults = {
	$type:"DWHProjectEtlStatus",
	name:"",
	id:0,
	instruction_count:0,
	can_populate:false,
	run_message:"",
	dwh_full_load:false,
	can_not_populate_reason:DO.CanNotPopulateReason.CAN_POPULATE
};

DO.DWHProjectEtlStatus_Types = {
	can_not_populate_reason:"CanNotPopulateReason"
};


DO.DmProjectEtlStatus = {
	$type:"$type",
	name:"name",
	id:"id",
	instruction_count:"instruction_count",
	can_populate:"can_populate",
	run_message:"run_message",
	dwh_full_load:"dwh_full_load",
	can_not_populate_reason:"can_not_populate_reason",
	dm_tables_created:"dm_tables_created",
	status:"status",
	is_populate_allowed:"is_populate_allowed",
	can_generate:"can_generate",
	can_create_tables:"can_create_tables"
};

DO.DmProjectEtlStatus_Validation = {
	id: {
		number: true
	},
	instruction_count: {
		number: true
	}
};


DO.DmProjectEtlStatus_Defaults = {
	$type:"DmProjectEtlStatus",
	name:"",
	id:0,
	instruction_count:0,
	can_populate:false,
	run_message:"",
	dwh_full_load:false,
	can_not_populate_reason:DO.CanNotPopulateReason.CAN_POPULATE,
	dm_tables_created:false,
	status:DO.FactDimStatus.VALID,
	is_populate_allowed:true,
	can_generate:true,
	can_create_tables:true
};

DO.DmProjectEtlStatus_Types = {
	can_not_populate_reason:"CanNotPopulateReason",
	status:"FactDimStatus"
};


DO.CommitVersionControlParams = {
	project_name:"project_name",
	message_guid:"message_guid"
};

DO.CommitVersionControlParams_Validation = {
	project_name: {
		required: true
	}
};


DO.CommitVersionControlParams_Defaults = {
	project_name:"",
	message_guid:""
};

DO.CommitVersionControlParams_Types = {
};


DO.CommitVersionControlReq = {
	comment:"comment",
	push_to_remote:"push_to_remote"
};

DO.CommitVersionControlReq_Validation = {
	comment: {
		required: true,
		maxLength: 260
	}
};


DO.CommitVersionControlReq_Defaults = {
	comment:"",
	push_to_remote:false
};

DO.CommitVersionControlReq_Types = {
};


DO.GetRevisionHistoryVersionControlParams = {
	project_name:"project_name",
	count:"count"
};

DO.GetRevisionHistoryVersionControlParams_Validation = {
	count: {
		number: true
	}
};


DO.GetRevisionHistoryVersionControlParams_Defaults = {
	project_name:"",
	count:0
};

DO.GetRevisionHistoryVersionControlParams_Types = {
};


DO.GetRevisionHistoryVersionControlRsp = {
	revision_history:"revision_history"
};

DO.GetRevisionHistoryVersionControlRsp_Validation = {
};


DO.GetRevisionHistoryVersionControlRsp_Defaults = {
	revision_history:[]
};

DO.GetRevisionHistoryVersionControlRsp_Types = {
	revision_history:"RevisionHistory"
};


DO.RevisionHistory = {
	sha_code:"sha_code",
	date:"date",
	date_num:"date_num",
	author:"author",
	message:"message"
};

DO.RevisionHistory_Validation = {
	date_num: {
		number: true
	}
};


DO.RevisionHistory_Defaults = {
	sha_code:"",
	date:"",
	date_num:0,
	author:"",
	message:""
};

DO.RevisionHistory_Types = {
};


DO.RevertToRevisionParams = {
	project_name:"project_name"
};

DO.RevertToRevisionParams_Validation = {
};


DO.RevertToRevisionParams_Defaults = {
	project_name:""
};

DO.RevertToRevisionParams_Types = {
};


DO.RevertToRevisionReq = {
	revision_identifer:"revision_identifer"
};

DO.RevertToRevisionReq_Validation = {
};


DO.RevertToRevisionReq_Defaults = {
	revision_identifer:""
};

DO.RevertToRevisionReq_Types = {
};


DO.DownloadRevisionToPackageParams = {
	project_name:"project_name",
	revision_identifer:"revision_identifer"
};

DO.DownloadRevisionToPackageParams_Validation = {
};


DO.DownloadRevisionToPackageParams_Defaults = {
	project_name:"",
	revision_identifer:""
};

DO.DownloadRevisionToPackageParams_Types = {
};


DO.CreateDeploymentPackageParams = {
	project_name:"project_name",
	version:"version",
	description:"description",
	exclude_env_variable_values:"exclude_env_variable_values"
};

DO.CreateDeploymentPackageParams_Validation = {
};


DO.CreateDeploymentPackageParams_Defaults = {
	project_name:"",
	version:"",
	description:"",
	exclude_env_variable_values:true
};

DO.CreateDeploymentPackageParams_Types = {
};


DO.UploadDeploymentPackageParams = {
};

DO.UploadDeploymentPackageParams_Validation = {
};


DO.UploadDeploymentPackageParams_Defaults = {
};

DO.UploadDeploymentPackageParams_Types = {
};


DO.UploadDeploymentPackageRsp = {
	temp_file_name:"temp_file_name",
	temp_file_content:"temp_file_content"
};

DO.UploadDeploymentPackageRsp_Validation = {
};


DO.UploadDeploymentPackageRsp_Defaults = {
	temp_file_name:"",
	temp_file_content:""
};

DO.UploadDeploymentPackageRsp_Types = {
};


DO.DeployDeploymentPackageParams = {
};

DO.DeployDeploymentPackageParams_Validation = {
};


DO.DeployDeploymentPackageParams_Defaults = {
};

DO.DeployDeploymentPackageParams_Types = {
};


DO.DeployDeploymentPackageReq = {
	temp_file_name:"temp_file_name",
	new_project_name:"new_project_name"
};

DO.DeployDeploymentPackageReq_Validation = {
};


DO.DeployDeploymentPackageReq_Defaults = {
	temp_file_name:"",
	new_project_name:""
};

DO.DeployDeploymentPackageReq_Types = {
};


DO.DeployDeploymentPackageRsp = {
};

DO.DeployDeploymentPackageRsp_Validation = {
};


DO.DeployDeploymentPackageRsp_Defaults = {
};

DO.DeployDeploymentPackageRsp_Types = {
};


DO.CreateDiagnosticsPackageParams = {
	project_name:"project_name"
};

DO.CreateDiagnosticsPackageParams_Validation = {
};


DO.CreateDiagnosticsPackageParams_Defaults = {
	project_name:""
};

DO.CreateDiagnosticsPackageParams_Types = {
};


DO.GetProjectStatusParams = {
	project_name:"project_name",
	refresh_status:"refresh_status"
};

DO.GetProjectStatusParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetProjectStatusParams_Defaults = {
	project_name:"",
	refresh_status:false
};

DO.GetProjectStatusParams_Types = {
};


DO.GetProjectStatusRsp = {
	status:"status"
};

DO.GetProjectStatusRsp_Validation = {
};


DO.GetProjectStatusRsp_Defaults = {
	status:null
};

DO.GetProjectStatusRsp_Types = {
	status:"ProjectStatus"
};


DO.EntityDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	description:"description",
	time_model_entity_id:"time_model_entity_id",
	is_reference_entity:"is_reference_entity",
	save_history:"save_history",
	use_backdating:"use_backdating",
	use_precurse_rows:"use_precurse_rows"
};

DO.EntityDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	time_model_entity_id: {
		number: true
	}
};


DO.EntityDto_Defaults = {
	$type:"EntityDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	description:"",
	time_model_entity_id:0,
	is_reference_entity:false,
	save_history:true,
	use_backdating:false,
	use_precurse_rows:false
};

DO.EntityDto_Types = {
	metadata:"DTObjectMetaData"
};


DO.EntityFull = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	description:"description",
	time_model_entity_id:"time_model_entity_id",
	is_reference_entity:"is_reference_entity",
	save_history:"save_history",
	use_backdating:"use_backdating",
	use_precurse_rows:"use_precurse_rows",
	attributes:"attributes",
	table_columns_ext:"table_columns_ext"
};

DO.EntityFull_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	time_model_entity_id: {
		number: true
	}
};


DO.EntityFull_Defaults = {
	$type:"EntityFull",
	metadata:null,
	name:"",
	version:0,
	id:0,
	description:"",
	time_model_entity_id:0,
	is_reference_entity:false,
	save_history:true,
	use_backdating:false,
	use_precurse_rows:false,
	attributes:[],
	table_columns_ext:[]
};

DO.EntityFull_Types = {
	metadata:"DTObjectMetaData",
	attributes:"DomainAttributeDto",
	table_columns_ext:"TableColumnExtended"
};


DO.PhysicalPropertiesDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	table_modifier_type:"table_modifier_type",
	table_suffix_text:"table_suffix_text"
};

DO.PhysicalPropertiesDto_Validation = {
	version: {
		number: true
	}
};


DO.PhysicalPropertiesDto_Defaults = {
	$type:"PhysicalPropertiesDto",
	metadata:null,
	name:"",
	version:0,
	table_modifier_type:DO.EntityTableModifierType.PROJECT_SETTINGS_DEFAULT,
	table_suffix_text:""
};

DO.PhysicalPropertiesDto_Types = {
	metadata:"DTObjectMetaData",
	table_modifier_type:"EntityTableModifierType"
};


DO.HivePhysicalProperties = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	table_modifier_type:"table_modifier_type",
	table_suffix_text:"table_suffix_text",
	has_partition_info:"has_partition_info",
	partition_inf:"partition_inf"
};

DO.HivePhysicalProperties_Validation = {
	version: {
		number: true
	}
};


DO.HivePhysicalProperties_Defaults = {
	$type:"HivePhysicalProperties",
	metadata:null,
	name:"",
	version:0,
	table_modifier_type:DO.EntityTableModifierType.PROJECT_SETTINGS_DEFAULT,
	table_suffix_text:"",
	has_partition_info:false,
	partition_inf:null
};

DO.HivePhysicalProperties_Types = {
	metadata:"DTObjectMetaData",
	table_modifier_type:"EntityTableModifierType",
	partition_inf:"HivePartitionInfo"
};


DO.HivePartitionInfo = {
	physical_column_info:"physical_column_info"
};

DO.HivePartitionInfo_Validation = {
};


DO.HivePartitionInfo_Defaults = {
	physical_column_info:[]
};

DO.HivePartitionInfo_Types = {
	physical_column_info:"PhysicalColumnInfo"
};


DO.RedshiftPhysicalProperties = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	table_modifier_type:"table_modifier_type",
	table_suffix_text:"table_suffix_text",
	has_dist_info:"has_dist_info",
	has_sort_info:"has_sort_info",
	dist_info:"dist_info",
	sort_info:"sort_info"
};

DO.RedshiftPhysicalProperties_Validation = {
	version: {
		number: true
	}
};


DO.RedshiftPhysicalProperties_Defaults = {
	$type:"RedshiftPhysicalProperties",
	metadata:null,
	name:"",
	version:0,
	table_modifier_type:DO.EntityTableModifierType.PROJECT_SETTINGS_DEFAULT,
	table_suffix_text:"",
	has_dist_info:false,
	has_sort_info:false,
	dist_info:null,
	sort_info:null
};

DO.RedshiftPhysicalProperties_Types = {
	metadata:"DTObjectMetaData",
	table_modifier_type:"EntityTableModifierType",
	dist_info:"RedshiftDistInfo",
	sort_info:"RedshiftSortInfo"
};


DO.RedshiftDistInfo = {
	physical_column_info:"physical_column_info",
	type:"type"
};

DO.RedshiftDistInfo_Validation = {
};


DO.RedshiftDistInfo_Defaults = {
	physical_column_info:[],
	type:DO.RedshiftPrimaryIndexType.EVEN
};

DO.RedshiftDistInfo_Types = {
	physical_column_info:"PhysicalColumnInfo",
	type:"RedshiftPrimaryIndexType"
};


DO.RedshiftSortInfo = {
	physical_column_info:"physical_column_info",
	type:"type"
};

DO.RedshiftSortInfo_Validation = {
};


DO.RedshiftSortInfo_Defaults = {
	physical_column_info:[],
	type:DO.RedshiftSortType.NONE
};

DO.RedshiftSortInfo_Types = {
	physical_column_info:"PhysicalColumnInfo",
	type:"RedshiftSortType"
};


DO.AzurePhysicalProperties = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	table_modifier_type:"table_modifier_type",
	table_suffix_text:"table_suffix_text",
	has_dist_info:"has_dist_info",
	dist_info:"dist_info"
};

DO.AzurePhysicalProperties_Validation = {
	version: {
		number: true
	}
};


DO.AzurePhysicalProperties_Defaults = {
	$type:"AzurePhysicalProperties",
	metadata:null,
	name:"",
	version:0,
	table_modifier_type:DO.EntityTableModifierType.PROJECT_SETTINGS_DEFAULT,
	table_suffix_text:"",
	has_dist_info:false,
	dist_info:null
};

DO.AzurePhysicalProperties_Types = {
	metadata:"DTObjectMetaData",
	table_modifier_type:"EntityTableModifierType",
	dist_info:"AzureDistInfo"
};


DO.AzureDistInfo = {
	physical_column_info:"physical_column_info",
	type:"type"
};

DO.AzureDistInfo_Validation = {
};


DO.AzureDistInfo_Defaults = {
	physical_column_info:[],
	type:DO.AzurePrimaryIndexType.HASH
};

DO.AzureDistInfo_Types = {
	physical_column_info:"PhysicalColumnInfo",
	type:"AzurePrimaryIndexType"
};


DO.PhysicalColumnInfo = {
	role_id:"role_id",
	column_name_internal:"column_name_internal",
	ordinal:"ordinal"
};

DO.PhysicalColumnInfo_Validation = {
	role_id: {
		number: true
	},
	ordinal: {
		number: true
	}
};


DO.PhysicalColumnInfo_Defaults = {
	role_id:-1,
	column_name_internal:"",
	ordinal:0
};

DO.PhysicalColumnInfo_Types = {
};


DO.DocItem = {
	$type:"$type",
	name:"name"
};

DO.DocItem_Validation = {
};


DO.DocItem_Defaults = {
	$type:"DocItem",
	name:""
};

DO.DocItem_Types = {
};


DO.NodesList = {
	$type:"$type",
	name:"name",
	children:"children"
};

DO.NodesList_Validation = {
};


DO.NodesList_Defaults = {
	$type:"NodesList",
	name:"",
	children:[]
};

DO.NodesList_Types = {
	children:"DocItem"
};


DO.LeafsList = {
	$type:"$type",
	name:"name",
	children:"children"
};

DO.LeafsList_Validation = {
};


DO.LeafsList_Defaults = {
	$type:"LeafsList",
	name:"",
	children:[]
};

DO.LeafsList_Types = {
	children:"DTObject"
};


DO.LeafList = {
	$type:"$type",
	name:"name",
	object:"object"
};

DO.LeafList_Validation = {
};


DO.LeafList_Defaults = {
	$type:"LeafList",
	name:"",
	object:null
};

DO.LeafList_Types = {
	object:"DTObject"
};


DO.NodesLeafList = {
	$type:"$type",
	name:"name",
	object:"object",
	children:"children"
};

DO.NodesLeafList_Validation = {
};


DO.NodesLeafList_Defaults = {
	$type:"NodesLeafList",
	name:"",
	object:null,
	children:[]
};

DO.NodesLeafList_Types = {
	object:"DTObject",
	children:"DocItem"
};


DO.EntityDWHLineageInfoDocumentation = {
	$type:"$type",
	name:"name",
	info:"info"
};

DO.EntityDWHLineageInfoDocumentation_Validation = {
};


DO.EntityDWHLineageInfoDocumentation_Defaults = {
	$type:"EntityDWHLineageInfoDocumentation",
	name:"",
	info:null
};

DO.EntityDWHLineageInfoDocumentation_Types = {
	info:"DWHLineageInfo"
};


DO.ObjectList = {
	$type:"$type",
	name:"name",
	objects:"objects"
};

DO.ObjectList_Validation = {
};


DO.ObjectList_Defaults = {
	$type:"ObjectList",
	name:"",
	objects:[]
};

DO.ObjectList_Types = {
	objects:"DTObject"
};


DO.DocDomainAttributeDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	domain_attribute:"domain_attribute",
	used_in_entities:"used_in_entities"
};

DO.DocDomainAttributeDto_Validation = {
	version: {
		number: true
	}
};


DO.DocDomainAttributeDto_Defaults = {
	$type:"DocDomainAttributeDto",
	metadata:null,
	name:"",
	version:0,
	domain_attribute:null,
	used_in_entities:[]
};

DO.DocDomainAttributeDto_Types = {
	metadata:"DTObjectMetaData",
	domain_attribute:"DomainAttributeDto"
};


DO.DocTransformationDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	transformation:"transformation",
	usage_list:"usage_list"
};

DO.DocTransformationDto_Validation = {
	version: {
		number: true
	}
};


DO.DocTransformationDto_Defaults = {
	$type:"DocTransformationDto",
	metadata:null,
	name:"",
	version:0,
	transformation:null,
	usage_list:[]
};

DO.DocTransformationDto_Types = {
	metadata:"DTObjectMetaData",
	transformation:"ReusableTransformation"
};


DO.DocumentationModel = {
	generation_time:"generation_time",
	project_name:"project_name",
	model:"model",
	etl_sets:"etl_sets",
	data_marts:"data_marts",
	appendix:"appendix"
};

DO.DocumentationModel_Validation = {
};


DO.DocumentationModel_Defaults = {
	generation_time:"",
	project_name:"",
	model:null,
	etl_sets:null,
	data_marts:null,
	appendix:null
};

DO.DocumentationModel_Types = {
	model:"NodesList",
	etl_sets:"NodesList",
	data_marts:"NodesList",
	appendix:"NodesList"
};


DO.TableColumnExtended = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	poe:"poe",
	pbe:"pbe",
	prefix:"prefix",
	is_primary:"is_primary",
	history_type:"history_type",
	block:"block",
	description:"description",
	ordinal:"ordinal",
	time_model_role_id:"time_model_role_id",
	expression:"expression",
	unknown_value:"unknown_value",
	attribute_name:"attribute_name",
	is_fk:"is_fk",
	domainAttribute:"domainAttribute",
	entity:"entity"
};

DO.TableColumnExtended_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	poe: {
		number: true
	},
	pbe: {
		number: true
	},
	block: {
		number: true
	},
	ordinal: {
		number: true
	},
	time_model_role_id: {
		number: true
	}
};


DO.TableColumnExtended_Defaults = {
	$type:"TableColumnExtended",
	metadata:null,
	name:"",
	version:0,
	id:0,
	poe:0,
	pbe:0,
	prefix:"",
	is_primary:false,
	history_type:DO.HistoryType.N,
	block:0,
	description:"",
	ordinal:0,
	time_model_role_id:0,
	expression:null,
	unknown_value:"",
	attribute_name:"",
	is_fk:false,
	domainAttribute:null,
	entity:null
};

DO.TableColumnExtended_Types = {
	metadata:"DTObjectMetaData",
	history_type:"HistoryType",
	expression:"Expression",
	domainAttribute:"DomainAttributeDto",
	entity:"EntityDto"
};


DO.TableColumnDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	poe:"poe",
	pbe:"pbe",
	prefix:"prefix",
	is_primary:"is_primary",
	history_type:"history_type",
	block:"block",
	description:"description",
	ordinal:"ordinal",
	time_model_role_id:"time_model_role_id",
	expression:"expression",
	unknown_value:"unknown_value",
	attribute_name:"attribute_name"
};

DO.TableColumnDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	poe: {
		number: true
	},
	pbe: {
		number: true
	},
	block: {
		number: true
	},
	ordinal: {
		number: true
	},
	time_model_role_id: {
		number: true
	}
};


DO.TableColumnDto_Defaults = {
	$type:"TableColumnDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	poe:0,
	pbe:0,
	prefix:"",
	is_primary:false,
	history_type:DO.HistoryType.N,
	block:0,
	description:"",
	ordinal:0,
	time_model_role_id:0,
	expression:null,
	unknown_value:"",
	attribute_name:""
};

DO.TableColumnDto_Types = {
	metadata:"DTObjectMetaData",
	history_type:"HistoryType",
	expression:"Expression"
};


DO.TableColumnDtoPP = {
	poe:"poe",
	pbe:"pbe"
};

DO.TableColumnDtoPP_Validation = {
	poe: {
		number: true
	},
	pbe: {
		number: true
	}
};


DO.TableColumnDtoPP_Defaults = {
	poe:0,
	pbe:0
};

DO.TableColumnDtoPP_Types = {
};


DO.DomainAttributeDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	description:"description",
	time_model_entity_id:"time_model_entity_id",
	is_reference_entity:"is_reference_entity",
	save_history:"save_history",
	use_backdating:"use_backdating",
	use_precurse_rows:"use_precurse_rows",
	type:"type",
	length:"length",
	scale:"scale",
	unknown_value:"unknown_value",
	attribute_old_name:"attribute_old_name"
};

DO.DomainAttributeDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	time_model_entity_id: {
		number: true
	},
	type: {
		required: true
	},
	length: {
		required: true,
		number: true
	},
	scale: {
		required: true,
		number: true
	}
};


DO.DomainAttributeDto_Defaults = {
	$type:"DomainAttributeDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	description:"",
	time_model_entity_id:0,
	is_reference_entity:false,
	save_history:true,
	use_backdating:false,
	use_precurse_rows:false,
	type:DO.ACDataType.NotSupported,
	length:0,
	scale:0,
	unknown_value:"",
	attribute_old_name:""
};

DO.DomainAttributeDto_Types = {
	metadata:"DTObjectMetaData",
	type:"ACDataType"
};


DO.AddEntityParams = {
	project_name:"project_name"
};

DO.AddEntityParams_Validation = {
	project_name: {
		required: true
	}
};


DO.AddEntityParams_Defaults = {
	project_name:""
};

DO.AddEntityParams_Types = {
};


DO.AddEntityResp = {
	res:"res"
};

DO.AddEntityResp_Validation = {
};


DO.AddEntityResp_Defaults = {
	res:null
};

DO.AddEntityResp_Types = {
	res:"EntityDto"
};


DO.UpdateEntityParams = {
	project_name:"project_name"
};

DO.UpdateEntityParams_Validation = {
	project_name: {
		required: true
	}
};


DO.UpdateEntityParams_Defaults = {
	project_name:""
};

DO.UpdateEntityParams_Types = {
};


DO.UpdateEntityResp = {
	res:"res",
	message:"message"
};

DO.UpdateEntityResp_Validation = {
};


DO.UpdateEntityResp_Defaults = {
	res:null,
	message:""
};

DO.UpdateEntityResp_Types = {
	res:"EntityDto"
};


DO.DeleteEntityParams = {
	project_name:"project_name",
	entity_id:"entity_id"
};

DO.DeleteEntityParams_Validation = {
	project_name: {
		required: true
	},
	entity_id: {
		required: true,
		number: true
	}
};


DO.DeleteEntityParams_Defaults = {
	project_name:"",
	entity_id:0
};

DO.DeleteEntityParams_Types = {
};


DO.DeleteDomainAttributesParams = {
	project_name:"project_name"
};

DO.DeleteDomainAttributesParams_Validation = {
	project_name: {
		required: true
	}
};


DO.DeleteDomainAttributesParams_Defaults = {
	project_name:""
};

DO.DeleteDomainAttributesParams_Types = {
};


DO.DeleteDomainAttributesReq = {
	domain_att_ids:"domain_att_ids"
};

DO.DeleteDomainAttributesReq_Validation = {
	domain_att_ids: {
		number: true
	}
};


DO.DeleteDomainAttributesReq_Defaults = {
	domain_att_ids:[]
};

DO.DeleteDomainAttributesReq_Types = {
};


DO.DeleteEntitiesParams = {
	project_name:"project_name"
};

DO.DeleteEntitiesParams_Validation = {
	project_name: {
		required: true
	}
};


DO.DeleteEntitiesParams_Defaults = {
	project_name:""
};

DO.DeleteEntitiesParams_Types = {
};


DO.DeleteEntitiesReq = {
	entities_id:"entities_id"
};

DO.DeleteEntitiesReq_Validation = {
	entities_id: {
		number: true
	}
};


DO.DeleteEntitiesReq_Defaults = {
	entities_id:[]
};

DO.DeleteEntitiesReq_Types = {
};


DO.AddTableColumnParams = {
	project_name:"project_name"
};

DO.AddTableColumnParams_Validation = {
	project_name: {
		required: true
	}
};


DO.AddTableColumnParams_Defaults = {
	project_name:""
};

DO.AddTableColumnParams_Types = {
};


DO.AddTableColumnResp = {
	res:"res"
};

DO.AddTableColumnResp_Validation = {
};


DO.AddTableColumnResp_Defaults = {
	res:null
};

DO.AddTableColumnResp_Types = {
	res:"TableColumnDto"
};


DO.AddTableRelationParams = {
	project_name:"project_name"
};

DO.AddTableRelationParams_Validation = {
	project_name: {
		required: true
	}
};


DO.AddTableRelationParams_Defaults = {
	project_name:""
};

DO.AddTableRelationParams_Types = {
};


DO.AddTableRelationReq = {
	table_column:"table_column",
	replace_roles:"replace_roles"
};

DO.AddTableRelationReq_Validation = {
};


DO.AddTableRelationReq_Defaults = {
	table_column:null,
	replace_roles:[]
};

DO.AddTableRelationReq_Types = {
	table_column:"TableColumnDto",
	replace_roles:"ReplaceColumn"
};


DO.AddTableRelationResp = {
	res:"res"
};

DO.AddTableRelationResp_Validation = {
};


DO.AddTableRelationResp_Defaults = {
	res:null
};

DO.AddTableRelationResp_Types = {
	res:"TableColumnDto"
};


DO.ReplaceColumn = {
	col_name_intern:"col_name_intern",
	referred_col_name_intern:"referred_col_name_intern"
};

DO.ReplaceColumn_Validation = {
};


DO.ReplaceColumn_Defaults = {
	col_name_intern:"",
	referred_col_name_intern:""
};

DO.ReplaceColumn_Types = {
};


DO.UpdateTableColumnParams = {
	project_name:"project_name"
};

DO.UpdateTableColumnParams_Validation = {
	project_name: {
		required: true
	}
};


DO.UpdateTableColumnParams_Defaults = {
	project_name:""
};

DO.UpdateTableColumnParams_Types = {
};


DO.UpdateTableColumnResp = {
	res:"res",
	message:"message"
};

DO.UpdateTableColumnResp_Validation = {
};


DO.UpdateTableColumnResp_Defaults = {
	res:null,
	message:""
};

DO.UpdateTableColumnResp_Types = {
	res:"TableColumnDto"
};


DO.UpdateTableColumnsParams = {
	project_name:"project_name"
};

DO.UpdateTableColumnsParams_Validation = {
	project_name: {
		required: true
	}
};


DO.UpdateTableColumnsParams_Defaults = {
	project_name:""
};

DO.UpdateTableColumnsParams_Types = {
};


DO.UpdateTableColumnsReq = {
	table_columns:"table_columns",
	message:"message"
};

DO.UpdateTableColumnsReq_Validation = {
};


DO.UpdateTableColumnsReq_Defaults = {
	table_columns:[],
	message:""
};

DO.UpdateTableColumnsReq_Types = {
	table_columns:"TableColumnDto"
};


DO.UpdateTableColumnsResp = {
	res:"res",
	message:"message"
};

DO.UpdateTableColumnsResp_Validation = {
};


DO.UpdateTableColumnsResp_Defaults = {
	res:[],
	message:""
};

DO.UpdateTableColumnsResp_Types = {
	res:"TableColumnDto"
};


DO.DuplicateTableColumnToHubAndSatParams = {
	project_name:"project_name"
};

DO.DuplicateTableColumnToHubAndSatParams_Validation = {
	project_name: {
		required: true
	}
};


DO.DuplicateTableColumnToHubAndSatParams_Defaults = {
	project_name:""
};

DO.DuplicateTableColumnToHubAndSatParams_Types = {
};


DO.DuplicateTableColumnToHubAndSatReq = {
	entity_id:"entity_id",
	table_column_id:"table_column_id"
};

DO.DuplicateTableColumnToHubAndSatReq_Validation = {
	entity_id: {
		required: true,
		number: true
	},
	table_column_id: {
		required: true,
		number: true
	}
};


DO.DuplicateTableColumnToHubAndSatReq_Defaults = {
	entity_id:0,
	table_column_id:0
};

DO.DuplicateTableColumnToHubAndSatReq_Types = {
};


DO.DuplicateTableColumnToHubAndSatResp = {
	added_table_column_ids:"added_table_column_ids"
};

DO.DuplicateTableColumnToHubAndSatResp_Validation = {
	added_table_column_ids: {
		number: true
	}
};


DO.DuplicateTableColumnToHubAndSatResp_Defaults = {
	added_table_column_ids:[]
};

DO.DuplicateTableColumnToHubAndSatResp_Types = {
};


DO.CopyEntityParams = {
	project_name:"project_name"
};

DO.CopyEntityParams_Validation = {
	project_name: {
		required: true
	}
};


DO.CopyEntityParams_Defaults = {
	project_name:""
};

DO.CopyEntityParams_Types = {
};


DO.CopyEntityReq = {
	org_entity_id:"org_entity_id",
	copied_entity_name:"copied_entity_name",
	copied_entity_descriprion:"copied_entity_descriprion"
};

DO.CopyEntityReq_Validation = {
	org_entity_id: {
		required: true,
		number: true
	}
};


DO.CopyEntityReq_Defaults = {
	org_entity_id:0,
	copied_entity_name:"",
	copied_entity_descriprion:""
};

DO.CopyEntityReq_Types = {
};


DO.CopyEntityResp = {
	entity:"entity"
};

DO.CopyEntityResp_Validation = {
	entity: {
		required: true
	}
};


DO.CopyEntityResp_Defaults = {
	entity:{}
};

DO.CopyEntityResp_Types = {
	entity:"EntityDto"
};


DO.DeleteTableColumnsParams = {
	project_name:"project_name"
};

DO.DeleteTableColumnsParams_Validation = {
	project_name: {
		required: true
	}
};


DO.DeleteTableColumnsParams_Defaults = {
	project_name:""
};

DO.DeleteTableColumnsParams_Types = {
};


DO.DeleteTableColumnsReq = {
	table_column_ids:"table_column_ids",
	restore_relation_attributes:"restore_relation_attributes"
};

DO.DeleteTableColumnsReq_Validation = {
	table_column_ids: {
		number: true
	}
};


DO.DeleteTableColumnsReq_Defaults = {
	table_column_ids:[],
	restore_relation_attributes:false
};

DO.DeleteTableColumnsReq_Types = {
};


DO.DeleteTableColumnsResp = {
	res:"res"
};

DO.DeleteTableColumnsResp_Validation = {
};


DO.DeleteTableColumnsResp_Defaults = {
	res:[]
};

DO.DeleteTableColumnsResp_Types = {
	res:"InvalidRoleForDelete"
};


DO.InvalidRoleForDelete = {
	role_id:"role_id",
	msg:"msg"
};

DO.InvalidRoleForDelete_Validation = {
	role_id: {
		number: true
	}
};


DO.InvalidRoleForDelete_Defaults = {
	role_id:0,
	msg:""
};

DO.InvalidRoleForDelete_Types = {
};


DO.AddDomainAttributeParams = {
	project_name:"project_name"
};

DO.AddDomainAttributeParams_Validation = {
	project_name: {
		required: true
	}
};


DO.AddDomainAttributeParams_Defaults = {
	project_name:""
};

DO.AddDomainAttributeParams_Types = {
};


DO.AddDomainAttributeResp = {
	res:"res"
};

DO.AddDomainAttributeResp_Validation = {
	res: {
		required: true
	}
};


DO.AddDomainAttributeResp_Defaults = {
	res:{}
};

DO.AddDomainAttributeResp_Types = {
	res:"DomainAttributeDto"
};


DO.UpdateDomainAttributeParams = {
	project_name:"project_name"
};

DO.UpdateDomainAttributeParams_Validation = {
	project_name: {
		required: true
	}
};


DO.UpdateDomainAttributeParams_Defaults = {
	project_name:""
};

DO.UpdateDomainAttributeParams_Types = {
};


DO.UpdateDomainAttributeResp = {
	res:"res",
	message:"message"
};

DO.UpdateDomainAttributeResp_Validation = {
	res: {
		required: true
	}
};


DO.UpdateDomainAttributeResp_Defaults = {
	res:{},
	message:""
};

DO.UpdateDomainAttributeResp_Types = {
	res:"DomainAttributeDto"
};


DO.GetModelAttributesReferencesParams = {
	project_name:"project_name",
	attribute_id:"attribute_id"
};

DO.GetModelAttributesReferencesParams_Validation = {
	project_name: {
		required: true
	},
	attribute_id: {
		required: true,
		number: true
	}
};


DO.GetModelAttributesReferencesParams_Defaults = {
	project_name:"",
	attribute_id:0
};

DO.GetModelAttributesReferencesParams_Types = {
};


DO.GetModelAttributesReferencesResp = {
	entities:"entities"
};

DO.GetModelAttributesReferencesResp_Validation = {
};


DO.GetModelAttributesReferencesResp_Defaults = {
	entities:[]
};

DO.GetModelAttributesReferencesResp_Types = {
	entities:"EntityDto"
};


DO.AddDateTimeModelParams = {
	project_name:"project_name",
	message_guid:"message_guid"
};

DO.AddDateTimeModelParams_Validation = {
	project_name: {
		required: true
	}
};


DO.AddDateTimeModelParams_Defaults = {
	project_name:"",
	message_guid:""
};

DO.AddDateTimeModelParams_Types = {
};


DO.AddDateTimeModelResp = {
	project_name:"project_name"
};

DO.AddDateTimeModelResp_Validation = {
	project_name: {
		required: true
	}
};


DO.AddDateTimeModelResp_Defaults = {
	project_name:""
};

DO.AddDateTimeModelResp_Types = {
};


DO.GetDWHLineageForEntityParams = {
	project_name:"project_name",
	entity_id:"entity_id"
};

DO.GetDWHLineageForEntityParams_Validation = {
	project_name: {
		required: true
	},
	entity_id: {
		required: true,
		number: true
	}
};


DO.GetDWHLineageForEntityParams_Defaults = {
	project_name:"",
	entity_id:0
};

DO.GetDWHLineageForEntityParams_Types = {
};


DO.GetDWHLineageForEntityResp = {
	entity_lineage_info:"entity_lineage_info"
};

DO.GetDWHLineageForEntityResp_Validation = {
	entity_lineage_info: {
		required: true
	}
};


DO.GetDWHLineageForEntityResp_Defaults = {
	entity_lineage_info:{}
};

DO.GetDWHLineageForEntityResp_Types = {
	entity_lineage_info:"DWHLineageInfo"
};


DO.GetDWHLineageForAttributeParams = {
	project_name:"project_name",
	role_id:"role_id"
};

DO.GetDWHLineageForAttributeParams_Validation = {
	project_name: {
		required: true
	},
	role_id: {
		required: true,
		number: true
	}
};


DO.GetDWHLineageForAttributeParams_Defaults = {
	project_name:"",
	role_id:0
};

DO.GetDWHLineageForAttributeParams_Types = {
};


DO.GetDWHLineageForAttributeResp = {
	attribute_lineage_info:"attribute_lineage_info"
};

DO.GetDWHLineageForAttributeResp_Validation = {
	attribute_lineage_info: {
		required: true
	}
};


DO.GetDWHLineageForAttributeResp_Defaults = {
	attribute_lineage_info:{}
};

DO.GetDWHLineageForAttributeResp_Types = {
	attribute_lineage_info:"DWHLineageInfo"
};


DO.GetDMLineageForEntityParams = {
	project_name:"project_name",
	fact_dim_id:"fact_dim_id"
};

DO.GetDMLineageForEntityParams_Validation = {
	project_name: {
		required: true
	},
	fact_dim_id: {
		required: true,
		number: true
	}
};


DO.GetDMLineageForEntityParams_Defaults = {
	project_name:"",
	fact_dim_id:0
};

DO.GetDMLineageForEntityParams_Types = {
};


DO.GetDMLineageForEntityResp = {
	data_mart_lineage_info:"data_mart_lineage_info"
};

DO.GetDMLineageForEntityResp_Validation = {
	data_mart_lineage_info: {
		required: true
	}
};


DO.GetDMLineageForEntityResp_Defaults = {
	data_mart_lineage_info:{}
};

DO.GetDMLineageForEntityResp_Types = {
	data_mart_lineage_info:"DataMartLineageInfo"
};


DO.GetDMLineageForAttributeParams = {
	project_name:"project_name"
};

DO.GetDMLineageForAttributeParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetDMLineageForAttributeParams_Defaults = {
	project_name:""
};

DO.GetDMLineageForAttributeParams_Types = {
};


DO.GetDMLineageForAttributeReq = {
	column:"column"
};

DO.GetDMLineageForAttributeReq_Validation = {
	column: {
		required: true
	}
};


DO.GetDMLineageForAttributeReq_Defaults = {
	column:{}
};

DO.GetDMLineageForAttributeReq_Types = {
	column:"FactDimColumn"
};


DO.GetDMLineageForAttributeResp = {
	data_mart_lineage_info:"data_mart_lineage_info"
};

DO.GetDMLineageForAttributeResp_Validation = {
	data_mart_lineage_info: {
		required: true
	}
};


DO.GetDMLineageForAttributeResp_Defaults = {
	data_mart_lineage_info:{}
};

DO.GetDMLineageForAttributeResp_Types = {
	data_mart_lineage_info:"DataMartLineageInfo"
};


DO.GetPhysicalDMTablesParams = {
	project_name:"project_name"
};

DO.GetPhysicalDMTablesParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetPhysicalDMTablesParams_Defaults = {
	project_name:""
};

DO.GetPhysicalDMTablesParams_Types = {
};


DO.GetPhysicalDMTablesRsp = {
	physical_dm_table:"physical_dm_table"
};

DO.GetPhysicalDMTablesRsp_Validation = {
};


DO.GetPhysicalDMTablesRsp_Defaults = {
	physical_dm_table:[]
};

DO.GetPhysicalDMTablesRsp_Types = {
	physical_dm_table:"PhysicalDMTable"
};


DO.PhysicalDMTable = {
	name:"name",
	schema:"schema",
	dm_id:"dm_id",
	fact_dim_id:"fact_dim_id"
};

DO.PhysicalDMTable_Validation = {
	dm_id: {
		number: true
	},
	fact_dim_id: {
		number: true
	}
};


DO.PhysicalDMTable_Defaults = {
	name:"",
	schema:"",
	dm_id:0,
	fact_dim_id:0
};

DO.PhysicalDMTable_Types = {
};


DO.GetSelectPhysicalDMTableStmtParams = {
	project_name:"project_name",
	dm_id:"dm_id",
	fact_dim_id:"fact_dim_id",
	ignore_obsolete_indication:"ignore_obsolete_indication",
	ignore_fd_td_indication:"ignore_fd_td_indication",
	ignore_runno_ins_upd_indication:"ignore_runno_ins_upd_indication"
};

DO.GetSelectPhysicalDMTableStmtParams_Validation = {
	project_name: {
		required: true
	},
	dm_id: {
		number: true
	},
	fact_dim_id: {
		number: true
	}
};


DO.GetSelectPhysicalDMTableStmtParams_Defaults = {
	project_name:"",
	dm_id:0,
	fact_dim_id:0,
	ignore_obsolete_indication:true,
	ignore_fd_td_indication:true,
	ignore_runno_ins_upd_indication:true
};

DO.GetSelectPhysicalDMTableStmtParams_Types = {
};


DO.GetSelectPhysicalDMTableStmtRsp = {
	select_statement:"select_statement"
};

DO.GetSelectPhysicalDMTableStmtRsp_Validation = {
};


DO.GetSelectPhysicalDMTableStmtRsp_Defaults = {
	select_statement:""
};

DO.GetSelectPhysicalDMTableStmtRsp_Types = {
};


DO.GetPhysicalEntitiesParams = {
	project_name:"project_name"
};

DO.GetPhysicalEntitiesParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetPhysicalEntitiesParams_Defaults = {
	project_name:""
};

DO.GetPhysicalEntitiesParams_Types = {
};


DO.GetPhysicalEntitiesRsp = {
	physical_entities:"physical_entities"
};

DO.GetPhysicalEntitiesRsp_Validation = {
};


DO.GetPhysicalEntitiesRsp_Defaults = {
	physical_entities:[]
};

DO.GetPhysicalEntitiesRsp_Types = {
	physical_entities:"PhysicalEntity"
};


DO.GetPhysicalEntityMetaDataParams = {
	project_name:"project_name",
	entity_id:"entity_id",
	block_number:"block_number"
};

DO.GetPhysicalEntityMetaDataParams_Validation = {
	entity_id: {
		number: true
	},
	block_number: {
		number: true
	}
};


DO.GetPhysicalEntityMetaDataParams_Defaults = {
	project_name:"",
	entity_id:0,
	block_number:0
};

DO.GetPhysicalEntityMetaDataParams_Types = {
};


DO.GetPhysicalEntityMetaDataRsp = {
	table_metadata:"table_metadata",
	physical_properties:"physical_properties"
};

DO.GetPhysicalEntityMetaDataRsp_Validation = {
};


DO.GetPhysicalEntityMetaDataRsp_Defaults = {
	table_metadata:null,
	physical_properties:null
};

DO.GetPhysicalEntityMetaDataRsp_Types = {
	table_metadata:"TableMetaData",
	physical_properties:"PhysicalPropertiesDto"
};


DO.GetDmPhysicalEntityMetaDataParams = {
	project_name:"project_name",
	dm_id:"dm_id"
};

DO.GetDmPhysicalEntityMetaDataParams_Validation = {
	dm_id: {
		number: true
	}
};


DO.GetDmPhysicalEntityMetaDataParams_Defaults = {
	project_name:"",
	dm_id:0
};

DO.GetDmPhysicalEntityMetaDataParams_Types = {
};


DO.GetDmPhysicalEntityMetaDataReq = {
	fact_dim:"fact_dim"
};

DO.GetDmPhysicalEntityMetaDataReq_Validation = {
};


DO.GetDmPhysicalEntityMetaDataReq_Defaults = {
	fact_dim:null
};

DO.GetDmPhysicalEntityMetaDataReq_Types = {
	fact_dim:"FactDimInfo"
};


DO.GetDmPhysicalEntityMetaDataRsp = {
	table_metadata:"table_metadata"
};

DO.GetDmPhysicalEntityMetaDataRsp_Validation = {
};


DO.GetDmPhysicalEntityMetaDataRsp_Defaults = {
	table_metadata:null
};

DO.GetDmPhysicalEntityMetaDataRsp_Types = {
	table_metadata:"TableMetaData"
};


DO.GetDmPhysicalPropertiesParams = {
	project_name:"project_name"
};

DO.GetDmPhysicalPropertiesParams_Validation = {
};


DO.GetDmPhysicalPropertiesParams_Defaults = {
	project_name:""
};

DO.GetDmPhysicalPropertiesParams_Types = {
};


DO.GetDmPhysicalPropertiesReq = {
	fact_dim:"fact_dim"
};

DO.GetDmPhysicalPropertiesReq_Validation = {
};


DO.GetDmPhysicalPropertiesReq_Defaults = {
	fact_dim:null
};

DO.GetDmPhysicalPropertiesReq_Types = {
	fact_dim:"FactDimInfo"
};


DO.GetDmPhysicalPropertiesRsp = {
	physical_properties:"physical_properties"
};

DO.GetDmPhysicalPropertiesRsp_Validation = {
};


DO.GetDmPhysicalPropertiesRsp_Defaults = {
	physical_properties:null
};

DO.GetDmPhysicalPropertiesRsp_Types = {
	physical_properties:"PhysicalPropertiesDto"
};


DO.GetPhysicalEntitySelectStatementParams = {
	project_name:"project_name",
	entity_id:"entity_id",
	block_number:"block_number",
	filter:"filter"
};

DO.GetPhysicalEntitySelectStatementParams_Validation = {
	entity_id: {
		number: true
	},
	block_number: {
		number: true
	}
};


DO.GetPhysicalEntitySelectStatementParams_Defaults = {
	project_name:"",
	entity_id:0,
	block_number:0,
	filter:DO.PhysicalEntitySelectFilters.NONE
};

DO.GetPhysicalEntitySelectStatementParams_Types = {
	filter:"PhysicalEntitySelectFilters"
};


DO.GetPhysicalEntitySelectStatementRsp = {
	select_statement:"select_statement"
};

DO.GetPhysicalEntitySelectStatementRsp_Validation = {
};


DO.GetPhysicalEntitySelectStatementRsp_Defaults = {
	select_statement:""
};

DO.GetPhysicalEntitySelectStatementRsp_Types = {
};


DO.GetDLViewsEntitySelectStatementParams = {
	project_name:"project_name",
	entity_id:"entity_id"
};

DO.GetDLViewsEntitySelectStatementParams_Validation = {
	entity_id: {
		number: true
	}
};


DO.GetDLViewsEntitySelectStatementParams_Defaults = {
	project_name:"",
	entity_id:0
};

DO.GetDLViewsEntitySelectStatementParams_Types = {
};


DO.KeyValueDLViewSelectStatement = {
	key:"key",
	value:"value"
};

DO.KeyValueDLViewSelectStatement_Validation = {
};


DO.KeyValueDLViewSelectStatement_Defaults = {
	key:"",
	value:""
};

DO.KeyValueDLViewSelectStatement_Types = {
};


DO.GetDLViewsEntitySelectStatementRsp = {
	select_statements:"select_statements"
};

DO.GetDLViewsEntitySelectStatementRsp_Validation = {
};


DO.GetDLViewsEntitySelectStatementRsp_Defaults = {
	select_statements:{}
};

DO.GetDLViewsEntitySelectStatementRsp_Types = {
	select_statements:"KeyValueDLViewSelectStatement"
};


DO.GenerateLandingScriptParams = {
	project_name:"project_name"
};

DO.GenerateLandingScriptParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GenerateLandingScriptParams_Defaults = {
	project_name:""
};

DO.GenerateLandingScriptParams_Types = {
};


DO.GetEntitiesParams = {
	project_name:"project_name",
	full_entity:"full_entity"
};

DO.GetEntitiesParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetEntitiesParams_Defaults = {
	project_name:"",
	full_entity:false
};

DO.GetEntitiesParams_Types = {
};


DO.GetEntitiesReq = {
	filter_by_ids:"filter_by_ids"
};

DO.GetEntitiesReq_Validation = {
	filter_by_ids: {
		number: true
	}
};


DO.GetEntitiesReq_Defaults = {
	filter_by_ids:[]
};

DO.GetEntitiesReq_Types = {
};


DO.GetEntitiesRsp = {
	entities:"entities"
};

DO.GetEntitiesRsp_Validation = {
};


DO.GetEntitiesRsp_Defaults = {
	entities:[]
};

DO.GetEntitiesRsp_Types = {
	entities:"EntityFull"
};


DO.SetBackdatingOptionsParams = {
	project_name:"project_name"
};

DO.SetBackdatingOptionsParams_Validation = {
	project_name: {
		required: true
	}
};


DO.SetBackdatingOptionsParams_Defaults = {
	project_name:""
};

DO.SetBackdatingOptionsParams_Types = {
};


DO.ImportEntitiesFromProjectParams = {
	project_name:"project_name"
};

DO.ImportEntitiesFromProjectParams_Validation = {
	project_name: {
		required: true
	}
};


DO.ImportEntitiesFromProjectParams_Defaults = {
	project_name:""
};

DO.ImportEntitiesFromProjectParams_Types = {
};


DO.ImportEntitiesFromProjectReq = {
	import_from_project:"import_from_project",
	entities:"entities",
	mapping_list:"mapping_list",
	replace_entities:"replace_entities"
};

DO.ImportEntitiesFromProjectReq_Validation = {
	import_from_project: {
		required: true
	},
	entities: {
		number: true
	},
	mapping_list: {
		number: true
	}
};


DO.ImportEntitiesFromProjectReq_Defaults = {
	import_from_project:"",
	entities:[],
	mapping_list:[],
	replace_entities:true
};

DO.ImportEntitiesFromProjectReq_Types = {
};


DO.GetEntityMappingsParams = {
	project_name:"project_name"
};

DO.GetEntityMappingsParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetEntityMappingsParams_Defaults = {
	project_name:""
};

DO.GetEntityMappingsParams_Types = {
};


DO.GetEntityMappingsReq = {
	filter_ids:"filter_ids"
};

DO.GetEntityMappingsReq_Validation = {
	filter_ids: {
		number: true
	}
};


DO.GetEntityMappingsReq_Defaults = {
	filter_ids:[]
};

DO.GetEntityMappingsReq_Types = {
};


DO.GetEntityMappingsRsp = {
	entity_mappings:"entity_mappings"
};

DO.GetEntityMappingsRsp_Validation = {
};


DO.GetEntityMappingsRsp_Defaults = {
	entity_mappings:[]
};

DO.GetEntityMappingsRsp_Types = {
	entity_mappings:"EntityMappingInfo"
};


DO.EntityMappingInfo = {
	entity_id:"entity_id",
	entity_name:"entity_name",
	mappings_info_list:"mappings_info_list"
};

DO.EntityMappingInfo_Validation = {
	entity_id: {
		number: true
	}
};


DO.EntityMappingInfo_Defaults = {
	entity_id:0,
	entity_name:"",
	mappings_info_list:[]
};

DO.EntityMappingInfo_Types = {
	mappings_info_list:"MappingInfo"
};


DO.MappingInfo = {
	mapping_id:"mapping_id",
	mapping_name:"mapping_name"
};

DO.MappingInfo_Validation = {
	mapping_id: {
		number: true
	}
};


DO.MappingInfo_Defaults = {
	mapping_id:0,
	mapping_name:""
};

DO.MappingInfo_Types = {
};


DO.GetModelTreeNodesParams = {
	project_name:"project_name",
	include_attributes:"include_attributes"
};

DO.GetModelTreeNodesParams_Validation = {
	project_name: {
		required: true
	},
	include_attributes: {
		required: true
	}
};


DO.GetModelTreeNodesParams_Defaults = {
	project_name:"",
	include_attributes:true
};

DO.GetModelTreeNodesParams_Types = {
};


DO.GetModelTreeNodesRsp = {
	roots:"roots"
};

DO.GetModelTreeNodesRsp_Validation = {
};


DO.GetModelTreeNodesRsp_Defaults = {
	roots:[]
};

DO.GetModelTreeNodesRsp_Types = {
	roots:"TreeNode"
};


DO.KeyValueDomainAttribute = {
	key:"key",
	value:"value"
};

DO.KeyValueDomainAttribute_Validation = {
	key: {
		number: true
	}
};


DO.KeyValueDomainAttribute_Defaults = {
	key:0,
	value:null
};

DO.KeyValueDomainAttribute_Types = {
	value:"DomainAttributeDto"
};


DO.GetDomainAttributesParams = {
	project_name:"project_name"
};

DO.GetDomainAttributesParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetDomainAttributesParams_Defaults = {
	project_name:""
};

DO.GetDomainAttributesParams_Types = {
};


DO.GetDomainAttributesReq = {
	ids_list:"ids_list"
};

DO.GetDomainAttributesReq_Validation = {
	ids_list: {
		number: true
	}
};


DO.GetDomainAttributesReq_Defaults = {
	ids_list:[]
};

DO.GetDomainAttributesReq_Types = {
};


DO.GetDomainAttributesRsp = {
	attributes:"attributes"
};

DO.GetDomainAttributesRsp_Validation = {
};


DO.GetDomainAttributesRsp_Defaults = {
	attributes:{}
};

DO.GetDomainAttributesRsp_Types = {
	attributes:"KeyValueDomainAttribute"
};


DO.GetTableColumnsParams = {
	project_name:"project_name",
	entity_id:"entity_id"
};

DO.GetTableColumnsParams_Validation = {
	project_name: {
		required: true
	},
	entity_id: {
		required: true,
		number: true
	}
};


DO.GetTableColumnsParams_Defaults = {
	project_name:"",
	entity_id:0
};

DO.GetTableColumnsParams_Types = {
};


DO.GetTableColumnsRsp = {
	table_columns:"table_columns"
};

DO.GetTableColumnsRsp_Validation = {
};


DO.GetTableColumnsRsp_Defaults = {
	table_columns:[]
};

DO.GetTableColumnsRsp_Types = {
	table_columns:"TableColumnDto"
};


DO.GetErwinTablesParams = {
	project_name:"project_name"
};

DO.GetErwinTablesParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetErwinTablesParams_Defaults = {
	project_name:""
};

DO.GetErwinTablesParams_Types = {
};


DO.GetErwinTablesReq = {
	file_path:"file_path",
	db_id:"db_id",
	erwin_model_type:"erwin_model_type"
};

DO.GetErwinTablesReq_Validation = {
	file_path: {
		required: true
	}
};


DO.GetErwinTablesReq_Defaults = {
	file_path:"",
	db_id:"",
	erwin_model_type:DO.ErwinModelType.LOGICAL
};

DO.GetErwinTablesReq_Types = {
	erwin_model_type:"ErwinModelType"
};


DO.GetErwinTablesRsp = {
	tables:"tables",
	message:"message"
};

DO.GetErwinTablesRsp_Validation = {
};


DO.GetErwinTablesRsp_Defaults = {
	tables:[],
	message:""
};

DO.GetErwinTablesRsp_Types = {
	tables:"DiscoverTablePattern"
};


DO.ImportFromErwinParams = {
	project_name:"project_name",
	message_guid:"message_guid"
};

DO.ImportFromErwinParams_Validation = {
	project_name: {
		required: true
	}
};


DO.ImportFromErwinParams_Defaults = {
	project_name:"",
	message_guid:""
};

DO.ImportFromErwinParams_Types = {
};


DO.ImportFromErwinReq = {
	file_path:"file_path",
	tables:"tables",
	db_id:"db_id",
	erwin_model_type:"erwin_model_type"
};

DO.ImportFromErwinReq_Validation = {
	file_path: {
		required: true
	}
};


DO.ImportFromErwinReq_Defaults = {
	file_path:"",
	tables:[],
	db_id:"",
	erwin_model_type:DO.ErwinModelType.LOGICAL
};

DO.ImportFromErwinReq_Types = {
	tables:"DiscoverTablePattern",
	erwin_model_type:"ErwinModelType"
};


DO.CheckModelParams = {
	project_name:"project_name",
	message_guid:"message_guid"
};

DO.CheckModelParams_Validation = {
	project_name: {
		required: true
	}
};


DO.CheckModelParams_Defaults = {
	project_name:"",
	message_guid:""
};

DO.CheckModelParams_Types = {
};


DO.GetCheckModelRsp = {
	results:"results"
};

DO.GetCheckModelRsp_Validation = {
};


DO.GetCheckModelRsp_Defaults = {
	results:[]
};

DO.GetCheckModelRsp_Types = {
	results:"CheckProjectResult"
};


DO.CheckETLParams = {
	project_name:"project_name",
	etl_id:"etl_id",
	skip_external_checks:"skip_external_checks"
};

DO.CheckETLParams_Validation = {
	project_name: {
		required: true
	},
	etl_id: {
		number: true
	}
};


DO.CheckETLParams_Defaults = {
	project_name:"",
	etl_id:0,
	skip_external_checks:false
};

DO.CheckETLParams_Types = {
};


DO.GetCheckETLRsp = {
	results:"results"
};

DO.GetCheckETLRsp_Validation = {
};


DO.GetCheckETLRsp_Defaults = {
	results:[]
};

DO.GetCheckETLRsp_Types = {
	results:"CheckProjectResult"
};


DO.GetMappingsParams = {
	project_name:"project_name"
};

DO.GetMappingsParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetMappingsParams_Defaults = {
	project_name:""
};

DO.GetMappingsParams_Types = {
};


DO.GetMappingsReq = {
	filter_ids:"filter_ids"
};

DO.GetMappingsReq_Validation = {
	filter_ids: {
		number: true
	}
};


DO.GetMappingsReq_Defaults = {
	filter_ids:[]
};

DO.GetMappingsReq_Types = {
};


DO.GetMappingsRsp = {
	mappings:"mappings"
};

DO.GetMappingsRsp_Validation = {
};


DO.GetMappingsRsp_Defaults = {
	mappings:[]
};

DO.GetMappingsRsp_Types = {
	mappings:"MappingDto"
};


DO.EntityMapping = {
	entity_id:"entity_id",
	map_to_entity_name:"map_to_entity_name",
	pi_action:"pi_action",
	mappings_list:"mappings_list"
};

DO.EntityMapping_Validation = {
	entity_id: {
		number: true
	}
};


DO.EntityMapping_Defaults = {
	entity_id:0,
	map_to_entity_name:"",
	pi_action:null,
	mappings_list:[]
};

DO.EntityMapping_Types = {
	pi_action:"EtlItemAction",
	mappings_list:"MappingDto"
};


DO.EtlItemAction = {
	handle_duplicates:"handle_duplicates",
	ext_load:"ext_load",
	entity_id:"entity_id"
};

DO.EtlItemAction_Validation = {
	handle_duplicates: {
		required: true
	},
	ext_load: {
		required: true
	},
	entity_id: {
		required: true,
		number: true
	}
};


DO.EtlItemAction_Defaults = {
	handle_duplicates:false,
	ext_load:false,
	entity_id:0
};

DO.EtlItemAction_Types = {
};


DO.RuleBase = {
	$type:"$type",
	name:"name",
	enabled:"enabled",
	description:"description",
	order:"order",
	is_internal:"is_internal",
	rule:"rule"
};

DO.RuleBase_Validation = {
	name: {
		required: true
	},
	enabled: {
		required: true
	},
	order: {
		number: true
	}
};


DO.RuleBase_Defaults = {
	$type:"RuleBase",
	name:"",
	enabled:true,
	description:"",
	order:0,
	is_internal:false,
	rule:null
};

DO.RuleBase_Types = {
	rule:"Expression"
};


DO.DataQualityRule = {
	$type:"$type",
	name:"name",
	enabled:"enabled",
	description:"description",
	order:"order",
	is_internal:"is_internal",
	rule:"rule",
	action:"action",
	type:"type"
};

DO.DataQualityRule_Validation = {
	name: {
		required: true
	},
	enabled: {
		required: true
	},
	order: {
		number: true
	},
	action: {
		required: true
	}
};


DO.DataQualityRule_Defaults = {
	$type:"DataQualityRule",
	name:"",
	enabled:true,
	description:"",
	order:0,
	is_internal:false,
	rule:null,
	action:DO.RULE_ACTION.REJECT_AND_REPORT,
	type:DO.RULE_TYPE.EXPRESSION
};

DO.DataQualityRule_Types = {
	rule:"Expression",
	action:"RULE_ACTION",
	type:"RULE_TYPE"
};


DO.CleansingRule = {
	$type:"$type",
	name:"name",
	enabled:"enabled",
	description:"description",
	order:"order",
	is_internal:"is_internal",
	rule:"rule",
	attribute_name:"attribute_name",
	fix_expression:"fix_expression",
	action:"action"
};

DO.CleansingRule_Validation = {
	name: {
		required: true
	},
	enabled: {
		required: true
	},
	order: {
		number: true
	}
};


DO.CleansingRule_Defaults = {
	$type:"CleansingRule",
	name:"",
	enabled:true,
	description:"",
	order:0,
	is_internal:false,
	rule:null,
	attribute_name:"",
	fix_expression:null,
	action:DO.CLEANSING_RULE_ACTION.CLEANSE_SILENTLY
};

DO.CleansingRule_Types = {
	rule:"Expression",
	fix_expression:"Expression",
	action:"CLEANSING_RULE_ACTION"
};


DO.MappingDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	entity_id:"entity_id",
	is_active_mapping_pi:"is_active_mapping_pi",
	schema:"schema",
	database_id:"database_id",
	table_name:"table_name",
	mapping_type:"mapping_type",
	filter:"filter",
	is_aggregated:"is_aggregated",
	mapping_fields:"mapping_fields",
	mapping_query:"mapping_query",
	data_quality_rules:"data_quality_rules",
	cleansing_rules:"cleansing_rules",
	null_behaviour:"null_behaviour",
	refresh_realtime_view:"refresh_realtime_view"
};

DO.MappingDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	entity_id: {
		number: true
	},
	database_id: {
		number: true
	}
};


DO.MappingDto_Defaults = {
	$type:"MappingDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	entity_id:0,
	is_active_mapping_pi:false,
	schema:"",
	database_id:0,
	table_name:"",
	mapping_type:DO.MappingType.TABLE,
	filter:null,
	is_aggregated:false,
	mapping_fields:[],
	mapping_query:"",
	data_quality_rules:[],
	cleansing_rules:[],
	null_behaviour:DO.MappingNullBehaviour.USE_ETL_SETTING,
	refresh_realtime_view:false
};

DO.MappingDto_Types = {
	metadata:"DTObjectMetaData",
	mapping_type:"MappingType",
	filter:"Expression",
	mapping_fields:"MappingField",
	data_quality_rules:"DataQualityRule",
	cleansing_rules:"CleansingRule",
	null_behaviour:"MappingNullBehaviour"
};


DO.MappingDtoPP = {
	entity_id:"entity_id"
};

DO.MappingDtoPP_Validation = {
	entity_id: {
		number: true
	}
};


DO.MappingDtoPP_Defaults = {
	entity_id:0
};

DO.MappingDtoPP_Types = {
};


DO.LookupJoinField = {
	lookup_col_name:"lookup_col_name",
	expression:"expression"
};

DO.LookupJoinField_Validation = {
};


DO.LookupJoinField_Defaults = {
	lookup_col_name:"",
	expression:null
};

DO.LookupJoinField_Types = {
	expression:"Expression"
};


DO.LookupField = {
	lookup_table_database_id:"lookup_table_database_id",
	lookup_table_schema:"lookup_table_schema",
	lookup_table_name:"lookup_table_name",
	mapping_type:"mapping_type",
	lookup_query:"lookup_query",
	lookup_table_join_fields:"lookup_table_join_fields",
	lookup_expression:"lookup_expression",
	lookup_result_expression:"lookup_result_expression",
	expression_mode:"expression_mode"
};

DO.LookupField_Validation = {
	lookup_table_database_id: {
		number: true
	}
};


DO.LookupField_Defaults = {
	lookup_table_database_id:0,
	lookup_table_schema:"",
	lookup_table_name:"",
	mapping_type:DO.MappingType.TABLE,
	lookup_query:"",
	lookup_table_join_fields:[],
	lookup_expression:null,
	lookup_result_expression:null,
	expression_mode:DO.LookupExpressionMode.ADVANCED
};

DO.LookupField_Types = {
	mapping_type:"MappingType",
	lookup_table_join_fields:"LookupJoinField",
	lookup_expression:"Expression",
	lookup_result_expression:"Expression",
	expression_mode:"LookupExpressionMode"
};


DO.MappingField = {
	mapping_type:"mapping_type",
	source_col_name:"source_col_name",
	staging_col_name_int:"staging_col_name_int",
	expression:"expression",
	lookup:"lookup"
};

DO.MappingField_Validation = {
};


DO.MappingField_Defaults = {
	mapping_type:DO.FieldMappingType.DIRECT,
	source_col_name:"",
	staging_col_name_int:"",
	expression:null,
	lookup:null
};

DO.MappingField_Types = {
	mapping_type:"FieldMappingType",
	expression:"Expression",
	lookup:"LookupField"
};


DO.GetMappingFieldsParams = {
	project_name:"project_name",
	mapping_id:"mapping_id"
};

DO.GetMappingFieldsParams_Validation = {
	project_name: {
		required: true
	},
	mapping_id: {
		required: true,
		number: true
	}
};


DO.GetMappingFieldsParams_Defaults = {
	project_name:"",
	mapping_id:0
};

DO.GetMappingFieldsParams_Types = {
};


DO.GetMappingFieldsRsp = {
	fields_mapping:"fields_mapping",
	staging_columns:"staging_columns"
};

DO.GetMappingFieldsRsp_Validation = {
};


DO.GetMappingFieldsRsp_Defaults = {
	fields_mapping:[],
	staging_columns:[]
};

DO.GetMappingFieldsRsp_Types = {
	fields_mapping:"MappingField",
	staging_columns:"StagingColumn"
};


DO.StagingColumn = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	poe:"poe",
	pbe:"pbe",
	prefix:"prefix",
	is_primary:"is_primary",
	history_type:"history_type",
	block:"block",
	description:"description",
	ordinal:"ordinal",
	time_model_role_id:"time_model_role_id",
	expression:"expression",
	unknown_value:"unknown_value",
	attribute_name:"attribute_name",
	name_intern:"name_intern",
	entity_name:"entity_name",
	data_type:"data_type",
	size:"size",
	scale:"scale",
	is_staging_only:"is_staging_only",
	roleKey:"roleKey",
	roleKeyOrg:"roleKeyOrg"
};

DO.StagingColumn_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	poe: {
		number: true
	},
	pbe: {
		number: true
	},
	block: {
		number: true
	},
	ordinal: {
		number: true
	},
	time_model_role_id: {
		number: true
	},
	size: {
		number: true
	},
	scale: {
		number: true
	},
	roleKey: {
		number: true
	},
	roleKeyOrg: {
		number: true
	}
};


DO.StagingColumn_Defaults = {
	$type:"StagingColumn",
	metadata:null,
	name:"",
	version:0,
	id:0,
	poe:0,
	pbe:0,
	prefix:"",
	is_primary:false,
	history_type:DO.HistoryType.N,
	block:0,
	description:"",
	ordinal:0,
	time_model_role_id:0,
	expression:null,
	unknown_value:"",
	attribute_name:"",
	name_intern:"",
	entity_name:"",
	data_type:DO.ACDataType.NotSupported,
	size:0,
	scale:0,
	is_staging_only:false,
	roleKey:0,
	roleKeyOrg:0
};

DO.StagingColumn_Types = {
	metadata:"DTObjectMetaData",
	history_type:"HistoryType",
	expression:"Expression",
	data_type:"ACDataType"
};


DO.GetStagingColumnsParams = {
	project_name:"project_name",
	entity_id:"entity_id"
};

DO.GetStagingColumnsParams_Validation = {
	project_name: {
		required: true
	},
	entity_id: {
		required: true,
		number: true
	}
};


DO.GetStagingColumnsParams_Defaults = {
	project_name:"",
	entity_id:0
};

DO.GetStagingColumnsParams_Types = {
};


DO.GetStagingColumnsRsp = {
	staging_columns:"staging_columns"
};

DO.GetStagingColumnsRsp_Validation = {
};


DO.GetStagingColumnsRsp_Defaults = {
	staging_columns:[]
};

DO.GetStagingColumnsRsp_Types = {
	staging_columns:"StagingColumn"
};


DO.AddMappingParams = {
	project_name:"project_name"
};

DO.AddMappingParams_Validation = {
	project_name: {
		required: true
	}
};


DO.AddMappingParams_Defaults = {
	project_name:""
};

DO.AddMappingParams_Types = {
};


DO.AddMappingReq = {
	mapping_name:"mapping_name",
	entity_id:"entity_id",
	table_name:"table_name",
	environment_id:"environment_id",
	mapping_type:"mapping_type"
};

DO.AddMappingReq_Validation = {
	mapping_name: {
		required: true
	},
	entity_id: {
		required: true,
		number: true
	},
	table_name: {
		required: true
	},
	environment_id: {
		required: true,
		number: true
	},
	mapping_type: {
		required: true
	}
};


DO.AddMappingReq_Defaults = {
	mapping_name:"",
	entity_id:0,
	table_name:"",
	environment_id:-1,
	mapping_type:DO.MappingType.TABLE
};

DO.AddMappingReq_Types = {
	mapping_type:"MappingType"
};


DO.AddMappingResp = {
	mapping_id:"mapping_id"
};

DO.AddMappingResp_Validation = {
	mapping_id: {
		required: true,
		number: true
	}
};


DO.AddMappingResp_Defaults = {
	mapping_id:0
};

DO.AddMappingResp_Types = {
};


DO.DeleteMappingParams = {
	project_name:"project_name",
	mapping_key:"mapping_key"
};

DO.DeleteMappingParams_Validation = {
	project_name: {
		required: true
	},
	mapping_key: {
		required: true,
		number: true
	}
};


DO.DeleteMappingParams_Defaults = {
	project_name:"",
	mapping_key:0
};

DO.DeleteMappingParams_Types = {
};


DO.DeleteMappingResp = {
};

DO.DeleteMappingResp_Validation = {
};


DO.DeleteMappingResp_Defaults = {
};

DO.DeleteMappingResp_Types = {
};


DO.UpdateMappingParams = {
	project_name:"project_name"
};

DO.UpdateMappingParams_Validation = {
	project_name: {
		required: true
	}
};


DO.UpdateMappingParams_Defaults = {
	project_name:""
};

DO.UpdateMappingParams_Types = {
};


DO.UpdateMappingReq = {
	mapping_info:"mapping_info"
};

DO.UpdateMappingReq_Validation = {
};


DO.UpdateMappingReq_Defaults = {
	mapping_info:null
};

DO.UpdateMappingReq_Types = {
	mapping_info:"MappingDto"
};


DO.UpdateMappingResp = {
	res:"res",
	message:"message"
};

DO.UpdateMappingResp_Validation = {
};


DO.UpdateMappingResp_Defaults = {
	res:null,
	message:""
};

DO.UpdateMappingResp_Types = {
	res:"MappingDto"
};


DO.DataMartInfoDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	description:"description",
	data:"data",
	active_mappings:"active_mappings",
	entity_action:"entity_action",
	etl_type:"etl_type",
	active_custom_etls:"active_custom_etls",
	task_Stage:"task_Stage",
	view_schema:"view_schema",
	table_prefix:"table_prefix",
	view_prefix:"view_prefix",
	tables_in_database:"tables_in_database",
	tables_in_schema:"tables_in_schema",
	defaults:"defaults"
};

DO.DataMartInfoDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	active_mappings: {
		number: true
	},
	active_custom_etls: {
		number: true
	}
};


DO.DataMartInfoDto_Defaults = {
	$type:"DataMartInfoDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	description:"",
	data:null,
	active_mappings:[],
	entity_action:[],
	etl_type:DO.ETLType.DataWarehouse,
	active_custom_etls:[],
	task_Stage:DO.ETLType.DataWarehouse,
	view_schema:"",
	table_prefix:"",
	view_prefix:"",
	tables_in_database:"",
	tables_in_schema:"",
	defaults:null
};

DO.DataMartInfoDto_Types = {
	metadata:"DTObjectMetaData",
	data:"PIData",
	entity_action:"EtlItemAction",
	etl_type:"ETLType",
	task_Stage:"ETLType",
	defaults:"DefaultDatamartConnection"
};


DO.DefaultDatamartConnection = {
	database:"database",
	schema:"schema",
	view_schema:"view_schema"
};

DO.DefaultDatamartConnection_Validation = {
};


DO.DefaultDatamartConnection_Defaults = {
	database:true,
	schema:true,
	view_schema:true
};

DO.DefaultDatamartConnection_Types = {
};


DO.FactDimColumn = {
	fact_dim_key:"fact_dim_key",
	path:"path",
	attribute_name:"attribute_name",
	data_type:"data_type",
	size:"size",
	precision:"precision",
	scale:"scale",
	expression:"expression",
	aggregate_function:"aggregate_function",
	table_path:"table_path",
	description:"description",
	is_pk:"is_pk",
	is_internal_column:"is_internal_column",
	orig_entity_id:"orig_entity_id",
	is_fact_dim_col:"is_fact_dim_col"
};

DO.FactDimColumn_Validation = {
	fact_dim_key: {
		required: true,
		number: true
	},
	size: {
		number: true
	},
	precision: {
		number: true
	},
	scale: {
		number: true
	},
	orig_entity_id: {
		number: true
	}
};


DO.FactDimColumn_Defaults = {
	fact_dim_key:0,
	path:"",
	attribute_name:"",
	data_type:DO.ACDataType.NotSupported,
	size:-1,
	precision:-1,
	scale:-1,
	expression:null,
	aggregate_function:DO.AggregatedFunction.GROUPBY,
	table_path:"",
	description:"",
	is_pk:false,
	is_internal_column:false,
	orig_entity_id:0,
	is_fact_dim_col:false
};

DO.FactDimColumn_Types = {
	data_type:"ACDataType",
	expression:"Expression",
	aggregate_function:"AggregatedFunction"
};


DO.GenerateDMAEtlsParams = {
	project_name:"project_name",
	message_guid:"message_guid",
	name:"name"
};

DO.GenerateDMAEtlsParams_Validation = {
	project_name: {
		required: true
	},
	name: {
		required: true
	}
};


DO.GenerateDMAEtlsParams_Defaults = {
	project_name:"",
	message_guid:"",
	name:""
};

DO.GenerateDMAEtlsParams_Types = {
};


DO.PrepareAllDataMartsParams = {
	project_name:"project_name",
	message_guid:"message_guid"
};

DO.PrepareAllDataMartsParams_Validation = {
	project_name: {
		required: true
	}
};


DO.PrepareAllDataMartsParams_Defaults = {
	project_name:"",
	message_guid:""
};

DO.PrepareAllDataMartsParams_Types = {
};


DO.PrepareAllDataMartsReq = {
	prepare_dm:"prepare_dm"
};

DO.PrepareAllDataMartsReq_Validation = {
};


DO.PrepareAllDataMartsReq_Defaults = {
	prepare_dm:[]
};

DO.PrepareAllDataMartsReq_Types = {
	prepare_dm:"PrepareDM"
};


DO.PrepareDM = {
	dm_id:"dm_id",
	drop_and_create:"drop_and_create",
	generate_etl:"generate_etl",
	dwh_full_load:"dwh_full_load"
};

DO.PrepareDM_Validation = {
	dm_id: {
		required: true,
		number: true
	}
};


DO.PrepareDM_Defaults = {
	dm_id:0,
	drop_and_create:false,
	generate_etl:true,
	dwh_full_load:false
};

DO.PrepareDM_Types = {
};


DO.PrepareAllDataMartsResp = {
	$type:"$type",
	generated_scripts:"generated_scripts"
};

DO.PrepareAllDataMartsResp_Validation = {
};


DO.PrepareAllDataMartsResp_Defaults = {
	$type:"PrepareAllDataMartsResp",
	generated_scripts:[]
};

DO.PrepareAllDataMartsResp_Types = {
};


DO.ListDataMartsParams = {
	project_name:"project_name",
	pi_set_id:"pi_set_id"
};

DO.ListDataMartsParams_Validation = {
	project_name: {
		required: true
	},
	pi_set_id: {
		number: true
	}
};


DO.ListDataMartsParams_Defaults = {
	project_name:"",
	pi_set_id:0
};

DO.ListDataMartsParams_Types = {
};


DO.ListDataMartsRsp = {
	datamarts:"datamarts"
};

DO.ListDataMartsRsp_Validation = {
};


DO.ListDataMartsRsp_Defaults = {
	datamarts:[]
};

DO.ListDataMartsRsp_Types = {
	datamarts:"DataMartInfoDto"
};


DO.GetDMAForDisplayParams = {
	project_name:"project_name",
	datamart_id:"datamart_id"
};

DO.GetDMAForDisplayParams_Validation = {
	project_name: {
		required: true
	},
	datamart_id: {
		required: true,
		number: true
	}
};


DO.GetDMAForDisplayParams_Defaults = {
	project_name:"",
	datamart_id:0
};

DO.GetDMAForDisplayParams_Types = {
};


DO.GetDMAForDisplayReq = {
	fact_table:"fact_table",
	count:"count"
};

DO.GetDMAForDisplayReq_Validation = {
	fact_table: {
		required: true
	},
	count: {
		required: true,
		number: true
	}
};


DO.GetDMAForDisplayReq_Defaults = {
	fact_table:"",
	count:1000
};

DO.GetDMAForDisplayReq_Types = {
};


DO.GetAggregatedFactColumnsParams = {
	project_name:"project_name"
};

DO.GetAggregatedFactColumnsParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetAggregatedFactColumnsParams_Defaults = {
	project_name:""
};

DO.GetAggregatedFactColumnsParams_Types = {
};


DO.GetAggregatedFactColumnsReq = {
	nodes:"nodes"
};

DO.GetAggregatedFactColumnsReq_Validation = {
};


DO.GetAggregatedFactColumnsReq_Defaults = {
	nodes:[]
};

DO.GetAggregatedFactColumnsReq_Types = {
	nodes:"TreeNode"
};


DO.GetAggregatedFactColumnsResp = {
	aggregate_columns:"aggregate_columns"
};

DO.GetAggregatedFactColumnsResp_Validation = {
};


DO.GetAggregatedFactColumnsResp_Defaults = {
	aggregate_columns:[]
};

DO.GetAggregatedFactColumnsResp_Types = {
	aggregate_columns:"FactDimColumn"
};


DO.GetDimStarSchemasParams = {
	project_name:"project_name",
	dim_id:"dim_id"
};

DO.GetDimStarSchemasParams_Validation = {
	project_name: {
		required: true
	},
	dim_id: {
		number: true
	}
};


DO.GetDimStarSchemasParams_Defaults = {
	project_name:"",
	dim_id:0
};

DO.GetDimStarSchemasParams_Types = {
};


DO.GetDimStarSchemasRsp = {
	star_schemas_info:"star_schemas_info"
};

DO.GetDimStarSchemasRsp_Validation = {
};


DO.GetDimStarSchemasRsp_Defaults = {
	star_schemas_info:[]
};

DO.GetDimStarSchemasRsp_Types = {
	star_schemas_info:"LinkStarSchemaInfo"
};


DO.LinkStarSchemaInfo = {
	star_schema:"star_schema",
	dim_path:"dim_path",
	display_path:"display_path"
};

DO.LinkStarSchemaInfo_Validation = {
	star_schema: {
		number: true
	}
};


DO.LinkStarSchemaInfo_Defaults = {
	star_schema:0,
	dim_path:"",
	display_path:""
};

DO.LinkStarSchemaInfo_Types = {
};


DO.AddDimesnionToStarSchemasParams = {
	project_name:"project_name"
};

DO.AddDimesnionToStarSchemasParams_Validation = {
	project_name: {
		required: true
	}
};


DO.AddDimesnionToStarSchemasParams_Defaults = {
	project_name:""
};

DO.AddDimesnionToStarSchemasParams_Types = {
};


DO.AddDimesnionToStarSchemasReq = {
	star_schemas:"star_schemas",
	dim_id:"dim_id"
};

DO.AddDimesnionToStarSchemasReq_Validation = {
	dim_id: {
		number: true
	}
};


DO.AddDimesnionToStarSchemasReq_Defaults = {
	star_schemas:[],
	dim_id:0
};

DO.AddDimesnionToStarSchemasReq_Types = {
	star_schemas:"LinkStarSchemaInfo"
};


DO.GetDMATreeNodesParams = {
	project_name:"project_name",
	root_entity_id:"root_entity_id",
	level:"level"
};

DO.GetDMATreeNodesParams_Validation = {
	project_name: {
		required: true
	},
	root_entity_id: {
		number: true
	}
};


DO.GetDMATreeNodesParams_Defaults = {
	project_name:"",
	root_entity_id:-1,
	level:DO.TreeNodeLevel.All
};

DO.GetDMATreeNodesParams_Types = {
	level:"TreeNodeLevel"
};


DO.GetDMATreeNodesRsp = {
	roots:"roots",
	full_entities_tree_nodes:"full_entities_tree_nodes"
};

DO.GetDMATreeNodesRsp_Validation = {
};


DO.GetDMATreeNodesRsp_Defaults = {
	roots:[],
	full_entities_tree_nodes:true
};

DO.GetDMATreeNodesRsp_Types = {
	roots:"TreeNode"
};


DO.TreeNode = {
	node_id:"node_id",
	parent_node_id:"parent_node_id",
	caption:"caption",
	is_checked:"is_checked",
	type:"type",
	is_fact:"is_fact",
	is_dimension:"is_dimension",
	is_txdate:"is_txdate",
	children:"children",
	path:"path",
	history_type:"history_type",
	root_entity_id:"root_entity_id",
	role_id:"role_id",
	is_aggregated_fact:"is_aggregated_fact",
	category:"category",
	data_type:"data_type",
	is_time_checked:"is_time_checked",
	is_date_checked:"is_date_checked",
	star_schema_type:"star_schema_type"
};

DO.TreeNode_Validation = {
	node_id: {
		number: true
	},
	parent_node_id: {
		number: true
	},
	root_entity_id: {
		number: true
	},
	role_id: {
		number: true
	}
};


DO.TreeNode_Defaults = {
	node_id:0,
	parent_node_id:0,
	caption:"",
	is_checked:false,
	type:"",
	is_fact:false,
	is_dimension:false,
	is_txdate:false,
	children:[],
	path:"",
	history_type:DO.HistoryType.N,
	root_entity_id:0,
	role_id:0,
	is_aggregated_fact:false,
	category:DO.TreeNodeCategory.DENORMALIZED,
	data_type:DO.ACDataType.NotSupported,
	is_time_checked:false,
	is_date_checked:false,
	star_schema_type:DO.StarSchemaType.TRANSACTIONAL
};

DO.TreeNode_Types = {
	children:"TreeNode",
	history_type:"HistoryType",
	category:"TreeNodeCategory",
	data_type:"ACDataType",
	star_schema_type:"StarSchemaType"
};


DO.CreateStarSchemaParams = {
	project_name:"project_name",
	dma_id:"dma_id"
};

DO.CreateStarSchemaParams_Validation = {
	project_name: {
		required: true
	},
	dma_id: {
		number: true
	}
};


DO.CreateStarSchemaParams_Defaults = {
	project_name:"",
	dma_id:0
};

DO.CreateStarSchemaParams_Types = {
};


DO.CreateStarSchemaReq = {
	nodes:"nodes",
	aggregated_nodes:"aggregated_nodes",
	star_schema_name:"star_schema_name",
	description:"description",
	view_name:"view_name",
	is_virtual:"is_virtual"
};

DO.CreateStarSchemaReq_Validation = {
};


DO.CreateStarSchemaReq_Defaults = {
	nodes:[],
	aggregated_nodes:[],
	star_schema_name:"",
	description:"",
	view_name:"",
	is_virtual:false
};

DO.CreateStarSchemaReq_Types = {
	nodes:"TreeNode",
	aggregated_nodes:"FactDimColumn"
};


DO.CreateStarSchemaResp = {
	star_schema:"star_schema"
};

DO.CreateStarSchemaResp_Validation = {
};


DO.CreateStarSchemaResp_Defaults = {
	star_schema:null
};

DO.CreateStarSchemaResp_Types = {
	star_schema:"FactDimInfo"
};


DO.CreateDimensionParams = {
	project_name:"project_name",
	dma_id:"dma_id"
};

DO.CreateDimensionParams_Validation = {
	project_name: {
		required: true
	},
	dma_id: {
		number: true
	}
};


DO.CreateDimensionParams_Defaults = {
	project_name:"",
	dma_id:0
};

DO.CreateDimensionParams_Types = {
};


DO.CreateDimensionReq = {
	nodes:"nodes",
	display_name:"display_name",
	description:"description",
	view_name:"view_name"
};

DO.CreateDimensionReq_Validation = {
};


DO.CreateDimensionReq_Defaults = {
	nodes:null,
	display_name:"",
	description:"",
	view_name:""
};

DO.CreateDimensionReq_Types = {
	nodes:"TreeNode"
};


DO.CreateDimensionResp = {
	dimesnion:"dimesnion"
};

DO.CreateDimensionResp_Validation = {
};


DO.CreateDimensionResp_Defaults = {
	dimesnion:null
};

DO.CreateDimensionResp_Types = {
	dimesnion:"FactDimInfo"
};


DO.CopyDimensionsParams = {
	project_name:"project_name",
	dma_id:"dma_id",
	is_ref:"is_ref"
};

DO.CopyDimensionsParams_Validation = {
	project_name: {
		required: true
	},
	dma_id: {
		number: true
	}
};


DO.CopyDimensionsParams_Defaults = {
	project_name:"",
	dma_id:0,
	is_ref:false
};

DO.CopyDimensionsParams_Types = {
};


DO.CopyDimensionsReq = {
	dims_id:"dims_id"
};

DO.CopyDimensionsReq_Validation = {
	dims_id: {
		number: true
	}
};


DO.CopyDimensionsReq_Defaults = {
	dims_id:[]
};

DO.CopyDimensionsReq_Types = {
};


DO.DeleteStarSchemaParams = {
	project_name:"project_name",
	datamart_id:"datamart_id"
};

DO.DeleteStarSchemaParams_Validation = {
	project_name: {
		required: true
	},
	datamart_id: {
		required: true,
		number: true
	}
};


DO.DeleteStarSchemaParams_Defaults = {
	project_name:"",
	datamart_id:0
};

DO.DeleteStarSchemaParams_Types = {
};


DO.DeleteStarSchemaReq = {
	drop_unused_dimesnions:"drop_unused_dimesnions",
	star_schema_id:"star_schema_id"
};

DO.DeleteStarSchemaReq_Validation = {
	star_schema_id: {
		number: true
	}
};


DO.DeleteStarSchemaReq_Defaults = {
	drop_unused_dimesnions:false,
	star_schema_id:0
};

DO.DeleteStarSchemaReq_Types = {
};


DO.DeleteDimensionParams = {
	project_name:"project_name",
	datamart_id:"datamart_id"
};

DO.DeleteDimensionParams_Validation = {
	project_name: {
		required: true
	},
	datamart_id: {
		required: true,
		number: true
	}
};


DO.DeleteDimensionParams_Defaults = {
	project_name:"",
	datamart_id:0
};

DO.DeleteDimensionParams_Types = {
};


DO.DeleteDimensionReq = {
	dim_id:"dim_id"
};

DO.DeleteDimensionReq_Validation = {
	dim_id: {
		number: true
	}
};


DO.DeleteDimensionReq_Defaults = {
	dim_id:0
};

DO.DeleteDimensionReq_Types = {
};


DO.CreateDataMartParams = {
	project_name:"project_name"
};

DO.CreateDataMartParams_Validation = {
	project_name: {
		required: true
	}
};


DO.CreateDataMartParams_Defaults = {
	project_name:""
};

DO.CreateDataMartParams_Types = {
};


DO.CreateDataMartReq = {
	dma_name:"dma_name",
	dma_description:"dma_description"
};

DO.CreateDataMartReq_Validation = {
};


DO.CreateDataMartReq_Defaults = {
	dma_name:"",
	dma_description:""
};

DO.CreateDataMartReq_Types = {
};


DO.CreateDataMartResp = {
	dma_id:"dma_id"
};

DO.CreateDataMartResp_Validation = {
	dma_id: {
		number: true
	}
};


DO.CreateDataMartResp_Defaults = {
	dma_id:0
};

DO.CreateDataMartResp_Types = {
};


DO.DeleteDataMartParams = {
	project_name:"project_name",
	datamart_id:"datamart_id"
};

DO.DeleteDataMartParams_Validation = {
	project_name: {
		required: true
	},
	datamart_id: {
		required: true,
		number: true
	}
};


DO.DeleteDataMartParams_Defaults = {
	project_name:"",
	datamart_id:0
};

DO.DeleteDataMartParams_Types = {
};


DO.UpdateDataMartParams = {
	project_name:"project_name"
};

DO.UpdateDataMartParams_Validation = {
	project_name: {
		required: true
	}
};


DO.UpdateDataMartParams_Defaults = {
	project_name:""
};

DO.UpdateDataMartParams_Types = {
};


DO.UpdateDataMartReq = {
	data_mart:"data_mart"
};

DO.UpdateDataMartReq_Validation = {
	data_mart: {
		required: true
	}
};


DO.UpdateDataMartReq_Defaults = {
	data_mart:{}
};

DO.UpdateDataMartReq_Types = {
	data_mart:"DataMartInfoDto"
};


DO.UpdateDataMartRsp = {
	data_mart:"data_mart"
};

DO.UpdateDataMartRsp_Validation = {
	data_mart: {
		required: true
	}
};


DO.UpdateDataMartRsp_Defaults = {
	data_mart:{}
};

DO.UpdateDataMartRsp_Types = {
	data_mart:"DataMartInfoDto"
};


DO.CreatePhysicalDMAParams = {
	project_name:"project_name",
	message_guid:"message_guid",
	datamart_id:"datamart_id",
	from_adjust:"from_adjust"
};

DO.CreatePhysicalDMAParams_Validation = {
	project_name: {
		required: true
	},
	datamart_id: {
		required: true,
		number: true
	}
};


DO.CreatePhysicalDMAParams_Defaults = {
	project_name:"",
	message_guid:"",
	datamart_id:0,
	from_adjust:false
};

DO.CreatePhysicalDMAParams_Types = {
};


DO.CreatePhysicalDMAResp = {
	$type:"$type",
	generated_scripts:"generated_scripts"
};

DO.CreatePhysicalDMAResp_Validation = {
};


DO.CreatePhysicalDMAResp_Defaults = {
	$type:"CreatePhysicalDMAResp",
	generated_scripts:[]
};

DO.CreatePhysicalDMAResp_Types = {
};


DO.DropDataMartTablesParams = {
	project_name:"project_name"
};

DO.DropDataMartTablesParams_Validation = {
	project_name: {
		required: true
	}
};


DO.DropDataMartTablesParams_Defaults = {
	project_name:""
};

DO.DropDataMartTablesParams_Types = {
};


DO.CleanDataMartTablesParams = {
	project_name:"project_name"
};

DO.CleanDataMartTablesParams_Validation = {
	project_name: {
		required: true
	}
};


DO.CleanDataMartTablesParams_Defaults = {
	project_name:""
};

DO.CleanDataMartTablesParams_Types = {
};


DO.FactDimInfo = {
	fact_dim_data:"fact_dim_data",
	dwh_columns:"dwh_columns",
	status:"status"
};

DO.FactDimInfo_Validation = {
};


DO.FactDimInfo_Defaults = {
	fact_dim_data:null,
	dwh_columns:[],
	status:DO.FactDimStatus.VALID
};

DO.FactDimInfo_Types = {
	fact_dim_data:"FactDimDto",
	dwh_columns:"FactDimColumn",
	status:"FactDimStatus"
};


DO.FactDimDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	type:"type",
	root_entity_id:"root_entity_id",
	history_type:"history_type",
	txdate_path:"txdate_path",
	datamart_id:"datamart_id",
	view_name:"view_name",
	filter_expression:"filter_expression",
	fact_dim_columns:"fact_dim_columns",
	is_aggregated_fact:"is_aggregated_fact",
	aggregation_filter:"aggregation_filter",
	linked_entities:"linked_entities",
	display_name:"display_name",
	description:"description",
	last_table_name_created:"last_table_name_created",
	is_virtual:"is_virtual",
	physical_properties:"physical_properties",
	status:"status",
	fact_as_type1:"fact_as_type1",
	parent_reference_dimension:"parent_reference_dimension"
};

DO.FactDimDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	root_entity_id: {
		number: true
	},
	datamart_id: {
		number: true
	},
	linked_entities: {
		number: true
	},
	parent_reference_dimension: {
		number: true
	}
};


DO.FactDimDto_Defaults = {
	$type:"FactDimDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	type:DO.DmTableType.DIMENSION,
	root_entity_id:0,
	history_type:"",
	txdate_path:"",
	datamart_id:0,
	view_name:"",
	filter_expression:null,
	fact_dim_columns:[],
	is_aggregated_fact:false,
	aggregation_filter:null,
	linked_entities:[],
	display_name:"",
	description:"",
	last_table_name_created:"",
	is_virtual:false,
	physical_properties:null,
	status:DO.FactDimStatus.VALID,
	fact_as_type1:true,
	parent_reference_dimension:0
};

DO.FactDimDto_Types = {
	metadata:"DTObjectMetaData",
	type:"DmTableType",
	filter_expression:"Expression",
	fact_dim_columns:"FactDimColumn",
	aggregation_filter:"Expression",
	physical_properties:"PhysicalPropertiesDto",
	status:"FactDimStatus"
};


DO.Expression = {
	expression_statement:"expression_statement",
	alias:"alias"
};

DO.Expression_Validation = {
};


DO.Expression_Defaults = {
	expression_statement:"",
	alias:[]
};

DO.Expression_Types = {
	alias:"AliasParams"
};


DO.AliasParams = {
	alias_name:"alias_name",
	alias_parameter:"alias_parameter"
};

DO.AliasParams_Validation = {
};


DO.AliasParams_Defaults = {
	alias_name:"",
	alias_parameter:""
};

DO.AliasParams_Types = {
};


DO.FactDimDtoPP = {
	datamart_id:"datamart_id"
};

DO.FactDimDtoPP_Validation = {
	datamart_id: {
		number: true
	}
};


DO.FactDimDtoPP_Defaults = {
	datamart_id:0
};

DO.FactDimDtoPP_Types = {
};


DO.KeyValueTreeNode = {
	key:"key",
	value:"value"
};

DO.KeyValueTreeNode_Validation = {
	key: {
		number: true
	}
};


DO.KeyValueTreeNode_Defaults = {
	key:0,
	value:[]
};

DO.KeyValueTreeNode_Types = {
	value:"TreeNode"
};


DO.GetDimFactsForEditParams = {
	project_name:"project_name",
	datamart_id:"datamart_id",
	for_display:"for_display",
	fact_dim_id:"fact_dim_id"
};

DO.GetDimFactsForEditParams_Validation = {
	project_name: {
		required: true
	},
	datamart_id: {
		required: true,
		number: true
	},
	fact_dim_id: {
		number: true
	}
};


DO.GetDimFactsForEditParams_Defaults = {
	project_name:"",
	datamart_id:0,
	for_display:false,
	fact_dim_id:-1
};

DO.GetDimFactsForEditParams_Types = {
};


DO.GetDimFactsForEditRsp = {
	facts_dims:"facts_dims"
};

DO.GetDimFactsForEditRsp_Validation = {
};


DO.GetDimFactsForEditRsp_Defaults = {
	facts_dims:[]
};

DO.GetDimFactsForEditRsp_Types = {
	facts_dims:"FactDimInfo"
};


DO.EditDataMartParams = {
	project_name:"project_name"
};

DO.EditDataMartParams_Validation = {
	project_name: {
		required: true
	}
};


DO.EditDataMartParams_Defaults = {
	project_name:""
};

DO.EditDataMartParams_Types = {
};


DO.EditDataMartReq = {
	fact_dim:"fact_dim",
	transaction_date_tree:"transaction_date_tree"
};

DO.EditDataMartReq_Validation = {
};


DO.EditDataMartReq_Defaults = {
	fact_dim:null,
	transaction_date_tree:null
};

DO.EditDataMartReq_Types = {
	fact_dim:"FactDimInfo",
	transaction_date_tree:"TreeNode"
};


DO.GetTransactionFactTreeParams = {
	project_name:"project_name",
	star_schema_id:"star_schema_id"
};

DO.GetTransactionFactTreeParams_Validation = {
	project_name: {
		required: true
	},
	star_schema_id: {
		required: true,
		number: true
	}
};


DO.GetTransactionFactTreeParams_Defaults = {
	project_name:"",
	star_schema_id:0
};

DO.GetTransactionFactTreeParams_Types = {
};


DO.GetTransactionFactTreeRsp = {
	tree:"tree"
};

DO.GetTransactionFactTreeRsp_Validation = {
};


DO.GetTransactionFactTreeRsp_Defaults = {
	tree:null
};

DO.GetTransactionFactTreeRsp_Types = {
	tree:"TreeNode"
};


DO.GetDMAColumnsParams = {
	project_name:"project_name",
	datamart_id:"datamart_id"
};

DO.GetDMAColumnsParams_Validation = {
	project_name: {
		required: true
	},
	datamart_id: {
		required: true,
		number: true
	}
};


DO.GetDMAColumnsParams_Defaults = {
	project_name:"",
	datamart_id:0
};

DO.GetDMAColumnsParams_Types = {
};


DO.GetDMAColumnsRsp = {
	info:"info"
};

DO.GetDMAColumnsRsp_Validation = {
};


DO.GetDMAColumnsRsp_Defaults = {
	info:[]
};

DO.GetDMAColumnsRsp_Types = {
	info:"StarSchemaColumnsInfo"
};


DO.StarSchemaColumnsInfo = {
	fact_info:"fact_info",
	dims_info:"dims_info",
	fact_id:"fact_id"
};

DO.StarSchemaColumnsInfo_Validation = {
	fact_id: {
		number: true
	}
};


DO.StarSchemaColumnsInfo_Defaults = {
	fact_info:null,
	dims_info:[],
	fact_id:0
};

DO.StarSchemaColumnsInfo_Types = {
	fact_info:"DMATableInfo",
	dims_info:"DMATableInfo"
};


DO.DMATableInfo = {
	table_name:"table_name",
	columns:"columns"
};

DO.DMATableInfo_Validation = {
};


DO.DMATableInfo_Defaults = {
	table_name:"",
	columns:[]
};

DO.DMATableInfo_Types = {
};


DO.CheckDataMartParams = {
	project_name:"project_name",
	etl_id:"etl_id",
	from_validate:"from_validate"
};

DO.CheckDataMartParams_Validation = {
	project_name: {
		required: true
	},
	etl_id: {
		number: true
	}
};


DO.CheckDataMartParams_Defaults = {
	project_name:"",
	etl_id:0,
	from_validate:false
};

DO.CheckDataMartParams_Types = {
};


DO.GetCheckDataMartRsp = {
	results:"results"
};

DO.GetCheckDataMartRsp_Validation = {
};


DO.GetCheckDataMartRsp_Defaults = {
	results:[]
};

DO.GetCheckDataMartRsp_Types = {
	results:"CheckProjectResult"
};


DO.ComposeLoggers = {
	$type:"$type",
	Root:"Root",
	AttInfrastructure:"AttInfrastructure",
	Service:"Service",
	Host:"Host",
	Command:"Command",
	Security:"Security",
	WebLog:"WebLog",
	Log:"Log",
	Services:"Services",
	Repository:"Repository",
	Scheduler:"Scheduler",
	Notification:"Notification",
	Audit:"Audit",
	Workflow:"Workflow",
	Execution:"Execution",
	MessageCenter:"MessageCenter",
	Authorization:"Authorization",
	License:"License",
	Compose:"Compose",
	DBUtil:"DBUtil",
	UserInteraction:"UserInteraction",
	Metadata:"Metadata",
	Engine:"Engine",
	Manager:"Manager",
	DataWarehouse:"DataWarehouse",
	DataMart:"DataMart",
	Csv:"Csv",
	Performance:"Performance",
	SchemaEvolution:"SchemaEvolution"
};

DO.ComposeLoggers_Validation = {
};


DO.ComposeLoggers_Defaults = {
	$type:"ComposeLoggers",
	Root:DO.LogLevel.INFO,
	AttInfrastructure:DO.LogLevel.DEFAULT,
	Service:DO.LogLevel.DEFAULT,
	Host:DO.LogLevel.DEFAULT,
	Command:DO.LogLevel.DEFAULT,
	Security:DO.LogLevel.DEFAULT,
	WebLog:DO.LogLevel.DEFAULT,
	Log:DO.LogLevel.DEFAULT,
	Services:DO.LogLevel.DEFAULT,
	Repository:DO.LogLevel.DEFAULT,
	Scheduler:DO.LogLevel.DEFAULT,
	Notification:DO.LogLevel.DEFAULT,
	Audit:DO.LogLevel.DEFAULT,
	Workflow:DO.LogLevel.DEFAULT,
	Execution:DO.LogLevel.DEFAULT,
	MessageCenter:DO.LogLevel.DEFAULT,
	Authorization:DO.LogLevel.DEFAULT,
	License:DO.LogLevel.DEFAULT,
	Compose:DO.LogLevel.DEFAULT,
	DBUtil:DO.LogLevel.DEFAULT,
	UserInteraction:DO.LogLevel.DEFAULT,
	Metadata:DO.LogLevel.DEFAULT,
	Engine:DO.LogLevel.DEFAULT,
	Manager:DO.LogLevel.DEFAULT,
	DataWarehouse:DO.LogLevel.DEFAULT,
	DataMart:DO.LogLevel.DEFAULT,
	Csv:DO.LogLevel.DEFAULT,
	Performance:DO.LogLevel.DEFAULT,
	SchemaEvolution:DO.LogLevel.DEFAULT
};

DO.ComposeLoggers_Types = {
	Root:"LogLevel",
	AttInfrastructure:"LogLevel",
	Service:"LogLevel",
	Host:"LogLevel",
	Command:"LogLevel",
	Security:"LogLevel",
	WebLog:"LogLevel",
	Log:"LogLevel",
	Services:"LogLevel",
	Repository:"LogLevel",
	Scheduler:"LogLevel",
	Notification:"LogLevel",
	Audit:"LogLevel",
	Workflow:"LogLevel",
	Execution:"LogLevel",
	MessageCenter:"LogLevel",
	Authorization:"LogLevel",
	License:"LogLevel",
	Compose:"LogLevel",
	DBUtil:"LogLevel",
	UserInteraction:"LogLevel",
	Metadata:"LogLevel",
	Engine:"LogLevel",
	Manager:"LogLevel",
	DataWarehouse:"LogLevel",
	DataMart:"LogLevel",
	Csv:"LogLevel",
	Performance:"LogLevel",
	SchemaEvolution:"LogLevel"
};


DO.InspectTableParams = {
	project_name:"project_name",
	db_id:"db_id",
	table_schema:"table_schema",
	table_name:"table_name",
	count:"count"
};

DO.InspectTableParams_Validation = {
	count: {
		number: true
	}
};


DO.InspectTableParams_Defaults = {
	project_name:"",
	db_id:"",
	table_schema:"",
	table_name:"",
	count:0
};

DO.InspectTableParams_Types = {
};


DO.InspectQueryParams = {
	project_name:"project_name",
	db_id:"db_id",
	query:"query",
	count:"count"
};

DO.InspectQueryParams_Validation = {
	count: {
		number: true
	}
};


DO.InspectQueryParams_Defaults = {
	project_name:"",
	db_id:"",
	query:"",
	count:0
};

DO.InspectQueryParams_Types = {
};


DO.InspectLookupParams = {
	project_name:"project_name",
	db_id:"db_id",
	entity_id:"entity_id",
	table_schema:"table_schema",
	table_name:"table_name",
	count:"count",
	requested_column_name:"requested_column_name"
};

DO.InspectLookupParams_Validation = {
	count: {
		number: true
	}
};


DO.InspectLookupParams_Defaults = {
	project_name:"",
	db_id:"",
	entity_id:"",
	table_schema:"",
	table_name:"",
	count:0,
	requested_column_name:""
};

DO.InspectLookupParams_Types = {
};


DO.InspectLookupReq = {
	requested_lookup:"requested_lookup",
	source_query:"source_query"
};

DO.InspectLookupReq_Validation = {
};


DO.InspectLookupReq_Defaults = {
	requested_lookup:null,
	source_query:""
};

DO.InspectLookupReq_Types = {
	requested_lookup:"LookupField"
};


DO.InspectPopulateDWHParams = {
	project_name:"project_name",
	table_schema:"table_schema",
	table_name:"table_name",
	count:"count",
	operation:"operation",
	run_number:"run_number"
};

DO.InspectPopulateDWHParams_Validation = {
	count: {
		number: true
	},
	run_number: {
		number: true
	}
};


DO.InspectPopulateDWHParams_Defaults = {
	project_name:"",
	table_schema:"",
	table_name:"",
	count:0,
	operation:DO.POPULATE_OPERATION.INSERTS,
	run_number:0
};

DO.InspectPopulateDWHParams_Types = {
	operation:"POPULATE_OPERATION"
};


DO.GetMappingErrorRowsDataParams = {
	project_name:"project_name",
	mapping_id:"mapping_id",
	landing_id:"landing_id",
	runno:"runno",
	count:"count"
};

DO.GetMappingErrorRowsDataParams_Validation = {
	mapping_id: {
		number: true
	},
	landing_id: {
		number: true
	},
	runno: {
		number: true
	},
	count: {
		number: true
	}
};


DO.GetMappingErrorRowsDataParams_Defaults = {
	project_name:"",
	mapping_id:0,
	landing_id:0,
	runno:0,
	count:0
};

DO.GetMappingErrorRowsDataParams_Types = {
};


DO.InspectPopulateDMParams = {
	project_name:"project_name",
	entity_id:"entity_id",
	count:"count",
	operation:"operation",
	run_number:"run_number"
};

DO.InspectPopulateDMParams_Validation = {
	entity_id: {
		number: true
	},
	count: {
		number: true
	},
	run_number: {
		number: true
	}
};


DO.InspectPopulateDMParams_Defaults = {
	project_name:"",
	entity_id:0,
	count:0,
	operation:DO.POPULATE_OPERATION.INSERTS,
	run_number:0
};

DO.InspectPopulateDMParams_Types = {
	operation:"POPULATE_OPERATION"
};


DO.AdjustDWHParams = {
	project_name:"project_name",
	message_guid:"message_guid",
	generate_script:"generate_script"
};

DO.AdjustDWHParams_Validation = {
	project_name: {
		required: true
	}
};


DO.AdjustDWHParams_Defaults = {
	project_name:"",
	message_guid:"",
	generate_script:false
};

DO.AdjustDWHParams_Types = {
};


DO.AdjustDWHResp = {
	$type:"$type",
	generated_scripts:"generated_scripts",
	success:"success"
};

DO.AdjustDWHResp_Validation = {
};


DO.AdjustDWHResp_Defaults = {
	$type:"AdjustDWHResp",
	generated_scripts:[],
	success:false
};

DO.AdjustDWHResp_Types = {
};


DO.CompareDWHParams = {
	project_name:"project_name",
	message_guid:"message_guid"
};

DO.CompareDWHParams_Validation = {
	project_name: {
		required: true
	}
};


DO.CompareDWHParams_Defaults = {
	project_name:"",
	message_guid:""
};

DO.CompareDWHParams_Types = {
};


DO.CompareDWHResp = {
	results:"results",
	compare_error:"compare_error",
	check_model_results:"check_model_results"
};

DO.CompareDWHResp_Validation = {
};


DO.CompareDWHResp_Defaults = {
	results:[],
	compare_error:false,
	check_model_results:[]
};

DO.CompareDWHResp_Types = {
	results:"CompareDWHResult",
	check_model_results:"CheckProjectResult"
};


DO.AdjustDMParams = {
	project_name:"project_name",
	message_guid:"message_guid",
	datamart_id:"datamart_id"
};

DO.AdjustDMParams_Validation = {
	project_name: {
		required: true
	},
	datamart_id: {
		number: true
	}
};


DO.AdjustDMParams_Defaults = {
	project_name:"",
	message_guid:"",
	datamart_id:-1
};

DO.AdjustDMParams_Types = {
};


DO.AdjustDMResp = {
	$type:"$type",
	generated_scripts:"generated_scripts"
};

DO.AdjustDMResp_Validation = {
};


DO.AdjustDMResp_Defaults = {
	$type:"AdjustDMResp",
	generated_scripts:[]
};

DO.AdjustDMResp_Types = {
};


DO.CompareDMParams = {
	project_name:"project_name",
	message_guid:"message_guid",
	datamart_id:"datamart_id"
};

DO.CompareDMParams_Validation = {
	project_name: {
		required: true
	},
	datamart_id: {
		number: true
	}
};


DO.CompareDMParams_Defaults = {
	project_name:"",
	message_guid:"",
	datamart_id:-1
};

DO.CompareDMParams_Types = {
};


DO.CompareDMResp = {
	results:"results"
};

DO.CompareDMResp_Validation = {
};


DO.CompareDMResp_Defaults = {
	results:[]
};

DO.CompareDMResp_Types = {
	results:"CompareDMResult"
};


DO.ETLCommandsStatus = {
	waiting_count:"waiting_count",
	standby_count:"standby_count",
	error_count:"error_count",
	running_count:"running_count",
	skipped_count:"skipped_count",
	completed_count:"completed_count"
};

DO.ETLCommandsStatus_Validation = {
	waiting_count: {
		number: true
	},
	standby_count: {
		number: true
	},
	error_count: {
		number: true
	},
	running_count: {
		number: true
	},
	skipped_count: {
		number: true
	},
	completed_count: {
		number: true
	}
};


DO.ETLCommandsStatus_Defaults = {
	waiting_count:0,
	standby_count:0,
	error_count:0,
	running_count:0,
	skipped_count:0,
	completed_count:0
};

DO.ETLCommandsStatus_Types = {
};


DO.ReloadDMParams = {
	project_name:"project_name",
	datamart_id:"datamart_id",
	fact_dim_id:"fact_dim_id",
	obsolete_data:"obsolete_data"
};

DO.ReloadDMParams_Validation = {
	project_name: {
		required: true
	},
	datamart_id: {
		number: true
	},
	fact_dim_id: {
		number: true
	}
};


DO.ReloadDMParams_Defaults = {
	project_name:"",
	datamart_id:-1,
	fact_dim_id:-1,
	obsolete_data:false
};

DO.ReloadDMParams_Types = {
};


DO.ReloadDMResp = {
	reloaded_fact_dim:"reloaded_fact_dim"
};

DO.ReloadDMResp_Validation = {
};


DO.ReloadDMResp_Defaults = {
	reloaded_fact_dim:[]
};

DO.ReloadDMResp_Types = {
};


DO.GetProjectMonitorDataParams = {
	project_name:"project_name"
};

DO.GetProjectMonitorDataParams_Validation = {
};


DO.GetProjectMonitorDataParams_Defaults = {
	project_name:""
};

DO.GetProjectMonitorDataParams_Types = {
};


DO.GetProjectMonitorDataResp = {
	tasks_monitor_data:"tasks_monitor_data"
};

DO.GetProjectMonitorDataResp_Validation = {
};


DO.GetProjectMonitorDataResp_Defaults = {
	tasks_monitor_data:[]
};

DO.GetProjectMonitorDataResp_Types = {
	tasks_monitor_data:"TaskMonitorData"
};


DO.TaskMonitorData = {
	executor_status:"executor_status",
	next_run_time:"next_run_time",
	scheduled_job:"scheduled_job",
	can_populate:"can_populate",
	run_message:"run_message",
	dwh_full_load:"dwh_full_load"
};

DO.TaskMonitorData_Validation = {
	next_run_time: {
		required: true,
		number: true
	}
};


DO.TaskMonitorData_Defaults = {
	executor_status:null,
	next_run_time:0,
	scheduled_job:null,
	can_populate:true,
	run_message:"",
	dwh_full_load:false
};

DO.TaskMonitorData_Types = {
	executor_status:"ExecutorStatus",
	scheduled_job:"ScheduledJobDto"
};


DO.GetProjectTaskMonitorDataParams = {
	project_name:"project_name",
	etl_id:"etl_id",
	task_type:"task_type",
	task_name:"task_name"
};

DO.GetProjectTaskMonitorDataParams_Validation = {
	etl_id: {
		number: true
	}
};


DO.GetProjectTaskMonitorDataParams_Defaults = {
	project_name:"",
	etl_id:0,
	task_type:DO.ETLType.None,
	task_name:""
};

DO.GetProjectTaskMonitorDataParams_Types = {
	task_type:"ETLType"
};


DO.GetProjectTaskMonitorDataResp = {
	task_monitor_data:"task_monitor_data"
};

DO.GetProjectTaskMonitorDataResp_Validation = {
};


DO.GetProjectTaskMonitorDataResp_Defaults = {
	task_monitor_data:null
};

DO.GetProjectTaskMonitorDataResp_Types = {
	task_monitor_data:"TaskMonitorData"
};


DO.FactDimDenormalizedTablesParams = {
	project_name:"project_name",
	fact_dim_id:"fact_dim_id"
};

DO.FactDimDenormalizedTablesParams_Validation = {
	fact_dim_id: {
		number: true
	}
};


DO.FactDimDenormalizedTablesParams_Defaults = {
	project_name:"",
	fact_dim_id:0
};

DO.FactDimDenormalizedTablesParams_Types = {
};


DO.FactDimDenormalizedTablesResp = {
	denormalized_tables:"denormalized_tables"
};

DO.FactDimDenormalizedTablesResp_Validation = {
};


DO.FactDimDenormalizedTablesResp_Defaults = {
	denormalized_tables:[]
};

DO.FactDimDenormalizedTablesResp_Types = {
	denormalized_tables:"TreeNode"
};


DO.InspectRelatedKeyParams = {
	project_name:"project_name"
};

DO.InspectRelatedKeyParams_Validation = {
};


DO.InspectRelatedKeyParams_Defaults = {
	project_name:""
};

DO.InspectRelatedKeyParams_Types = {
};


DO.InspectRelatedKeyReq = {
	entity_id:"entity_id",
	relation_ids:"relation_ids",
	run_number:"run_number",
	count:"count"
};

DO.InspectRelatedKeyReq_Validation = {
	entity_id: {
		number: true
	},
	relation_ids: {
		number: true
	},
	run_number: {
		number: true
	},
	count: {
		number: true
	}
};


DO.InspectRelatedKeyReq_Defaults = {
	entity_id:0,
	relation_ids:[],
	run_number:0,
	count:0
};

DO.InspectRelatedKeyReq_Types = {
};


DO.InspectRelatedKeyResp = {
	related_keys:"related_keys"
};

DO.InspectRelatedKeyResp_Validation = {
};


DO.InspectRelatedKeyResp_Defaults = {
	related_keys:[]
};

DO.InspectRelatedKeyResp_Types = {
	related_keys:"RelatedKeys"
};


DO.AddEntityTableMappingParams = {
	project_name:"project_name"
};

DO.AddEntityTableMappingParams_Validation = {
};


DO.AddEntityTableMappingParams_Defaults = {
	project_name:""
};

DO.AddEntityTableMappingParams_Types = {
};


DO.AddEntityTableMappingReq = {
	mapping:"mapping"
};

DO.AddEntityTableMappingReq_Validation = {
	mapping: {
		required: true
	}
};


DO.AddEntityTableMappingReq_Defaults = {
	mapping:{}
};

DO.AddEntityTableMappingReq_Types = {
	mapping:"EntityTableMapping"
};


DO.EntityTableMapping = {
	entity_name:"entity_name",
	table_schema:"table_schema",
	table_name:"table_name",
	description:"description"
};

DO.EntityTableMapping_Validation = {
};


DO.EntityTableMapping_Defaults = {
	entity_name:"",
	table_schema:"",
	table_name:"",
	description:""
};

DO.EntityTableMapping_Types = {
};


DO.AttributeColumnMappingDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	column_name:"column_name",
	flags:"flags",
	description:"description"
};

DO.AttributeColumnMappingDto_Validation = {
	version: {
		number: true
	}
};


DO.AttributeColumnMappingDto_Defaults = {
	$type:"AttributeColumnMappingDto",
	metadata:null,
	name:"",
	version:0,
	column_name:"",
	flags:DO.AttributeColumnMappingFlags.DEFAULT,
	description:""
};

DO.AttributeColumnMappingDto_Types = {
	metadata:"DTObjectMetaData",
	flags:"AttributeColumnMappingFlags"
};


DO.EntityGlobalMappingDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	table_schema:"table_schema",
	table_name:"table_name",
	description:"description",
	erwin_entity:"erwin_entity"
};

DO.EntityGlobalMappingDto_Validation = {
	version: {
		number: true
	}
};


DO.EntityGlobalMappingDto_Defaults = {
	$type:"EntityGlobalMappingDto",
	metadata:null,
	name:"",
	version:0,
	table_schema:"",
	table_name:"",
	description:"",
	erwin_entity:null
};

DO.EntityGlobalMappingDto_Types = {
	metadata:"DTObjectMetaData",
	erwin_entity:"ErwinEntity"
};


DO.ReplicateDDLColumn = {
	columnNewName:"columnNewName",
	action:"action",
	type:"type",
	length:"length",
	precision:"precision",
	scale:"scale",
	primaryKeyPosition:"primaryKeyPosition",
	nullable:"nullable",
	ordinal:"ordinal"
};

DO.ReplicateDDLColumn_Validation = {
	length: {
		number: true
	},
	precision: {
		number: true
	},
	scale: {
		number: true
	},
	primaryKeyPosition: {
		number: true
	},
	ordinal: {
		number: true
	}
};


DO.ReplicateDDLColumn_Defaults = {
	columnNewName:"",
	action:"",
	type:"",
	length:0,
	precision:0,
	scale:0,
	primaryKeyPosition:0,
	nullable:false,
	ordinal:0
};

DO.ReplicateDDLColumn_Types = {
};


DO.KeyValueColumnDetails = {
	key:"key",
	value:"value"
};

DO.KeyValueColumnDetails_Validation = {
};


DO.KeyValueColumnDetails_Defaults = {
	key:"",
	value:null
};

DO.KeyValueColumnDetails_Types = {
	value:"ReplicateDDLColumn"
};


DO.ReplicateDDLDetails = {
	owner:"owner",
	table:"table",
	tableNewName:"tableNewName",
	version:"version",
	columns:"columns"
};

DO.ReplicateDDLDetails_Validation = {
	version: {
		number: true
	}
};


DO.ReplicateDDLDetails_Defaults = {
	owner:"",
	table:"",
	tableNewName:"",
	version:0,
	columns:{}
};

DO.ReplicateDDLDetails_Types = {
	columns:"KeyValueColumnDetails"
};


DO.ReplicateDDLHistoryResult = {
	server_name:"server_name",
	task_name:"task_name",
	table_owner:"table_owner",
	table_name:"table_name",
	change_seq:"change_seq",
	timestamp:"timestamp",
	table_version:"table_version",
	ddl_type:"ddl_type",
	details:"details"
};

DO.ReplicateDDLHistoryResult_Validation = {
	table_version: {
		number: true
	}
};


DO.ReplicateDDLHistoryResult_Defaults = {
	server_name:"",
	task_name:"",
	table_owner:"",
	table_name:"",
	change_seq:"",
	timestamp:"",
	table_version:0,
	ddl_type:DO.DDLType.ALTER_TABLE,
	details:null
};

DO.ReplicateDDLHistoryResult_Types = {
	ddl_type:"DDLType",
	details:"ReplicateDDLDetails"
};


DO.KeyValueSchemaEvolutionContext = {
	key:"key",
	value:"value"
};

DO.KeyValueSchemaEvolutionContext_Validation = {
};


DO.KeyValueSchemaEvolutionContext_Defaults = {
	key:"",
	value:""
};

DO.KeyValueSchemaEvolutionContext_Types = {
};


DO.SchemaEvolutionContextDicDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	context_dictionary:"context_dictionary"
};

DO.SchemaEvolutionContextDicDto_Validation = {
	version: {
		number: true
	}
};


DO.SchemaEvolutionContextDicDto_Defaults = {
	$type:"SchemaEvolutionContextDicDto",
	metadata:null,
	name:"",
	version:0,
	context_dictionary:{}
};

DO.SchemaEvolutionContextDicDto_Types = {
	metadata:"DTObjectMetaData",
	context_dictionary:"KeyValueSchemaEvolutionContext"
};


DO.AutomaticSchemaEvolutionScanParams = {
	project_name:"project_name",
	message_guid:"message_guid"
};

DO.AutomaticSchemaEvolutionScanParams_Validation = {
	project_name: {
		required: true
	}
};


DO.AutomaticSchemaEvolutionScanParams_Defaults = {
	project_name:"",
	message_guid:""
};

DO.AutomaticSchemaEvolutionScanParams_Types = {
};


DO.AutomaticSchemaEvolutionScanReq = {
	landings_to_scan:"landings_to_scan"
};

DO.AutomaticSchemaEvolutionScanReq_Validation = {
};


DO.AutomaticSchemaEvolutionScanReq_Defaults = {
	landings_to_scan:[]
};

DO.AutomaticSchemaEvolutionScanReq_Types = {
};


DO.DDLChangeResults = {
	result_list:"result_list"
};

DO.DDLChangeResults_Validation = {
};


DO.DDLChangeResults_Defaults = {
	result_list:[]
};

DO.DDLChangeResults_Types = {
	result_list:"CompareDWHResult"
};


DO.KeyValueSchemaEvolutionChangesList = {
	key:"key",
	value:"value"
};

DO.KeyValueSchemaEvolutionChangesList_Validation = {
};


DO.KeyValueSchemaEvolutionChangesList_Defaults = {
	key:"",
	value:null
};

DO.KeyValueSchemaEvolutionChangesList_Types = {
	value:"DDLChangeResults"
};


DO.AutomaticSchemaEvolutionScanResp = {
	schema_evolution_changes_list:"schema_evolution_changes_list"
};

DO.AutomaticSchemaEvolutionScanResp_Validation = {
};


DO.AutomaticSchemaEvolutionScanResp_Defaults = {
	schema_evolution_changes_list:{}
};

DO.AutomaticSchemaEvolutionScanResp_Types = {
	schema_evolution_changes_list:"KeyValueSchemaEvolutionChangesList"
};


DO.AutomaticSchemaEvolutionApplyParams = {
	project_name:"project_name",
	message_guid:"message_guid",
	action:"action"
};

DO.AutomaticSchemaEvolutionApplyParams_Validation = {
	project_name: {
		required: true
	}
};


DO.AutomaticSchemaEvolutionApplyParams_Defaults = {
	project_name:"",
	message_guid:"",
	action:DO.SchemaEvolutionAction.APPLY_TO_MODEL_AND_MAPPINGS
};

DO.AutomaticSchemaEvolutionApplyParams_Types = {
	action:"SchemaEvolutionAction"
};


DO.AutomaticSchemaEvolutionApplyResp = {
	is_finished_successfuly:"is_finished_successfuly"
};

DO.AutomaticSchemaEvolutionApplyResp_Validation = {
	is_finished_successfuly: {
		required: true
	}
};


DO.AutomaticSchemaEvolutionApplyResp_Defaults = {
	is_finished_successfuly:false
};

DO.AutomaticSchemaEvolutionApplyResp_Types = {
};


DO.AutomaticSchemaEvolutionApplyReq = {
	schema_evolution_changes_list:"schema_evolution_changes_list"
};

DO.AutomaticSchemaEvolutionApplyReq_Validation = {
};


DO.AutomaticSchemaEvolutionApplyReq_Defaults = {
	schema_evolution_changes_list:{}
};

DO.AutomaticSchemaEvolutionApplyReq_Types = {
	schema_evolution_changes_list:"KeyValueSchemaEvolutionChangesList"
};


DO.DeleteEntityTableMappingParams = {
	project_name:"project_name"
};

DO.DeleteEntityTableMappingParams_Validation = {
};


DO.DeleteEntityTableMappingParams_Defaults = {
	project_name:""
};

DO.DeleteEntityTableMappingParams_Types = {
};


DO.DeleteEntityTableMappingReq = {
	entity_name:"entity_name"
};

DO.DeleteEntityTableMappingReq_Validation = {
	entity_name: {
		required: true
	}
};


DO.DeleteEntityTableMappingReq_Defaults = {
	entity_name:""
};

DO.DeleteEntityTableMappingReq_Types = {
};


DO.GetComposeTaskInfoParams = {
	$type:"$type",
	server:"server",
	task_id:"task_id",
	project_name:"project_name"
};

DO.GetComposeTaskInfoParams_Validation = {
	task_id: {
		number: true
	}
};


DO.GetComposeTaskInfoParams_Defaults = {
	$type:"GetComposeTaskInfoParams",
	server:"localhost",
	task_id:0,
	project_name:""
};

DO.GetComposeTaskInfoParams_Types = {
};


DO.GetComposeTaskInfoResp = {
	source_name:"source_name",
	source_type:"source_type",
	target_name:"target_name",
	target_type:"target_type"
};

DO.GetComposeTaskInfoResp_Validation = {
};


DO.GetComposeTaskInfoResp_Defaults = {
	source_name:"",
	source_type:DO.TemplateDatabaseType.SQLSERVER,
	target_name:"",
	target_type:DO.TemplateDatabaseType.SQLSERVER
};

DO.GetComposeTaskInfoResp_Types = {
	source_type:"TemplateDatabaseType",
	target_type:"TemplateDatabaseType"
};


DO.GetEntityTableMappingParams = {
	project_name:"project_name"
};

DO.GetEntityTableMappingParams_Validation = {
};


DO.GetEntityTableMappingParams_Defaults = {
	project_name:""
};

DO.GetEntityTableMappingParams_Types = {
};


DO.GetEntityTableMappingResp = {
	mappings:"mappings"
};

DO.GetEntityTableMappingResp_Validation = {
};


DO.GetEntityTableMappingResp_Defaults = {
	mappings:[]
};

DO.GetEntityTableMappingResp_Types = {
	mappings:"EntityTableMapping"
};


DO.GetUnMappedEntitiesParams = {
	project_name:"project_name"
};

DO.GetUnMappedEntitiesParams_Validation = {
};


DO.GetUnMappedEntitiesParams_Defaults = {
	project_name:""
};

DO.GetUnMappedEntitiesParams_Types = {
};


DO.GetUnMappedEntitiesResp = {
	unmapped_entities:"unmapped_entities"
};

DO.GetUnMappedEntitiesResp_Validation = {
};


DO.GetUnMappedEntitiesResp_Defaults = {
	unmapped_entities:[]
};

DO.GetUnMappedEntitiesResp_Types = {
};


DO.SetEntitiesToMapParams = {
	project_name:"project_name"
};

DO.SetEntitiesToMapParams_Validation = {
};


DO.SetEntitiesToMapParams_Defaults = {
	project_name:""
};

DO.SetEntitiesToMapParams_Types = {
};


DO.SetEntitiesToMapReq = {
	file_path:"file_path",
	erwin_model_type:"erwin_model_type"
};

DO.SetEntitiesToMapReq_Validation = {
	file_path: {
		required: true
	}
};


DO.SetEntitiesToMapReq_Defaults = {
	file_path:"",
	erwin_model_type:DO.ErwinModelType.LOGICAL
};

DO.SetEntitiesToMapReq_Types = {
	erwin_model_type:"ErwinModelType"
};


DO.GetGlobalEntityAttributesParams = {
	project_name:"project_name",
	entity:"entity"
};

DO.GetGlobalEntityAttributesParams_Validation = {
	entity: {
		required: true
	}
};


DO.GetGlobalEntityAttributesParams_Defaults = {
	project_name:"",
	entity:""
};

DO.GetGlobalEntityAttributesParams_Types = {
};


DO.GetGlobalEntityAttributesResp = {
	columns:"columns"
};

DO.GetGlobalEntityAttributesResp_Validation = {
};


DO.GetGlobalEntityAttributesResp_Defaults = {
	columns:[]
};

DO.GetGlobalEntityAttributesResp_Types = {
	columns:"Column"
};


DO.ErwinEntity = {
	name:"name",
	columns:"columns"
};

DO.ErwinEntity_Validation = {
	name: {
		required: true
	}
};


DO.ErwinEntity_Defaults = {
	name:"",
	columns:[]
};

DO.ErwinEntity_Types = {
	columns:"Column"
};


DO.GetAttributeColumnMappingParams = {
	project_name:"project_name"
};

DO.GetAttributeColumnMappingParams_Validation = {
};


DO.GetAttributeColumnMappingParams_Defaults = {
	project_name:""
};

DO.GetAttributeColumnMappingParams_Types = {
};


DO.GetAttributeColumnMappingResp = {
	mappings:"mappings"
};

DO.GetAttributeColumnMappingResp_Validation = {
};


DO.GetAttributeColumnMappingResp_Defaults = {
	mappings:[]
};

DO.GetAttributeColumnMappingResp_Types = {
	mappings:"AttributeColumnMappingDto"
};


DO.AddAttributeColumnMappingParams = {
	project_name:"project_name"
};

DO.AddAttributeColumnMappingParams_Validation = {
};


DO.AddAttributeColumnMappingParams_Defaults = {
	project_name:""
};

DO.AddAttributeColumnMappingParams_Types = {
};


DO.AddAttributeColumnMappingReq = {
	mapping:"mapping"
};

DO.AddAttributeColumnMappingReq_Validation = {
};


DO.AddAttributeColumnMappingReq_Defaults = {
	mapping:[]
};

DO.AddAttributeColumnMappingReq_Types = {
	mapping:"AttributeColumnMappingDto"
};


DO.DeleteAttributeColumnMappingParams = {
	project_name:"project_name"
};

DO.DeleteAttributeColumnMappingParams_Validation = {
};


DO.DeleteAttributeColumnMappingParams_Defaults = {
	project_name:""
};

DO.DeleteAttributeColumnMappingParams_Types = {
};


DO.DeleteAttributeColumnMappingReq = {
	attribute_name:"attribute_name"
};

DO.DeleteAttributeColumnMappingReq_Validation = {
	attribute_name: {
		required: true
	}
};


DO.DeleteAttributeColumnMappingReq_Defaults = {
	attribute_name:""
};

DO.DeleteAttributeColumnMappingReq_Types = {
};


DO.EtlCommandExecutionData = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	configuration_name:"configuration_name",
	scope:"scope",
	project_name:"project_name",
	etl_id:"etl_id"
};

DO.EtlCommandExecutionData_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	},
	etl_id: {
		number: true
	}
};


DO.EtlCommandExecutionData_Defaults = {
	$type:"EtlCommandExecutionData",
	metadata:null,
	name:"",
	version:0,
	id:0,
	configuration_name:"",
	scope:"",
	project_name:"",
	etl_id:0
};

DO.EtlCommandExecutionData_Types = {
	metadata:"DTObjectMetaData"
};


DO.ReplicateTaskExecutorDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	configuration_name:"configuration_name",
	scope:"scope",
	external_task:"external_task",
	replicate_server_name:"replicate_server_name",
	replicate_task_name:"replicate_task_name"
};

DO.ReplicateTaskExecutorDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	}
};


DO.ReplicateTaskExecutorDto_Defaults = {
	$type:"ReplicateTaskExecutorDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	configuration_name:"",
	scope:"",
	external_task:false,
	replicate_server_name:"",
	replicate_task_name:""
};

DO.ReplicateTaskExecutorDto_Types = {
	metadata:"DTObjectMetaData"
};


DO.CommandTaskExecutorDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	id:"id",
	configuration_name:"configuration_name",
	scope:"scope"
};

DO.CommandTaskExecutorDto_Validation = {
	version: {
		number: true
	},
	id: {
		number: true
	}
};


DO.CommandTaskExecutorDto_Defaults = {
	$type:"CommandTaskExecutorDto",
	metadata:null,
	name:"",
	version:0,
	id:0,
	configuration_name:"",
	scope:""
};

DO.CommandTaskExecutorDto_Types = {
	metadata:"DTObjectMetaData"
};


DO.ComposeAuditRecord = {
	$type:"$type",
	original_time:"original_time",
	reporting_node:"reporting_node",
	reporting_user:"reporting_user",
	product:"product",
	subject_name:"subject_name",
	category:"category",
	event:"event",
	severity:"severity",
	message:"message",
	audit_time:"audit_time",
	project_name:"project_name",
	task_name:"task_name",
	inserted:"inserted",
	updated:"updated",
	deleted:"deleted",
	error_code:"error_code",
	error_type:"error_type"
};

DO.ComposeAuditRecord_Validation = {
	original_time: {
		number: true
	},
	audit_time: {
		number: true
	}
};


DO.ComposeAuditRecord_Defaults = {
	$type:"ComposeAuditRecord",
	original_time:0,
	reporting_node:"",
	reporting_user:"",
	product:"",
	subject_name:"",
	category:"",
	event:"",
	severity:DO.AuditSeverity.INFO,
	message:"",
	audit_time:0,
	project_name:"",
	task_name:"",
	inserted:"N/A",
	updated:"N/A",
	deleted:"N/A",
	error_code:"N/A",
	error_type:DO.ComposeAuditErrorType.GENERAL_ERROR
};

DO.ComposeAuditRecord_Types = {
	severity:"AuditSeverity",
	error_type:"ComposeAuditErrorType"
};


DO.GetExpressionEditorParametersParams = {
	project_name:"project_name"
};

DO.GetExpressionEditorParametersParams_Validation = {
};


DO.GetExpressionEditorParametersParams_Defaults = {
	project_name:""
};

DO.GetExpressionEditorParametersParams_Types = {
};


DO.GetExpressionEditorParametersReq = {
	type:"type"
};

DO.GetExpressionEditorParametersReq_Validation = {
};


DO.GetExpressionEditorParametersReq_Defaults = {
	type:DO.expression_editor_type.EXPRESSION_EDITOR_TYPE_ALL
};

DO.GetExpressionEditorParametersReq_Types = {
	type:"expression_editor_type"
};


DO.GetExpressionEditorParametersResp = {
	categories:"categories"
};

DO.GetExpressionEditorParametersResp_Validation = {
};


DO.GetExpressionEditorParametersResp_Defaults = {
	categories:[]
};

DO.GetExpressionEditorParametersResp_Types = {
	categories:"expression_editor_category"
};


DO.DescribeExpressionParams = {
};

DO.DescribeExpressionParams_Validation = {
};


DO.DescribeExpressionParams_Defaults = {
};

DO.DescribeExpressionParams_Types = {
};


DO.DescribeExpressionReq = {
	expression:"expression"
};

DO.DescribeExpressionReq_Validation = {
	expression: {
		required: true
	}
};


DO.DescribeExpressionReq_Defaults = {
	expression:""
};

DO.DescribeExpressionReq_Types = {
};


DO.DescribeExpressionResp = {
	is_valid:"is_valid",
	params:"params",
	error_msg:"error_msg"
};

DO.DescribeExpressionResp_Validation = {
	is_valid: {
		required: true
	}
};


DO.DescribeExpressionResp_Defaults = {
	is_valid:false,
	params:[],
	error_msg:""
};

DO.DescribeExpressionResp_Types = {
	params:"expression_parameters"
};


DO.expression_parameters = {
	parameter:"parameter",
	value:"value",
	type:"type"
};

DO.expression_parameters_Validation = {
	parameter: {
		required: true
	},
	value: {
		required: true
	}
};


DO.expression_parameters_Defaults = {
	parameter:"",
	value:"",
	type:DO.ACDataType.NotSupported
};

DO.expression_parameters_Types = {
	type:"ACDataType"
};


DO.TestExpressionParams = {
	project_name:"project_name"
};

DO.TestExpressionParams_Validation = {
};


DO.TestExpressionParams_Defaults = {
	project_name:""
};

DO.TestExpressionParams_Types = {
};


DO.TestExpressionResp = {
	result:"result"
};

DO.TestExpressionResp_Validation = {
};


DO.TestExpressionResp_Defaults = {
	result:""
};

DO.TestExpressionResp_Types = {
};


DO.TestExpressionReq = {
	is_filter:"is_filter",
	expression:"expression",
	expression_params:"expression_params"
};

DO.TestExpressionReq_Validation = {
	is_filter: {
		required: true
	},
	expression: {
		required: true
	}
};


DO.TestExpressionReq_Defaults = {
	is_filter:false,
	expression:"",
	expression_params:[]
};

DO.TestExpressionReq_Types = {
	expression_params:"expression_parameters"
};


DO.DdlGetScriptDataParams = {
	script_file:"script_file",
	position:"position",
	lines_to_read:"lines_to_read",
	project_name:"project_name"
};

DO.DdlGetScriptDataParams_Validation = {
	position: {
		number: true
	},
	lines_to_read: {
		number: true
	}
};


DO.DdlGetScriptDataParams_Defaults = {
	script_file:"",
	position:0,
	lines_to_read:500,
	project_name:""
};

DO.DdlGetScriptDataParams_Types = {
};


DO.ScriptFileData = {
	text:"text",
	next_position:"next_position"
};

DO.ScriptFileData_Validation = {
	next_position: {
		number: true
	}
};


DO.ScriptFileData_Defaults = {
	text:"",
	next_position:0
};

DO.ScriptFileData_Types = {
};


DO.GetDdlScriptDataResp = {
	script_data:"script_data"
};

DO.GetDdlScriptDataResp_Validation = {
	script_data: {
		required: true
	}
};


DO.GetDdlScriptDataResp_Defaults = {
	script_data:{}
};

DO.GetDdlScriptDataResp_Types = {
	script_data:"ScriptFileData"
};


DO.ScriptListFilesParams = {
	project_name:"project_name",
	name_pattern:"name_pattern"
};

DO.ScriptListFilesParams_Validation = {
};


DO.ScriptListFilesParams_Defaults = {
	project_name:"",
	name_pattern:"*"
};

DO.ScriptListFilesParams_Types = {
};


DO.ScriptListFilesResp = {
	file_names:"file_names"
};

DO.ScriptListFilesResp_Validation = {
};


DO.ScriptListFilesResp_Defaults = {
	file_names:[]
};

DO.ScriptListFilesResp_Types = {
};


DO.DdlDownloadScriptFileParams = {
	script_file:"script_file",
	project_name:"project_name"
};

DO.DdlDownloadScriptFileParams_Validation = {
};


DO.DdlDownloadScriptFileParams_Defaults = {
	script_file:"",
	project_name:""
};

DO.DdlDownloadScriptFileParams_Types = {
};


DO.EvaluateExpressionParams = {
	project_name:"project_name",
	db_id:"db_id"
};

DO.EvaluateExpressionParams_Validation = {
};


DO.EvaluateExpressionParams_Defaults = {
	project_name:"",
	db_id:""
};

DO.EvaluateExpressionParams_Types = {
};


DO.EvaluateExpressionReq = {
	expression:"expression",
	is_filter:"is_filter",
	column_name:"column_name",
	table_schema:"table_schema",
	table_name:"table_name",
	query_statement:"query_statement",
	count:"count"
};

DO.EvaluateExpressionReq_Validation = {
	expression: {
		required: true
	},
	count: {
		number: true
	}
};


DO.EvaluateExpressionReq_Defaults = {
	expression:{},
	is_filter:false,
	column_name:"",
	table_schema:"",
	table_name:"",
	query_statement:"",
	count:0
};

DO.EvaluateExpressionReq_Types = {
	expression:"Expression"
};


DO.ImportProjectRepositoryParams = {
	project_name:"project_name",
	password:"password",
	is_without_credentials:"is_without_credentials",
	override_configuration:"override_configuration",
	dont_backup_existing_project:"dont_backup_existing_project",
	master_user_password:"master_user_password"
};

DO.ImportProjectRepositoryParams_Validation = {
};


DO.ImportProjectRepositoryParams_Defaults = {
	project_name:"",
	password:"",
	is_without_credentials:false,
	override_configuration:false,
	dont_backup_existing_project:false,
	master_user_password:""
};

DO.ImportProjectRepositoryParams_Types = {
};


DO.ExportRepositoryWithoutEnvSpecificsParams = {
	project_name:"project_name",
	password:"password",
	is_without_credentials:"is_without_credentials",
	master_user_password:"master_user_password"
};

DO.ExportRepositoryWithoutEnvSpecificsParams_Validation = {
};


DO.ExportRepositoryWithoutEnvSpecificsParams_Defaults = {
	project_name:"",
	password:"",
	is_without_credentials:false,
	master_user_password:""
};

DO.ExportRepositoryWithoutEnvSpecificsParams_Types = {
};


DO.GetProfileTableParams = {
	project_name:"project_name"
};

DO.GetProfileTableParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetProfileTableParams_Defaults = {
	project_name:""
};

DO.GetProfileTableParams_Types = {
};


DO.GetProfileTableReq = {
	etl_id:"etl_id",
	mapping:"mapping",
	db_id:"db_id",
	schema_name:"schema_name",
	table_name:"table_name",
	only_mapped_column:"only_mapped_column",
	is_for_discover:"is_for_discover",
	is_for_staging:"is_for_staging",
	count:"count"
};

DO.GetProfileTableReq_Validation = {
	etl_id: {
		number: true
	},
	db_id: {
		number: true
	},
	count: {
		number: true
	}
};


DO.GetProfileTableReq_Defaults = {
	etl_id:-1,
	mapping:null,
	db_id:0,
	schema_name:"",
	table_name:"",
	only_mapped_column:false,
	is_for_discover:false,
	is_for_staging:false,
	count:0
};

DO.GetProfileTableReq_Types = {
	mapping:"MappingDto"
};


DO.GetProfileTableRsp = {
	data_profiler:"data_profiler"
};

DO.GetProfileTableRsp_Validation = {
};


DO.GetProfileTableRsp_Defaults = {
	data_profiler:[]
};

DO.GetProfileTableRsp_Types = {
	data_profiler:"DataProfiler"
};


DO.DataProfiler = {
	column:"column",
	nulls:"nulls",
	duplicates:"duplicates",
	count:"count",
	count_distinct:"count_distinct",
	min:"min",
	max:"max",
	min_length:"min_length",
	max_length:"max_length",
	is_pk:"is_pk",
	is_internal:"is_internal",
	support_min_max:"support_min_max",
	support_min_max_length:"support_min_max_length"
};

DO.DataProfiler_Validation = {
	nulls: {
		number: true
	},
	duplicates: {
		number: true
	},
	count: {
		number: true
	},
	count_distinct: {
		number: true
	},
	min_length: {
		number: true
	},
	max_length: {
		number: true
	}
};


DO.DataProfiler_Defaults = {
	column:null,
	nulls:0,
	duplicates:0,
	count:0,
	count_distinct:0,
	min:"",
	max:"",
	min_length:0,
	max_length:0,
	is_pk:false,
	is_internal:false,
	support_min_max:true,
	support_min_max_length:true
};

DO.DataProfiler_Types = {
	column:"Column"
};


DO.GetInspectProfilingTableParams = {
	project_name:"project_name"
};

DO.GetInspectProfilingTableParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GetInspectProfilingTableParams_Defaults = {
	project_name:""
};

DO.GetInspectProfilingTableParams_Types = {
};


DO.GetInspectProfilingTableReq = {
	etl_id:"etl_id",
	mapping:"mapping",
	db_id:"db_id",
	table_name:"table_name",
	schema_name:"schema_name",
	profiling_type:"profiling_type",
	column:"column",
	value:"value",
	only_mapped_column:"only_mapped_column",
	is_for_discover:"is_for_discover",
	is_for_staging:"is_for_staging",
	count:"count"
};

DO.GetInspectProfilingTableReq_Validation = {
	etl_id: {
		number: true
	},
	db_id: {
		number: true
	},
	count: {
		number: true
	}
};


DO.GetInspectProfilingTableReq_Defaults = {
	etl_id:-1,
	mapping:null,
	db_id:0,
	table_name:"",
	schema_name:"",
	profiling_type:DO.DataProfilingColumnType.NULLS,
	column:null,
	value:"",
	only_mapped_column:false,
	is_for_discover:false,
	is_for_staging:false,
	count:0
};

DO.GetInspectProfilingTableReq_Types = {
	mapping:"MappingDto",
	profiling_type:"DataProfilingColumnType",
	column:"Column"
};


DO.GenerateWatermarkScriptsParams = {
	project_name:"project_name"
};

DO.GenerateWatermarkScriptsParams_Validation = {
	project_name: {
		required: true
	}
};


DO.GenerateWatermarkScriptsParams_Defaults = {
	project_name:""
};

DO.GenerateWatermarkScriptsParams_Types = {
};


DO.GenerateWatermarkScriptsRsp = {
	scriptName:"scriptName"
};

DO.GenerateWatermarkScriptsRsp_Validation = {
};


DO.GenerateWatermarkScriptsRsp_Defaults = {
	scriptName:{}
};

DO.GenerateWatermarkScriptsRsp_Types = {
	scriptName:"KeyValueScripName"
};


DO.ResetWatermarkParams = {
	project_name:"project_name",
	landing_name:"landing_name",
	table_name:"table_name"
};

DO.ResetWatermarkParams_Validation = {
	project_name: {
		required: true
	},
	landing_name: {
		required: true
	}
};


DO.ResetWatermarkParams_Defaults = {
	project_name:"",
	landing_name:"",
	table_name:""
};

DO.ResetWatermarkParams_Types = {
};


DO.DeleteEnvironmentVariableParams = {
	project_name:"project_name",
	variable_name:"variable_name"
};

DO.DeleteEnvironmentVariableParams_Validation = {
	project_name: {
		required: true
	}
};


DO.DeleteEnvironmentVariableParams_Defaults = {
	project_name:"",
	variable_name:""
};

DO.DeleteEnvironmentVariableParams_Types = {
};


DO.ApplyEnvironmentVariablesParams = {
	project_name:"project_name"
};

DO.ApplyEnvironmentVariablesParams_Validation = {
	project_name: {
		required: true
	}
};


DO.ApplyEnvironmentVariablesParams_Defaults = {
	project_name:""
};

DO.ApplyEnvironmentVariablesParams_Types = {
};


DO.SetEnvironmentVariablesParams = {
	project_name:"project_name"
};

DO.SetEnvironmentVariablesParams_Validation = {
	project_name: {
		required: true
	}
};


DO.SetEnvironmentVariablesParams_Defaults = {
	project_name:""
};

DO.SetEnvironmentVariablesParams_Types = {
};


DO.SetEnvironmentVariablesReq = {
	variable_name:"variable_name",
	value:"value"
};

DO.SetEnvironmentVariablesReq_Validation = {
};


DO.SetEnvironmentVariablesReq_Defaults = {
	variable_name:"",
	value:""
};

DO.SetEnvironmentVariablesReq_Types = {
};


DO.GetEnvironmentVariablesFileParams = {
	project_name:"project_name",
	file_type:"file_type"
};

DO.GetEnvironmentVariablesFileParams_Validation = {
	project_name: {
		required: true
	},
	file_type: {
		required: true
	}
};


DO.GetEnvironmentVariablesFileParams_Defaults = {
	project_name:"",
	file_type:DO.EnvironmentVariablesFileType.ALL
};

DO.GetEnvironmentVariablesFileParams_Types = {
	file_type:"EnvironmentVariablesFileType"
};


DO.SetEnvironmentVariablesFileParams = {
	project_name:"project_name"
};

DO.SetEnvironmentVariablesFileParams_Validation = {
	project_name: {
		required: true
	}
};


DO.SetEnvironmentVariablesFileParams_Defaults = {
	project_name:""
};

DO.SetEnvironmentVariablesFileParams_Types = {
};


DO.ExportModelToCsvParams = {
	project_name:"project_name"
};

DO.ExportModelToCsvParams_Validation = {
	project_name: {
		required: true
	}
};


DO.ExportModelToCsvParams_Defaults = {
	project_name:""
};

DO.ExportModelToCsvParams_Types = {
};


DO.ExportMappingToCsvParams = {
	project_name:"project_name"
};

DO.ExportMappingToCsvParams_Validation = {
	project_name: {
		required: true
	}
};


DO.ExportMappingToCsvParams_Defaults = {
	project_name:""
};

DO.ExportMappingToCsvParams_Types = {
};


DO.ExportDataMartToCsvParams = {
	project_name:"project_name"
};

DO.ExportDataMartToCsvParams_Validation = {
	project_name: {
		required: true
	}
};


DO.ExportDataMartToCsvParams_Defaults = {
	project_name:""
};

DO.ExportDataMartToCsvParams_Types = {
};


DO.ExportTaskToCsvParams = {
	project_name:"project_name"
};

DO.ExportTaskToCsvParams_Validation = {
	project_name: {
		required: true
	}
};


DO.ExportTaskToCsvParams_Defaults = {
	project_name:""
};

DO.ExportTaskToCsvParams_Types = {
};


DO.ImportModelCsvParams = {
	project_name:"project_name",
	filetype:"filetype",
	infile:"infile",
	commit_project_version:"commit_project_version"
};

DO.ImportModelCsvParams_Validation = {
	project_name: {
		required: true
	}
};


DO.ImportModelCsvParams_Defaults = {
	project_name:"",
	filetype:DO.CSV_MODEL_FILE_TYPE.ALL,
	infile:"",
	commit_project_version:false
};

DO.ImportModelCsvParams_Types = {
	filetype:"CSV_MODEL_FILE_TYPE"
};


DO.ImportMappingsCsvParams = {
	project_name:"project_name",
	filetype:"filetype",
	infile:"infile",
	commit_project_version:"commit_project_version"
};

DO.ImportMappingsCsvParams_Validation = {
	project_name: {
		required: true
	}
};


DO.ImportMappingsCsvParams_Defaults = {
	project_name:"",
	filetype:DO.CSV_MAPPING_FILE_TYPE.ALL,
	infile:"",
	commit_project_version:false
};

DO.ImportMappingsCsvParams_Types = {
	filetype:"CSV_MAPPING_FILE_TYPE"
};


DO.ImportDataMartsCsvParams = {
	project_name:"project_name",
	commit_project_version:"commit_project_version"
};

DO.ImportDataMartsCsvParams_Validation = {
	project_name: {
		required: true
	}
};


DO.ImportDataMartsCsvParams_Defaults = {
	project_name:"",
	commit_project_version:false
};

DO.ImportDataMartsCsvParams_Types = {
};


DO.ImportTaskCsvParams = {
	project_name:"project_name",
	filetype:"filetype",
	infile:"infile",
	commit_project_version:"commit_project_version"
};

DO.ImportTaskCsvParams_Validation = {
	project_name: {
		required: true
	}
};


DO.ImportTaskCsvParams_Defaults = {
	project_name:"",
	filetype:DO.CSV_DWH_TASK_FILE_TYPE.ALL,
	infile:"",
	commit_project_version:false
};

DO.ImportTaskCsvParams_Types = {
	filetype:"CSV_DWH_TASK_FILE_TYPE"
};


DO.UploadCsvZipForComparisonParams = {
	project_name:"project_name"
};

DO.UploadCsvZipForComparisonParams_Validation = {
	project_name: {
		required: true
	}
};


DO.UploadCsvZipForComparisonParams_Defaults = {
	project_name:""
};

DO.UploadCsvZipForComparisonParams_Types = {
};


DO.UploadCsvZipForComparisonRsp = {
	is_diff_found:"is_diff_found"
};

DO.UploadCsvZipForComparisonRsp_Validation = {
	is_diff_found: {
		required: true
	}
};


DO.UploadCsvZipForComparisonRsp_Defaults = {
	is_diff_found:false
};

DO.UploadCsvZipForComparisonRsp_Types = {
};


DO.DownloadCsvZipComparisonResultsParams = {
	project_name:"project_name"
};

DO.DownloadCsvZipComparisonResultsParams_Validation = {
};


DO.DownloadCsvZipComparisonResultsParams_Defaults = {
	project_name:""
};

DO.DownloadCsvZipComparisonResultsParams_Types = {
};


DO.ApplyCsvParams = {
	project_name:"project_name",
	commit_project_version:"commit_project_version"
};

DO.ApplyCsvParams_Validation = {
	project_name: {
		required: true
	}
};


DO.ApplyCsvParams_Defaults = {
	project_name:"",
	commit_project_version:false
};

DO.ApplyCsvParams_Types = {
};


DO.GenerateDocumentationParams = {
	project_name:"project_name",
	options:"options"
};

DO.GenerateDocumentationParams_Validation = {
};


DO.GenerateDocumentationParams_Defaults = {
	project_name:"",
	options:DO.GenerateDocumentationOption.MODEL
};

DO.GenerateDocumentationParams_Types = {
	options:"GenerateDocumentationOption"
};


DO.ErrorMartMappingInfo = {
	entity_id:"entity_id",
	mapping_id:"mapping_id",
	mapping_name:"mapping_name",
	landing_id:"landing_id",
	error_rows:"error_rows",
	entity_name:"entity_name",
	error_mart_database:"error_mart_database",
	error_mart_schema:"error_mart_schema",
	error_mart_table_name:"error_mart_table_name"
};

DO.ErrorMartMappingInfo_Validation = {
	entity_id: {
		number: true
	},
	mapping_id: {
		number: true
	},
	landing_id: {
		number: true
	},
	error_rows: {
		number: true
	}
};


DO.ErrorMartMappingInfo_Defaults = {
	entity_id:0,
	mapping_id:0,
	mapping_name:"",
	landing_id:0,
	error_rows:0,
	entity_name:"",
	error_mart_database:"",
	error_mart_schema:"",
	error_mart_table_name:""
};

DO.ErrorMartMappingInfo_Types = {
};


DO.EtlTaskMissingRefsImpactedEntities = {
	impacted_entity_id:"impacted_entity_id",
	impacted_entity_name:"impacted_entity_name",
	relation_id:"relation_id",
	relation_name:"relation_name",
	number_of_violations:"number_of_violations"
};

DO.EtlTaskMissingRefsImpactedEntities_Validation = {
	impacted_entity_id: {
		number: true
	},
	relation_id: {
		number: true
	},
	number_of_violations: {
		number: true
	}
};


DO.EtlTaskMissingRefsImpactedEntities_Defaults = {
	impacted_entity_id:0,
	impacted_entity_name:"",
	relation_id:0,
	relation_name:"",
	number_of_violations:0
};

DO.EtlTaskMissingRefsImpactedEntities_Types = {
};


DO.EtlTaskMissingRefs = {
	entity_name:"entity_name",
	entity_id:"entity_id",
	entity_missing_references_count:"entity_missing_references_count",
	impacted_entities_ids:"impacted_entities_ids"
};

DO.EtlTaskMissingRefs_Validation = {
	entity_id: {
		number: true
	},
	entity_missing_references_count: {
		number: true
	}
};


DO.EtlTaskMissingRefs_Defaults = {
	entity_name:"",
	entity_id:0,
	entity_missing_references_count:0,
	impacted_entities_ids:[]
};

DO.EtlTaskMissingRefs_Types = {
	impacted_entities_ids:"EtlTaskMissingRefsImpactedEntities"
};


DO.EntityStatus = {
	table_id:"table_id",
	table_name:"table_name",
	rows_affected:"rows_affected",
	start_time:"start_time",
	end_time:"end_time",
	entity_state:"entity_state"
};

DO.EntityStatus_Validation = {
	table_id: {
		number: true
	},
	rows_affected: {
		number: true
	}
};


DO.EntityStatus_Defaults = {
	table_id:0,
	table_name:"",
	rows_affected:0,
	start_time:"",
	end_time:"",
	entity_state:DO.EntityState.BEFORE_LOADING
};

DO.EntityStatus_Types = {
	entity_state:"EntityState"
};


DO.EtlTaskExecutorStatusDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	runtime_id:"runtime_id",
	start_time:"start_time",
	end_time:"end_time",
	state:"state",
	progress_percentage:"progress_percentage",
	message:"message",
	etl_id:"etl_id",
	etl_type:"etl_type",
	etl_status:"etl_status",
	etl_commands_count:"etl_commands_count",
	etl_commands_status:"etl_commands_status",
	total_inserts:"total_inserts",
	total_updates:"total_updates",
	total_deletes:"total_deletes",
	run_number:"run_number",
	total_error_rows:"total_error_rows",
	max_running_threads:"max_running_threads",
	exit_code:"exit_code",
	entity_details:"entity_details",
	error_mart_mapping_info:"error_mart_mapping_info",
	etl_task_missing_references:"etl_task_missing_references",
	entity_status:"entity_status",
	total_tables_updated:"total_tables_updated",
	task_stage:"task_stage",
	pid:"pid"
};

DO.EtlTaskExecutorStatusDto_Validation = {
	version: {
		number: true
	},
	runtime_id: {
		number: true
	},
	start_time: {
		number: true
	},
	end_time: {
		number: true
	},
	progress_percentage: {
		number: true
	},
	etl_id: {
		number: true
	},
	etl_commands_count: {
		number: true
	},
	total_inserts: {
		number: true
	},
	total_updates: {
		number: true
	},
	total_deletes: {
		number: true
	},
	run_number: {
		number: true
	},
	total_error_rows: {
		number: true
	},
	max_running_threads: {
		number: true
	},
	exit_code: {
		number: true
	},
	total_tables_updated: {
		number: true
	},
	pid: {
		number: true
	}
};


DO.EtlTaskExecutorStatusDto_Defaults = {
	$type:"EtlTaskExecutorStatusDto",
	metadata:null,
	name:"",
	version:0,
	runtime_id:0,
	start_time:0,
	end_time:0,
	state:DO.ExecutionState.UNKNOWN,
	progress_percentage:0,
	message:"",
	etl_id:0,
	etl_type:DO.ETLType.None,
	etl_status:DO.ETLStatus.NOT_AVAILABLE,
	etl_commands_count:0,
	etl_commands_status:null,
	total_inserts:0,
	total_updates:0,
	total_deletes:0,
	run_number:0,
	total_error_rows:0,
	max_running_threads:10,
	exit_code:0,
	entity_details:[],
	error_mart_mapping_info:[],
	etl_task_missing_references:[],
	entity_status:[],
	total_tables_updated:0,
	task_stage:DO.ETLStage.FULL_LOAD,
	pid:0
};

DO.EtlTaskExecutorStatusDto_Types = {
	metadata:"DTObjectMetaData",
	state:"ExecutionState",
	etl_type:"ETLType",
	etl_status:"ETLStatus",
	etl_commands_status:"ETLCommandsStatus",
	entity_details:"PILogData",
	error_mart_mapping_info:"ErrorMartMappingInfo",
	etl_task_missing_references:"EtlTaskMissingRefs",
	entity_status:"EntityStatus",
	task_stage:"ETLStage"
};


DO.RelatedKeys = {
	related_key:"related_key",
	impacted_entities_ids:"impacted_entities_ids"
};

DO.RelatedKeys_Validation = {
};


DO.RelatedKeys_Defaults = {
	related_key:[],
	impacted_entities_ids:[]
};

DO.RelatedKeys_Types = {
	impacted_entities_ids:"EtlTaskMissingRefsImpactedEntities"
};


DO.ReplicateTaskExecutorStatusDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	runtime_id:"runtime_id",
	start_time:"start_time",
	end_time:"end_time",
	state:"state",
	progress_percentage:"progress_percentage",
	message:"message",
	full_load_counters:"full_load_counters",
	task_state:"task_state",
	stop_reason:"stop_reason",
	replicate_task_type:"replicate_task_type",
	full_load_completed:"full_load_completed",
	cdc_applied_insert_count:"cdc_applied_insert_count",
	cdc_applied_update_count:"cdc_applied_update_count",
	cdc_applied_delete_count:"cdc_applied_delete_count",
	replicate_server_name:"replicate_server_name",
	replicate_task_name:"replicate_task_name"
};

DO.ReplicateTaskExecutorStatusDto_Validation = {
	version: {
		number: true
	},
	runtime_id: {
		number: true
	},
	start_time: {
		number: true
	},
	end_time: {
		number: true
	},
	progress_percentage: {
		number: true
	},
	cdc_applied_insert_count: {
		number: true
	},
	cdc_applied_update_count: {
		number: true
	},
	cdc_applied_delete_count: {
		number: true
	}
};


DO.ReplicateTaskExecutorStatusDto_Defaults = {
	$type:"ReplicateTaskExecutorStatusDto",
	metadata:null,
	name:"",
	version:0,
	runtime_id:0,
	start_time:0,
	end_time:0,
	state:DO.ExecutionState.UNKNOWN,
	progress_percentage:0,
	message:"",
	full_load_counters:null,
	task_state:DO.ReplicateTaskState.STOPPED,
	stop_reason:DO.ReplicateTaskStopReason.NORMAL,
	replicate_task_type:DO.ReplicateTaskType.FULL_LOAD,
	full_load_completed:false,
	cdc_applied_insert_count:0,
	cdc_applied_update_count:0,
	cdc_applied_delete_count:0,
	replicate_server_name:"",
	replicate_task_name:""
};

DO.ReplicateTaskExecutorStatusDto_Types = {
	metadata:"DTObjectMetaData",
	state:"ExecutionState",
	full_load_counters:"ReplicateTaskFullLoadCounters",
	task_state:"ReplicateTaskState",
	stop_reason:"ReplicateTaskStopReason",
	replicate_task_type:"ReplicateTaskType"
};


DO.ReplicateTaskFullLoadCounters = {
	full_load_canceled_tables_count:"full_load_canceled_tables_count",
	full_load_completed_tables_count:"full_load_completed_tables_count",
	full_load_error_tables_count:"full_load_error_tables_count",
	full_load_Estimated_Records_Count_For_All_Tables:"full_load_Estimated_Records_Count_For_All_Tables",
	Full_Load_Loading_Tables_Count:"Full_Load_Loading_Tables_Count",
	Full_Load_Queued_Tables_Count:"Full_Load_Queued_Tables_Count",
	Full_Load_Total_Record_Transferred:"Full_Load_Total_Record_Transferred"
};

DO.ReplicateTaskFullLoadCounters_Validation = {
	full_load_canceled_tables_count: {
		number: true
	},
	full_load_completed_tables_count: {
		number: true
	},
	full_load_error_tables_count: {
		number: true
	},
	full_load_Estimated_Records_Count_For_All_Tables: {
		number: true
	},
	Full_Load_Loading_Tables_Count: {
		number: true
	},
	Full_Load_Queued_Tables_Count: {
		number: true
	},
	Full_Load_Total_Record_Transferred: {
		number: true
	}
};


DO.ReplicateTaskFullLoadCounters_Defaults = {
	full_load_canceled_tables_count:0,
	full_load_completed_tables_count:0,
	full_load_error_tables_count:0,
	full_load_Estimated_Records_Count_For_All_Tables:0,
	Full_Load_Loading_Tables_Count:0,
	Full_Load_Queued_Tables_Count:0,
	Full_Load_Total_Record_Transferred:0
};

DO.ReplicateTaskFullLoadCounters_Types = {
};


DO.CommandTaskExecutorStatusDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	runtime_id:"runtime_id",
	start_time:"start_time",
	end_time:"end_time",
	state:"state",
	progress_percentage:"progress_percentage",
	message:"message",
	exit_code:"exit_code",
	exit_message:"exit_message"
};

DO.CommandTaskExecutorStatusDto_Validation = {
	version: {
		number: true
	},
	runtime_id: {
		number: true
	},
	start_time: {
		number: true
	},
	end_time: {
		number: true
	},
	progress_percentage: {
		number: true
	},
	exit_code: {
		number: true
	},
	exit_message: {
		number: true
	}
};


DO.CommandTaskExecutorStatusDto_Defaults = {
	$type:"CommandTaskExecutorStatusDto",
	metadata:null,
	name:"",
	version:0,
	runtime_id:0,
	start_time:0,
	end_time:0,
	state:DO.ExecutionState.UNKNOWN,
	progress_percentage:0,
	message:"",
	exit_code:0,
	exit_message:0
};

DO.CommandTaskExecutorStatusDto_Types = {
	metadata:"DTObjectMetaData",
	state:"ExecutionState"
};


DO.CommandTaskInfoDto = {
	$type:"$type",
	metadata:"metadata",
	name:"name",
	version:"version",
	description:"description",
	file_name:"file_name",
	arguments:"arguments",
	run_under_context:"run_under_context",
	security_context:"security_context"
};

DO.CommandTaskInfoDto_Validation = {
	version: {
		number: true
	},
	file_name: {
		pattern: '(?i)^[a-z0-9][-_0-9a-z]*(\\.[-_0-9a-z]*)?$'
	}
};


DO.CommandTaskInfoDto_Defaults = {
	$type:"CommandTaskInfoDto",
	metadata:null,
	name:"",
	version:0,
	description:"",
	file_name:"",
	arguments:"",
	run_under_context:false,
	security_context:null
};

DO.CommandTaskInfoDto_Types = {
	metadata:"DTObjectMetaData",
	security_context:"OSSecurityContext"
};


DO.ComposeApi = {
	msg_name:"msg_name"
};

DO.ComposeApi_Validation = {
};


DO.ComposeApi_Defaults = {
	msg_name:""
};

DO.ComposeApi_Types = {
};


DO.ValidationAttributeMessages = {
	project_environment:"project_environment",
	custom_etldto:"custom_etldto",
	commit_version_control_req:"commit_version_control_req",
	command_task_info_dto:"command_task_info_dto"
};

DO.ValidationAttributeMessages_Validation = {
};


DO.ValidationAttributeMessages_Defaults = {
	project_environment:null,
	custom_etldto:null,
	commit_version_control_req:null,
	command_task_info_dto:null
};

DO.ValidationAttributeMessages_Types = {
	project_environment:"ProjectEnvironment",
	custom_etldto:"CustomETLDto",
	commit_version_control_req:"CommitVersionControlReq",
	command_task_info_dto:"CommandTaskInfoDto"
};


DO.EncryptAttributeMessages = {
	big_query_db_settings:"big_query_db_settings",
	sslconfiguration:"sslconfiguration",
	database_dto:"database_dto",
	replicate_server_configuration_dto:"replicate_server_configuration_dto",
	version_control_dto:"version_control_dto"
};

DO.EncryptAttributeMessages_Validation = {
};


DO.EncryptAttributeMessages_Defaults = {
	big_query_db_settings:null,
	sslconfiguration:null,
	database_dto:null,
	replicate_server_configuration_dto:null,
	version_control_dto:null
};

DO.EncryptAttributeMessages_Types = {
	big_query_db_settings:"BigQueryDbSettings",
	sslconfiguration:"SSLConfiguration",
	database_dto:"DatabaseDto",
	replicate_server_configuration_dto:"ReplicateServerConfigurationDto",
	version_control_dto:"VersionControlDto"
};


DO.RestMethodAttributeMessages = {
	generate_upgrade_scripts_params:"generate_upgrade_scripts_params",
	adjust_dl_project_deployment_for_migration_params:"adjust_dl_project_deployment_for_migration_params",
	create_dldata_migration_script_params:"create_dldata_migration_script_params",
	list_projects_params:"list_projects_params",
	create_project_params:"create_project_params",
	copy_project_params:"copy_project_params",
	delete_project_params:"delete_project_params",
	close_project_params:"close_project_params",
	get_project_info_params:"get_project_info_params",
	get_current_call_messages_params:"get_current_call_messages_params",
	reset_project_params:"reset_project_params",
	get_transformation_usage_params:"get_transformation_usage_params",
	rename_reusable_transformation_params:"rename_reusable_transformation_params",
	create_data_warehouse_params:"create_data_warehouse_params",
	generate_dwhetls_params:"generate_dwhetls_params",
	get_etls_params:"get_etls_params",
	stop_etlparams:"stop_etlparams",
	populate_etlset_params:"populate_etlset_params",
	update_etlparams:"update_etlparams",
	copy_etlparams:"copy_etlparams",
	delete_etlparams:"delete_etlparams",
	get_existing_pilogs_params:"get_existing_pilogs_params",
	inspect_etlparams:"inspect_etlparams",
	update_inspect_etlparams:"update_inspect_etlparams",
	inspect_etlflow_params:"inspect_etlflow_params",
	get_runner_log_params:"get_runner_log_params",
	list_custom_etlparams:"list_custom_etlparams",
	add_custom_etlparams:"add_custom_etlparams",
	delete_custom_etlparams:"delete_custom_etlparams",
	get_custom_etltables_params:"get_custom_etltables_params",
	get_custom_etlcolumns_params:"get_custom_etlcolumns_params",
	get_dwhtables_params:"get_dwhtables_params",
	datawarehouse_get_database_info_params:"datawarehouse_get_database_info_params",
	recreate_views_params:"recreate_views_params",
	drop_tables_params:"drop_tables_params",
	clean_tables_params:"clean_tables_params",
	put_replicate_server_settings_params:"put_replicate_server_settings_params",
	delete_replicate_server_settings_params:"delete_replicate_server_settings_params",
	get_replicate_server_settings_params:"get_replicate_server_settings_params",
	get_replicate_servers_params:"get_replicate_servers_params",
	get_replicate_tasks_params:"get_replicate_tasks_params",
	test_replicate_connection_params:"test_replicate_connection_params",
	list_databases_params:"list_databases_params",
	get_database_params:"get_database_params",
	add_database_params:"add_database_params",
	add_dwh_database_params:"add_dwh_database_params",
	delete_database_params:"delete_database_params",
	delete_dwh_database_params:"delete_dwh_database_params",
	put_work_flow_params:"put_work_flow_params",
	update_database_params:"update_database_params",
	update_dwh_database_params:"update_dwh_database_params",
	list_database_providers_params:"list_database_providers_params",
	add_tables_to_model_params:"add_tables_to_model_params",
	get_database_tables_params:"get_database_tables_params",
	get_database_schemas_params:"get_database_schemas_params",
	clear_dbmeta_data_params:"clear_dbmeta_data_params",
	fill_storage_metadata_from_database_params:"fill_storage_metadata_from_database_params",
	get_max_name_length_params:"get_max_name_length_params",
	test_connection_params:"test_connection_params",
	test_remote_connection_params:"test_remote_connection_params",
	test_connection_by_id_params:"test_connection_by_id_params",
	list_catalogs_params:"list_catalogs_params",
	list_schemas_params:"list_schemas_params",
	list_regions_params:"list_regions_params",
	list_snowflake_warehouses_params:"list_snowflake_warehouses_params",
	list_table_columns_params:"list_table_columns_params",
	list_describe_query_columns_params:"list_describe_query_columns_params",
	commit_version_control_params:"commit_version_control_params",
	get_revision_history_version_control_params:"get_revision_history_version_control_params",
	revert_to_revision_params:"revert_to_revision_params",
	download_revision_to_package_params:"download_revision_to_package_params",
	create_deployment_package_params:"create_deployment_package_params",
	upload_deployment_package_params:"upload_deployment_package_params",
	deploy_deployment_package_params:"deploy_deployment_package_params",
	create_diagnostics_package_params:"create_diagnostics_package_params",
	get_project_status_params:"get_project_status_params",
	add_entity_params:"add_entity_params",
	update_entity_params:"update_entity_params",
	delete_entity_params:"delete_entity_params",
	delete_domain_attributes_params:"delete_domain_attributes_params",
	delete_entities_params:"delete_entities_params",
	add_table_column_params:"add_table_column_params",
	add_table_relation_params:"add_table_relation_params",
	update_table_column_params:"update_table_column_params",
	update_table_columns_params:"update_table_columns_params",
	duplicate_table_column_to_hub_and_sat_params:"duplicate_table_column_to_hub_and_sat_params",
	copy_entity_params:"copy_entity_params",
	delete_table_columns_params:"delete_table_columns_params",
	add_domain_attribute_params:"add_domain_attribute_params",
	update_domain_attribute_params:"update_domain_attribute_params",
	get_model_attributes_references_params:"get_model_attributes_references_params",
	add_date_time_model_params:"add_date_time_model_params",
	get_dwhlineage_for_entity_params:"get_dwhlineage_for_entity_params",
	get_dwhlineage_for_attribute_params:"get_dwhlineage_for_attribute_params",
	get_dmlineage_for_entity_params:"get_dmlineage_for_entity_params",
	get_dmlineage_for_attribute_params:"get_dmlineage_for_attribute_params",
	get_physical_dmtables_params:"get_physical_dmtables_params",
	get_select_physical_dmtable_stmt_params:"get_select_physical_dmtable_stmt_params",
	get_physical_entities_params:"get_physical_entities_params",
	get_physical_entity_meta_data_params:"get_physical_entity_meta_data_params",
	get_dm_physical_entity_meta_data_params:"get_dm_physical_entity_meta_data_params",
	get_dm_physical_properties_params:"get_dm_physical_properties_params",
	get_physical_entity_select_statement_params:"get_physical_entity_select_statement_params",
	get_dlviews_entity_select_statement_params:"get_dlviews_entity_select_statement_params",
	generate_landing_script_params:"generate_landing_script_params",
	get_entities_params:"get_entities_params",
	set_backdating_options_params:"set_backdating_options_params",
	import_entities_from_project_params:"import_entities_from_project_params",
	get_entity_mappings_params:"get_entity_mappings_params",
	get_model_tree_nodes_params:"get_model_tree_nodes_params",
	get_domain_attributes_params:"get_domain_attributes_params",
	get_table_columns_params:"get_table_columns_params",
	get_erwin_tables_params:"get_erwin_tables_params",
	import_from_erwin_params:"import_from_erwin_params",
	check_model_params:"check_model_params",
	check_etlparams:"check_etlparams",
	get_mappings_params:"get_mappings_params",
	get_mapping_fields_params:"get_mapping_fields_params",
	get_staging_columns_params:"get_staging_columns_params",
	add_mapping_params:"add_mapping_params",
	delete_mapping_params:"delete_mapping_params",
	update_mapping_params:"update_mapping_params",
	generate_dmaetls_params:"generate_dmaetls_params",
	prepare_all_data_marts_params:"prepare_all_data_marts_params",
	list_data_marts_params:"list_data_marts_params",
	get_dmafor_display_params:"get_dmafor_display_params",
	get_aggregated_fact_columns_params:"get_aggregated_fact_columns_params",
	get_dim_star_schemas_params:"get_dim_star_schemas_params",
	add_dimesnion_to_star_schemas_params:"add_dimesnion_to_star_schemas_params",
	get_dmatree_nodes_params:"get_dmatree_nodes_params",
	create_star_schema_params:"create_star_schema_params",
	create_dimension_params:"create_dimension_params",
	copy_dimensions_params:"copy_dimensions_params",
	delete_star_schema_params:"delete_star_schema_params",
	delete_dimension_params:"delete_dimension_params",
	create_data_mart_params:"create_data_mart_params",
	delete_data_mart_params:"delete_data_mart_params",
	update_data_mart_params:"update_data_mart_params",
	create_physical_dmaparams:"create_physical_dmaparams",
	drop_data_mart_tables_params:"drop_data_mart_tables_params",
	clean_data_mart_tables_params:"clean_data_mart_tables_params",
	get_dim_facts_for_edit_params:"get_dim_facts_for_edit_params",
	edit_data_mart_params:"edit_data_mart_params",
	get_transaction_fact_tree_params:"get_transaction_fact_tree_params",
	get_dmacolumns_params:"get_dmacolumns_params",
	check_data_mart_params:"check_data_mart_params",
	inspect_table_params:"inspect_table_params",
	inspect_query_params:"inspect_query_params",
	inspect_lookup_params:"inspect_lookup_params",
	inspect_populate_dwhparams:"inspect_populate_dwhparams",
	get_mapping_error_rows_data_params:"get_mapping_error_rows_data_params",
	inspect_populate_dmparams:"inspect_populate_dmparams",
	adjust_dwhparams:"adjust_dwhparams",
	compare_dwhparams:"compare_dwhparams",
	adjust_dmparams:"adjust_dmparams",
	compare_dmparams:"compare_dmparams",
	reload_dmparams:"reload_dmparams",
	get_project_monitor_data_params:"get_project_monitor_data_params",
	get_project_task_monitor_data_params:"get_project_task_monitor_data_params",
	fact_dim_denormalized_tables_params:"fact_dim_denormalized_tables_params",
	inspect_related_key_params:"inspect_related_key_params",
	add_entity_table_mapping_params:"add_entity_table_mapping_params",
	automatic_schema_evolution_scan_params:"automatic_schema_evolution_scan_params",
	automatic_schema_evolution_apply_params:"automatic_schema_evolution_apply_params",
	delete_entity_table_mapping_params:"delete_entity_table_mapping_params",
	get_compose_task_info_params:"get_compose_task_info_params",
	get_entity_table_mapping_params:"get_entity_table_mapping_params",
	get_un_mapped_entities_params:"get_un_mapped_entities_params",
	set_entities_to_map_params:"set_entities_to_map_params",
	get_global_entity_attributes_params:"get_global_entity_attributes_params",
	get_attribute_column_mapping_params:"get_attribute_column_mapping_params",
	add_attribute_column_mapping_params:"add_attribute_column_mapping_params",
	delete_attribute_column_mapping_params:"delete_attribute_column_mapping_params",
	get_expression_editor_parameters_params:"get_expression_editor_parameters_params",
	describe_expression_params:"describe_expression_params",
	test_expression_params:"test_expression_params",
	ddl_get_script_data_params:"ddl_get_script_data_params",
	script_list_files_params:"script_list_files_params",
	ddl_download_script_file_params:"ddl_download_script_file_params",
	evaluate_expression_params:"evaluate_expression_params",
	import_project_repository_params:"import_project_repository_params",
	export_repository_without_env_specifics_params:"export_repository_without_env_specifics_params",
	get_profile_table_params:"get_profile_table_params",
	get_inspect_profiling_table_params:"get_inspect_profiling_table_params",
	generate_watermark_scripts_params:"generate_watermark_scripts_params",
	reset_watermark_params:"reset_watermark_params",
	delete_environment_variable_params:"delete_environment_variable_params",
	apply_environment_variables_params:"apply_environment_variables_params",
	set_environment_variables_params:"set_environment_variables_params",
	get_environment_variables_file_params:"get_environment_variables_file_params",
	set_environment_variables_file_params:"set_environment_variables_file_params",
	export_model_to_csv_params:"export_model_to_csv_params",
	export_mapping_to_csv_params:"export_mapping_to_csv_params",
	export_data_mart_to_csv_params:"export_data_mart_to_csv_params",
	export_task_to_csv_params:"export_task_to_csv_params",
	import_model_csv_params:"import_model_csv_params",
	import_mappings_csv_params:"import_mappings_csv_params",
	import_data_marts_csv_params:"import_data_marts_csv_params",
	import_task_csv_params:"import_task_csv_params",
	upload_csv_zip_for_comparison_params:"upload_csv_zip_for_comparison_params",
	download_csv_zip_comparison_results_params:"download_csv_zip_comparison_results_params",
	apply_csv_params:"apply_csv_params",
	generate_documentation_params:"generate_documentation_params"
};

DO.RestMethodAttributeMessages_Validation = {
};


DO.RestMethodAttributeMessages_Defaults = {
	generate_upgrade_scripts_params:null,
	adjust_dl_project_deployment_for_migration_params:null,
	create_dldata_migration_script_params:null,
	list_projects_params:null,
	create_project_params:null,
	copy_project_params:null,
	delete_project_params:null,
	close_project_params:null,
	get_project_info_params:null,
	get_current_call_messages_params:null,
	reset_project_params:null,
	get_transformation_usage_params:null,
	rename_reusable_transformation_params:null,
	create_data_warehouse_params:null,
	generate_dwhetls_params:null,
	get_etls_params:null,
	stop_etlparams:null,
	populate_etlset_params:null,
	update_etlparams:null,
	copy_etlparams:null,
	delete_etlparams:null,
	get_existing_pilogs_params:null,
	inspect_etlparams:null,
	update_inspect_etlparams:null,
	inspect_etlflow_params:null,
	get_runner_log_params:null,
	list_custom_etlparams:null,
	add_custom_etlparams:null,
	delete_custom_etlparams:null,
	get_custom_etltables_params:null,
	get_custom_etlcolumns_params:null,
	get_dwhtables_params:null,
	datawarehouse_get_database_info_params:null,
	recreate_views_params:null,
	drop_tables_params:null,
	clean_tables_params:null,
	put_replicate_server_settings_params:null,
	delete_replicate_server_settings_params:null,
	get_replicate_server_settings_params:null,
	get_replicate_servers_params:null,
	get_replicate_tasks_params:null,
	test_replicate_connection_params:null,
	list_databases_params:null,
	get_database_params:null,
	add_database_params:null,
	add_dwh_database_params:null,
	delete_database_params:null,
	delete_dwh_database_params:null,
	put_work_flow_params:null,
	update_database_params:null,
	update_dwh_database_params:null,
	list_database_providers_params:null,
	add_tables_to_model_params:null,
	get_database_tables_params:null,
	get_database_schemas_params:null,
	clear_dbmeta_data_params:null,
	fill_storage_metadata_from_database_params:null,
	get_max_name_length_params:null,
	test_connection_params:null,
	test_remote_connection_params:null,
	test_connection_by_id_params:null,
	list_catalogs_params:null,
	list_schemas_params:null,
	list_regions_params:null,
	list_snowflake_warehouses_params:null,
	list_table_columns_params:null,
	list_describe_query_columns_params:null,
	commit_version_control_params:null,
	get_revision_history_version_control_params:null,
	revert_to_revision_params:null,
	download_revision_to_package_params:null,
	create_deployment_package_params:null,
	upload_deployment_package_params:null,
	deploy_deployment_package_params:null,
	create_diagnostics_package_params:null,
	get_project_status_params:null,
	add_entity_params:null,
	update_entity_params:null,
	delete_entity_params:null,
	delete_domain_attributes_params:null,
	delete_entities_params:null,
	add_table_column_params:null,
	add_table_relation_params:null,
	update_table_column_params:null,
	update_table_columns_params:null,
	duplicate_table_column_to_hub_and_sat_params:null,
	copy_entity_params:null,
	delete_table_columns_params:null,
	add_domain_attribute_params:null,
	update_domain_attribute_params:null,
	get_model_attributes_references_params:null,
	add_date_time_model_params:null,
	get_dwhlineage_for_entity_params:null,
	get_dwhlineage_for_attribute_params:null,
	get_dmlineage_for_entity_params:null,
	get_dmlineage_for_attribute_params:null,
	get_physical_dmtables_params:null,
	get_select_physical_dmtable_stmt_params:null,
	get_physical_entities_params:null,
	get_physical_entity_meta_data_params:null,
	get_dm_physical_entity_meta_data_params:null,
	get_dm_physical_properties_params:null,
	get_physical_entity_select_statement_params:null,
	get_dlviews_entity_select_statement_params:null,
	generate_landing_script_params:null,
	get_entities_params:null,
	set_backdating_options_params:null,
	import_entities_from_project_params:null,
	get_entity_mappings_params:null,
	get_model_tree_nodes_params:null,
	get_domain_attributes_params:null,
	get_table_columns_params:null,
	get_erwin_tables_params:null,
	import_from_erwin_params:null,
	check_model_params:null,
	check_etlparams:null,
	get_mappings_params:null,
	get_mapping_fields_params:null,
	get_staging_columns_params:null,
	add_mapping_params:null,
	delete_mapping_params:null,
	update_mapping_params:null,
	generate_dmaetls_params:null,
	prepare_all_data_marts_params:null,
	list_data_marts_params:null,
	get_dmafor_display_params:null,
	get_aggregated_fact_columns_params:null,
	get_dim_star_schemas_params:null,
	add_dimesnion_to_star_schemas_params:null,
	get_dmatree_nodes_params:null,
	create_star_schema_params:null,
	create_dimension_params:null,
	copy_dimensions_params:null,
	delete_star_schema_params:null,
	delete_dimension_params:null,
	create_data_mart_params:null,
	delete_data_mart_params:null,
	update_data_mart_params:null,
	create_physical_dmaparams:null,
	drop_data_mart_tables_params:null,
	clean_data_mart_tables_params:null,
	get_dim_facts_for_edit_params:null,
	edit_data_mart_params:null,
	get_transaction_fact_tree_params:null,
	get_dmacolumns_params:null,
	check_data_mart_params:null,
	inspect_table_params:null,
	inspect_query_params:null,
	inspect_lookup_params:null,
	inspect_populate_dwhparams:null,
	get_mapping_error_rows_data_params:null,
	inspect_populate_dmparams:null,
	adjust_dwhparams:null,
	compare_dwhparams:null,
	adjust_dmparams:null,
	compare_dmparams:null,
	reload_dmparams:null,
	get_project_monitor_data_params:null,
	get_project_task_monitor_data_params:null,
	fact_dim_denormalized_tables_params:null,
	inspect_related_key_params:null,
	add_entity_table_mapping_params:null,
	automatic_schema_evolution_scan_params:null,
	automatic_schema_evolution_apply_params:null,
	delete_entity_table_mapping_params:null,
	get_compose_task_info_params:null,
	get_entity_table_mapping_params:null,
	get_un_mapped_entities_params:null,
	set_entities_to_map_params:null,
	get_global_entity_attributes_params:null,
	get_attribute_column_mapping_params:null,
	add_attribute_column_mapping_params:null,
	delete_attribute_column_mapping_params:null,
	get_expression_editor_parameters_params:null,
	describe_expression_params:null,
	test_expression_params:null,
	ddl_get_script_data_params:null,
	script_list_files_params:null,
	ddl_download_script_file_params:null,
	evaluate_expression_params:null,
	import_project_repository_params:null,
	export_repository_without_env_specifics_params:null,
	get_profile_table_params:null,
	get_inspect_profiling_table_params:null,
	generate_watermark_scripts_params:null,
	reset_watermark_params:null,
	delete_environment_variable_params:null,
	apply_environment_variables_params:null,
	set_environment_variables_params:null,
	get_environment_variables_file_params:null,
	set_environment_variables_file_params:null,
	export_model_to_csv_params:null,
	export_mapping_to_csv_params:null,
	export_data_mart_to_csv_params:null,
	export_task_to_csv_params:null,
	import_model_csv_params:null,
	import_mappings_csv_params:null,
	import_data_marts_csv_params:null,
	import_task_csv_params:null,
	upload_csv_zip_for_comparison_params:null,
	download_csv_zip_comparison_results_params:null,
	apply_csv_params:null,
	generate_documentation_params:null
};

DO.RestMethodAttributeMessages_Types = {
	generate_upgrade_scripts_params:"GenerateUpgradeScriptsParams",
	adjust_dl_project_deployment_for_migration_params:"AdjustDlProjectDeploymentForMigrationParams",
	create_dldata_migration_script_params:"CreateDLDataMigrationScriptParams",
	list_projects_params:"ListProjectsParams",
	create_project_params:"CreateProjectParams",
	copy_project_params:"CopyProjectParams",
	delete_project_params:"DeleteProjectParams",
	close_project_params:"CloseProjectParams",
	get_project_info_params:"GetProjectInfoParams",
	get_current_call_messages_params:"GetCurrentCallMessagesParams",
	reset_project_params:"ResetProjectParams",
	get_transformation_usage_params:"GetTransformationUsageParams",
	rename_reusable_transformation_params:"RenameReusableTransformationParams",
	create_data_warehouse_params:"CreateDataWarehouseParams",
	generate_dwhetls_params:"GenerateDWHETLsParams",
	get_etls_params:"GetETLsParams",
	stop_etlparams:"StopETLParams",
	populate_etlset_params:"PopulateETLSetParams",
	update_etlparams:"UpdateETLParams",
	copy_etlparams:"CopyETLParams",
	delete_etlparams:"DeleteETLParams",
	get_existing_pilogs_params:"GetExistingPILogsParams",
	inspect_etlparams:"InspectETLParams",
	update_inspect_etlparams:"UpdateInspectETLParams",
	inspect_etlflow_params:"InspectETLFlowParams",
	get_runner_log_params:"GetRunnerLogParams",
	list_custom_etlparams:"ListCustomETLParams",
	add_custom_etlparams:"AddCustomETLParams",
	delete_custom_etlparams:"DeleteCustomETLParams",
	get_custom_etltables_params:"GetCustomETLTablesParams",
	get_custom_etlcolumns_params:"GetCustomETLColumnsParams",
	get_dwhtables_params:"GetDWHTablesParams",
	datawarehouse_get_database_info_params:"DatawarehouseGetDatabaseInfoParams",
	recreate_views_params:"RecreateViewsParams",
	drop_tables_params:"DropTablesParams",
	clean_tables_params:"CleanTablesParams",
	put_replicate_server_settings_params:"PutReplicateServerSettingsParams",
	delete_replicate_server_settings_params:"DeleteReplicateServerSettingsParams",
	get_replicate_server_settings_params:"GetReplicateServerSettingsParams",
	get_replicate_servers_params:"GetReplicateServersParams",
	get_replicate_tasks_params:"GetReplicateTasksParams",
	test_replicate_connection_params:"TestReplicateConnectionParams",
	list_databases_params:"ListDatabasesParams",
	get_database_params:"GetDatabaseParams",
	add_database_params:"AddDatabaseParams",
	add_dwh_database_params:"AddDwhDatabaseParams",
	delete_database_params:"DeleteDatabaseParams",
	delete_dwh_database_params:"DeleteDwhDatabaseParams",
	put_work_flow_params:"PutWorkFlowParams",
	update_database_params:"UpdateDatabaseParams",
	update_dwh_database_params:"UpdateDwhDatabaseParams",
	list_database_providers_params:"ListDatabaseProvidersParams",
	add_tables_to_model_params:"AddTablesToModelParams",
	get_database_tables_params:"GetDatabaseTablesParams",
	get_database_schemas_params:"GetDatabaseSchemasParams",
	clear_dbmeta_data_params:"ClearDBMetaDataParams",
	fill_storage_metadata_from_database_params:"FillStorageMetadataFromDatabaseParams",
	get_max_name_length_params:"GetMaxNameLengthParams",
	test_connection_params:"TestConnectionParams",
	test_remote_connection_params:"TestRemoteConnectionParams",
	test_connection_by_id_params:"TestConnectionByIdParams",
	list_catalogs_params:"ListCatalogsParams",
	list_schemas_params:"ListSchemasParams",
	list_regions_params:"ListRegionsParams",
	list_snowflake_warehouses_params:"ListSnowflakeWarehousesParams",
	list_table_columns_params:"ListTableColumnsParams",
	list_describe_query_columns_params:"ListDescribeQueryColumnsParams",
	commit_version_control_params:"CommitVersionControlParams",
	get_revision_history_version_control_params:"GetRevisionHistoryVersionControlParams",
	revert_to_revision_params:"RevertToRevisionParams",
	download_revision_to_package_params:"DownloadRevisionToPackageParams",
	create_deployment_package_params:"CreateDeploymentPackageParams",
	upload_deployment_package_params:"UploadDeploymentPackageParams",
	deploy_deployment_package_params:"DeployDeploymentPackageParams",
	create_diagnostics_package_params:"CreateDiagnosticsPackageParams",
	get_project_status_params:"GetProjectStatusParams",
	add_entity_params:"AddEntityParams",
	update_entity_params:"UpdateEntityParams",
	delete_entity_params:"DeleteEntityParams",
	delete_domain_attributes_params:"DeleteDomainAttributesParams",
	delete_entities_params:"DeleteEntitiesParams",
	add_table_column_params:"AddTableColumnParams",
	add_table_relation_params:"AddTableRelationParams",
	update_table_column_params:"UpdateTableColumnParams",
	update_table_columns_params:"UpdateTableColumnsParams",
	duplicate_table_column_to_hub_and_sat_params:"DuplicateTableColumnToHubAndSatParams",
	copy_entity_params:"CopyEntityParams",
	delete_table_columns_params:"DeleteTableColumnsParams",
	add_domain_attribute_params:"AddDomainAttributeParams",
	update_domain_attribute_params:"UpdateDomainAttributeParams",
	get_model_attributes_references_params:"GetModelAttributesReferencesParams",
	add_date_time_model_params:"AddDateTimeModelParams",
	get_dwhlineage_for_entity_params:"GetDWHLineageForEntityParams",
	get_dwhlineage_for_attribute_params:"GetDWHLineageForAttributeParams",
	get_dmlineage_for_entity_params:"GetDMLineageForEntityParams",
	get_dmlineage_for_attribute_params:"GetDMLineageForAttributeParams",
	get_physical_dmtables_params:"GetPhysicalDMTablesParams",
	get_select_physical_dmtable_stmt_params:"GetSelectPhysicalDMTableStmtParams",
	get_physical_entities_params:"GetPhysicalEntitiesParams",
	get_physical_entity_meta_data_params:"GetPhysicalEntityMetaDataParams",
	get_dm_physical_entity_meta_data_params:"GetDmPhysicalEntityMetaDataParams",
	get_dm_physical_properties_params:"GetDmPhysicalPropertiesParams",
	get_physical_entity_select_statement_params:"GetPhysicalEntitySelectStatementParams",
	get_dlviews_entity_select_statement_params:"GetDLViewsEntitySelectStatementParams",
	generate_landing_script_params:"GenerateLandingScriptParams",
	get_entities_params:"GetEntitiesParams",
	set_backdating_options_params:"SetBackdatingOptionsParams",
	import_entities_from_project_params:"ImportEntitiesFromProjectParams",
	get_entity_mappings_params:"GetEntityMappingsParams",
	get_model_tree_nodes_params:"GetModelTreeNodesParams",
	get_domain_attributes_params:"GetDomainAttributesParams",
	get_table_columns_params:"GetTableColumnsParams",
	get_erwin_tables_params:"GetErwinTablesParams",
	import_from_erwin_params:"ImportFromErwinParams",
	check_model_params:"CheckModelParams",
	check_etlparams:"CheckETLParams",
	get_mappings_params:"GetMappingsParams",
	get_mapping_fields_params:"GetMappingFieldsParams",
	get_staging_columns_params:"GetStagingColumnsParams",
	add_mapping_params:"AddMappingParams",
	delete_mapping_params:"DeleteMappingParams",
	update_mapping_params:"UpdateMappingParams",
	generate_dmaetls_params:"GenerateDMAEtlsParams",
	prepare_all_data_marts_params:"PrepareAllDataMartsParams",
	list_data_marts_params:"ListDataMartsParams",
	get_dmafor_display_params:"GetDMAForDisplayParams",
	get_aggregated_fact_columns_params:"GetAggregatedFactColumnsParams",
	get_dim_star_schemas_params:"GetDimStarSchemasParams",
	add_dimesnion_to_star_schemas_params:"AddDimesnionToStarSchemasParams",
	get_dmatree_nodes_params:"GetDMATreeNodesParams",
	create_star_schema_params:"CreateStarSchemaParams",
	create_dimension_params:"CreateDimensionParams",
	copy_dimensions_params:"CopyDimensionsParams",
	delete_star_schema_params:"DeleteStarSchemaParams",
	delete_dimension_params:"DeleteDimensionParams",
	create_data_mart_params:"CreateDataMartParams",
	delete_data_mart_params:"DeleteDataMartParams",
	update_data_mart_params:"UpdateDataMartParams",
	create_physical_dmaparams:"CreatePhysicalDMAParams",
	drop_data_mart_tables_params:"DropDataMartTablesParams",
	clean_data_mart_tables_params:"CleanDataMartTablesParams",
	get_dim_facts_for_edit_params:"GetDimFactsForEditParams",
	edit_data_mart_params:"EditDataMartParams",
	get_transaction_fact_tree_params:"GetTransactionFactTreeParams",
	get_dmacolumns_params:"GetDMAColumnsParams",
	check_data_mart_params:"CheckDataMartParams",
	inspect_table_params:"InspectTableParams",
	inspect_query_params:"InspectQueryParams",
	inspect_lookup_params:"InspectLookupParams",
	inspect_populate_dwhparams:"InspectPopulateDWHParams",
	get_mapping_error_rows_data_params:"GetMappingErrorRowsDataParams",
	inspect_populate_dmparams:"InspectPopulateDMParams",
	adjust_dwhparams:"AdjustDWHParams",
	compare_dwhparams:"CompareDWHParams",
	adjust_dmparams:"AdjustDMParams",
	compare_dmparams:"CompareDMParams",
	reload_dmparams:"ReloadDMParams",
	get_project_monitor_data_params:"GetProjectMonitorDataParams",
	get_project_task_monitor_data_params:"GetProjectTaskMonitorDataParams",
	fact_dim_denormalized_tables_params:"FactDimDenormalizedTablesParams",
	inspect_related_key_params:"InspectRelatedKeyParams",
	add_entity_table_mapping_params:"AddEntityTableMappingParams",
	automatic_schema_evolution_scan_params:"AutomaticSchemaEvolutionScanParams",
	automatic_schema_evolution_apply_params:"AutomaticSchemaEvolutionApplyParams",
	delete_entity_table_mapping_params:"DeleteEntityTableMappingParams",
	get_compose_task_info_params:"GetComposeTaskInfoParams",
	get_entity_table_mapping_params:"GetEntityTableMappingParams",
	get_un_mapped_entities_params:"GetUnMappedEntitiesParams",
	set_entities_to_map_params:"SetEntitiesToMapParams",
	get_global_entity_attributes_params:"GetGlobalEntityAttributesParams",
	get_attribute_column_mapping_params:"GetAttributeColumnMappingParams",
	add_attribute_column_mapping_params:"AddAttributeColumnMappingParams",
	delete_attribute_column_mapping_params:"DeleteAttributeColumnMappingParams",
	get_expression_editor_parameters_params:"GetExpressionEditorParametersParams",
	describe_expression_params:"DescribeExpressionParams",
	test_expression_params:"TestExpressionParams",
	ddl_get_script_data_params:"DdlGetScriptDataParams",
	script_list_files_params:"ScriptListFilesParams",
	ddl_download_script_file_params:"DdlDownloadScriptFileParams",
	evaluate_expression_params:"EvaluateExpressionParams",
	import_project_repository_params:"ImportProjectRepositoryParams",
	export_repository_without_env_specifics_params:"ExportRepositoryWithoutEnvSpecificsParams",
	get_profile_table_params:"GetProfileTableParams",
	get_inspect_profiling_table_params:"GetInspectProfilingTableParams",
	generate_watermark_scripts_params:"GenerateWatermarkScriptsParams",
	reset_watermark_params:"ResetWatermarkParams",
	delete_environment_variable_params:"DeleteEnvironmentVariableParams",
	apply_environment_variables_params:"ApplyEnvironmentVariablesParams",
	set_environment_variables_params:"SetEnvironmentVariablesParams",
	get_environment_variables_file_params:"GetEnvironmentVariablesFileParams",
	set_environment_variables_file_params:"SetEnvironmentVariablesFileParams",
	export_model_to_csv_params:"ExportModelToCsvParams",
	export_mapping_to_csv_params:"ExportMappingToCsvParams",
	export_data_mart_to_csv_params:"ExportDataMartToCsvParams",
	export_task_to_csv_params:"ExportTaskToCsvParams",
	import_model_csv_params:"ImportModelCsvParams",
	import_mappings_csv_params:"ImportMappingsCsvParams",
	import_data_marts_csv_params:"ImportDataMartsCsvParams",
	import_task_csv_params:"ImportTaskCsvParams",
	upload_csv_zip_for_comparison_params:"UploadCsvZipForComparisonParams",
	download_csv_zip_comparison_results_params:"DownloadCsvZipComparisonResultsParams",
	apply_csv_params:"ApplyCsvParams",
	generate_documentation_params:"GenerateDocumentationParams"
};


DO.RollOverLogFileParams = {
};

DO.RollOverLogFileParams_Validation = {
};


DO.RollOverLogFileParams_Defaults = {
};

DO.RollOverLogFileParams_Types = {
};


DO.PutLoggingConfigurationParams = {
};

DO.PutLoggingConfigurationParams_Validation = {
};


DO.PutLoggingConfigurationParams_Defaults = {
};

DO.PutLoggingConfigurationParams_Types = {
};


DO.GetLoggingConfigurationParams = {
};

DO.GetLoggingConfigurationParams_Validation = {
};


DO.GetLoggingConfigurationParams_Defaults = {
};

DO.GetLoggingConfigurationParams_Types = {
};


DO.GetServerLogFileListParams = {
};

DO.GetServerLogFileListParams_Validation = {
};


DO.GetServerLogFileListParams_Defaults = {
};

DO.GetServerLogFileListParams_Types = {
};


DO.GetServerLogDataParams = {
	log_file:"log_file",
	position:"position",
	lines_to_read:"lines_to_read"
};

DO.GetServerLogDataParams_Validation = {
	position: {
		number: true
	},
	lines_to_read: {
		number: true
	}
};


DO.GetServerLogDataParams_Defaults = {
	log_file:"",
	position:0,
	lines_to_read:500
};

DO.GetServerLogDataParams_Types = {
};


DO.DownloadServerLogParams = {
	log_file:"log_file"
};

DO.DownloadServerLogParams_Validation = {
};


DO.DownloadServerLogParams_Defaults = {
	log_file:""
};

DO.DownloadServerLogParams_Types = {
};


DO.ServerExecutionListLogsParams = {
	project_name:"project_name",
	type:"type",
	name:"name"
};

DO.ServerExecutionListLogsParams_Validation = {
};


DO.ServerExecutionListLogsParams_Defaults = {
	project_name:"",
	type:"",
	name:""
};

DO.ServerExecutionListLogsParams_Types = {
};


DO.ServerExecutionGetLogDataParams = {
	project_name:"project_name",
	type:"type",
	name:"name",
	runtime_id:"runtime_id",
	position:"position",
	lines_to_read:"lines_to_read",
	filename:"filename"
};

DO.ServerExecutionGetLogDataParams_Validation = {
	runtime_id: {
		number: true
	},
	position: {
		number: true
	},
	lines_to_read: {
		number: true
	}
};


DO.ServerExecutionGetLogDataParams_Defaults = {
	project_name:"",
	type:"",
	name:"",
	runtime_id:0,
	position:0,
	lines_to_read:500,
	filename:""
};

DO.ServerExecutionGetLogDataParams_Types = {
};


DO.ServerExecutionDownloadLogFileParams = {
	project_name:"project_name",
	type:"type",
	name:"name",
	runtime_id:"runtime_id",
	filename:"filename"
};

DO.ServerExecutionDownloadLogFileParams_Validation = {
	runtime_id: {
		number: true
	}
};


DO.ServerExecutionDownloadLogFileParams_Defaults = {
	project_name:"",
	type:"",
	name:"",
	runtime_id:0,
	filename:""
};

DO.ServerExecutionDownloadLogFileParams_Types = {
};


DO.GetEngineLogFileListParams = {
	project_name:"project_name",
	name_pattern:"name_pattern"
};

DO.GetEngineLogFileListParams_Validation = {
};


DO.GetEngineLogFileListParams_Defaults = {
	project_name:"",
	name_pattern:"*"
};

DO.GetEngineLogFileListParams_Types = {
};


DO.GetEngineLogDataParams = {
	project_name:"project_name",
	log_file:"log_file",
	position:"position",
	lines_to_read:"lines_to_read"
};

DO.GetEngineLogDataParams_Validation = {
	position: {
		number: true
	},
	lines_to_read: {
		number: true
	}
};


DO.GetEngineLogDataParams_Defaults = {
	project_name:"",
	log_file:"",
	position:0,
	lines_to_read:500
};

DO.GetEngineLogDataParams_Types = {
};


DO.DownloadEngineLogParams = {
	project_name:"project_name",
	log_file:"log_file"
};

DO.DownloadEngineLogParams_Validation = {
};


DO.DownloadEngineLogParams_Defaults = {
	project_name:"",
	log_file:""
};

DO.DownloadEngineLogParams_Types = {
};


DO.GetTaskLogFileListParams = {
	project_name:"project_name",
	name_pattern:"name_pattern"
};

DO.GetTaskLogFileListParams_Validation = {
};


DO.GetTaskLogFileListParams_Defaults = {
	project_name:"",
	name_pattern:"*"
};

DO.GetTaskLogFileListParams_Types = {
};


DO.GetTaskLogDataParams = {
	project_name:"project_name",
	log_file:"log_file",
	position:"position",
	lines_to_read:"lines_to_read"
};

DO.GetTaskLogDataParams_Validation = {
	position: {
		number: true
	},
	lines_to_read: {
		number: true
	}
};


DO.GetTaskLogDataParams_Defaults = {
	project_name:"",
	log_file:"",
	position:0,
	lines_to_read:500
};

DO.GetTaskLogDataParams_Types = {
};


DO.DownloadTaskLogParams = {
	project_name:"project_name",
	log_file:"log_file"
};

DO.DownloadTaskLogParams_Validation = {
};


DO.DownloadTaskLogParams_Defaults = {
	project_name:"",
	log_file:""
};

DO.DownloadTaskLogParams_Types = {
};


DO.PutHostConfigurationParams = {
};

DO.PutHostConfigurationParams_Validation = {
};


DO.PutHostConfigurationParams_Defaults = {
};

DO.PutHostConfigurationParams_Types = {
};


DO.GetHostConfigurationParams = {
};

DO.GetHostConfigurationParams_Validation = {
};


DO.GetHostConfigurationParams_Defaults = {
};

DO.GetHostConfigurationParams_Types = {
};


DO.PutEtlScheduleJobParams = {
	project_name:"project_name",
	name:"name"
};

DO.PutEtlScheduleJobParams_Validation = {
};


DO.PutEtlScheduleJobParams_Defaults = {
	project_name:"",
	name:""
};

DO.PutEtlScheduleJobParams_Types = {
};


DO.GetEtlScheduleJobParams = {
	project_name:"project_name",
	name:"name"
};

DO.GetEtlScheduleJobParams_Validation = {
	name: {
		required: true
	}
};


DO.GetEtlScheduleJobParams_Defaults = {
	project_name:"",
	name:""
};

DO.GetEtlScheduleJobParams_Types = {
};


DO.DeleteEtlScheduleJobParams = {
	project_name:"project_name",
	name:"name"
};

DO.DeleteEtlScheduleJobParams_Validation = {
};


DO.DeleteEtlScheduleJobParams_Defaults = {
	project_name:"",
	name:""
};

DO.DeleteEtlScheduleJobParams_Types = {
};


DO.PutMailServerSettingsParams = {
};

DO.PutMailServerSettingsParams_Validation = {
};


DO.PutMailServerSettingsParams_Defaults = {
};

DO.PutMailServerSettingsParams_Types = {
};


DO.GetMailServerSettingsParams = {
};

DO.GetMailServerSettingsParams_Validation = {
};


DO.GetMailServerSettingsParams_Defaults = {
};

DO.GetMailServerSettingsParams_Types = {
};


DO.DeleteMailServerSettingsParams = {
};

DO.DeleteMailServerSettingsParams_Validation = {
};


DO.DeleteMailServerSettingsParams_Defaults = {
};

DO.DeleteMailServerSettingsParams_Types = {
};


DO.SendTestMailParams = {
};

DO.SendTestMailParams_Validation = {
};


DO.SendTestMailParams_Defaults = {
};

DO.SendTestMailParams_Types = {
};


DO.PutNotificationRuleParams = {
	project_name:"project_name",
	notification:"notification"
};

DO.PutNotificationRuleParams_Validation = {
};


DO.PutNotificationRuleParams_Defaults = {
	project_name:"",
	notification:""
};

DO.PutNotificationRuleParams_Types = {
};


DO.GetNotificationRuleParams = {
	project_name:"project_name",
	notification:"notification"
};

DO.GetNotificationRuleParams_Validation = {
};


DO.GetNotificationRuleParams_Defaults = {
	project_name:"",
	notification:""
};

DO.GetNotificationRuleParams_Types = {
};


DO.DeleteNotificationRuleParams = {
	project_name:"project_name",
	notification:"notification"
};

DO.DeleteNotificationRuleParams_Validation = {
};


DO.DeleteNotificationRuleParams_Defaults = {
	project_name:"",
	notification:""
};

DO.DeleteNotificationRuleParams_Types = {
};


DO.GetNotificationRulesListParams = {
	project_name:"project_name"
};

DO.GetNotificationRulesListParams_Validation = {
};


DO.GetNotificationRulesListParams_Defaults = {
	project_name:""
};

DO.GetNotificationRulesListParams_Types = {
};


DO.PutProjectSettingsParams = {
	project_name:"project_name"
};

DO.PutProjectSettingsParams_Validation = {
};


DO.PutProjectSettingsParams_Defaults = {
	project_name:""
};

DO.PutProjectSettingsParams_Types = {
};


DO.GetProjectSettingsParams = {
	project_name:"project_name"
};

DO.GetProjectSettingsParams_Validation = {
};


DO.GetProjectSettingsParams_Defaults = {
	project_name:""
};

DO.GetProjectSettingsParams_Types = {
};


DO.ExportProjectRepositoryParams = {
	project_name:"project_name",
	password:"password",
	master_user_password:"master_user_password",
	is_without_credentials:"is_without_credentials"
};

DO.ExportProjectRepositoryParams_Validation = {
};


DO.ExportProjectRepositoryParams_Defaults = {
	project_name:"",
	password:"",
	master_user_password:"",
	is_without_credentials:false
};

DO.ExportProjectRepositoryParams_Types = {
};


DO.ExportProjectRepositoryConfigParams = {
	project_name:"project_name",
	password:"password",
	master_user_password:"master_user_password",
	is_without_credentials:"is_without_credentials"
};

DO.ExportProjectRepositoryConfigParams_Validation = {
};


DO.ExportProjectRepositoryConfigParams_Defaults = {
	project_name:"",
	password:"",
	master_user_password:"",
	is_without_credentials:false
};

DO.ExportProjectRepositoryConfigParams_Types = {
};


DO.ImportProjectRepositoryConfigParams = {
	project_name:"project_name",
	password:"password",
	master_user_password:"master_user_password",
	is_without_credentials:"is_without_credentials"
};

DO.ImportProjectRepositoryConfigParams_Validation = {
};


DO.ImportProjectRepositoryConfigParams_Defaults = {
	project_name:"",
	password:"",
	master_user_password:"",
	is_without_credentials:false
};

DO.ImportProjectRepositoryConfigParams_Types = {
};


DO.GetReusableTransformationsParams = {
	project_name:"project_name"
};

DO.GetReusableTransformationsParams_Validation = {
};


DO.GetReusableTransformationsParams_Defaults = {
	project_name:""
};

DO.GetReusableTransformationsParams_Types = {
};


DO.PutReusableTransformationsParams = {
	project_name:"project_name"
};

DO.PutReusableTransformationsParams_Validation = {
};


DO.PutReusableTransformationsParams_Defaults = {
	project_name:""
};

DO.PutReusableTransformationsParams_Types = {
};


DO.GetWorkFlowListParams = {
	project_name:"project_name"
};

DO.GetWorkFlowListParams_Validation = {
};


DO.GetWorkFlowListParams_Defaults = {
	project_name:""
};

DO.GetWorkFlowListParams_Types = {
};


DO.GetWorkFlowParams = {
	project_name:"project_name",
	name:"name"
};

DO.GetWorkFlowParams_Validation = {
	name: {
		required: true
	}
};


DO.GetWorkFlowParams_Defaults = {
	project_name:"",
	name:""
};

DO.GetWorkFlowParams_Types = {
};


DO.DeleteWorkFlowParams = {
	project_name:"project_name",
	name:"name"
};

DO.DeleteWorkFlowParams_Validation = {
};


DO.DeleteWorkFlowParams_Defaults = {
	project_name:"",
	name:""
};

DO.DeleteWorkFlowParams_Types = {
};


DO.ExecuteWorkFlowParams = {
	project_name:"project_name",
	executor_dto_name:"executor_dto_name",
	owner:"owner"
};

DO.ExecuteWorkFlowParams_Validation = {
	executor_dto_name: {
		required: true
	},
	owner: {
		required: true
	}
};


DO.ExecuteWorkFlowParams_Defaults = {
	project_name:"",
	executor_dto_name:"",
	owner:""
};

DO.ExecuteWorkFlowParams_Types = {
};


DO.PauseExecutorParams = {
	project_name:"project_name",
	executor_id:"executor_id",
	reason:"reason",
	timeout:"timeout"
};

DO.PauseExecutorParams_Validation = {
	executor_id: {
		required: true,
		number: true
	},
	timeout: {
		required: true,
		number: true
	}
};


DO.PauseExecutorParams_Defaults = {
	project_name:"",
	executor_id:0,
	reason:"",
	timeout:0
};

DO.PauseExecutorParams_Types = {
};


DO.ResumeExecutorParams = {
	project_name:"project_name",
	executor_id:"executor_id"
};

DO.ResumeExecutorParams_Validation = {
	executor_id: {
		required: true,
		number: true
	}
};


DO.ResumeExecutorParams_Defaults = {
	project_name:"",
	executor_id:0
};

DO.ResumeExecutorParams_Types = {
};


DO.ValidateWorkFlowParams = {
	project_name:"project_name",
	name:"name"
};

DO.ValidateWorkFlowParams_Validation = {
};


DO.ValidateWorkFlowParams_Defaults = {
	project_name:"",
	name:""
};

DO.ValidateWorkFlowParams_Types = {
};


DO.GetWorkflowStatusParams = {
	project_name:"project_name",
	executor_id:"executor_id",
	level:"level"
};

DO.GetWorkflowStatusParams_Validation = {
	executor_id: {
		required: true,
		number: true
	}
};


DO.GetWorkflowStatusParams_Defaults = {
	project_name:"",
	executor_id:0,
	level:DO.StatusDetailLevel.SUMMARY
};

DO.GetWorkflowStatusParams_Types = {
	level:"StatusDetailLevel"
};


DO.ListWorkflowExecutorsParams = {
	project_name:"project_name",
	name:"name",
	owner:"owner",
	options:"options",
	level:"level"
};

DO.ListWorkflowExecutorsParams_Validation = {
};


DO.ListWorkflowExecutorsParams_Defaults = {
	project_name:"",
	name:"",
	owner:"",
	options:DO.ExecutorRuntimeListOptions.RUNNING,
	level:DO.StatusDetailLevel.SUMMARY
};

DO.ListWorkflowExecutorsParams_Types = {
	options:"ExecutorRuntimeListOptions",
	level:"StatusDetailLevel"
};


DO.ListETLExecutorsParams = {
	project_name:"project_name",
	name:"name",
	owner:"owner",
	options:"options",
	level:"level"
};

DO.ListETLExecutorsParams_Validation = {
};


DO.ListETLExecutorsParams_Defaults = {
	project_name:"",
	name:"",
	owner:"",
	options:DO.ExecutorRuntimeListOptions.RUNNING,
	level:DO.StatusDetailLevel.SUMMARY
};

DO.ListETLExecutorsParams_Types = {
	options:"ExecutorRuntimeListOptions",
	level:"StatusDetailLevel"
};


DO.StopWorkFlowParams = {
	project_name:"project_name",
	executor_id:"executor_id",
	reason:"reason",
	timeout:"timeout"
};

DO.StopWorkFlowParams_Validation = {
	executor_id: {
		required: true,
		number: true
	},
	timeout: {
		required: true,
		number: true
	}
};


DO.StopWorkFlowParams_Defaults = {
	project_name:"",
	executor_id:0,
	reason:"",
	timeout:0
};

DO.StopWorkFlowParams_Types = {
};


DO.AbortWorkFlowParams = {
	project_name:"project_name",
	executor_id:"executor_id",
	reason:"reason"
};

DO.AbortWorkFlowParams_Validation = {
	executor_id: {
		required: true,
		number: true
	}
};


DO.AbortWorkFlowParams_Defaults = {
	project_name:"",
	executor_id:0,
	reason:""
};

DO.AbortWorkFlowParams_Types = {
};


DO.ExecuteReplicateTaskParams = {
	project_name:"project_name",
	executor_dto_name:"executor_dto_name",
	owner:"owner"
};

DO.ExecuteReplicateTaskParams_Validation = {
	executor_dto_name: {
		required: true
	},
	owner: {
		required: true
	}
};


DO.ExecuteReplicateTaskParams_Defaults = {
	project_name:"",
	executor_dto_name:"",
	owner:""
};

DO.ExecuteReplicateTaskParams_Types = {
};


DO.GetReplicateTaskStatusParams = {
	project_name:"project_name",
	executor_id:"executor_id",
	level:"level"
};

DO.GetReplicateTaskStatusParams_Validation = {
	executor_id: {
		required: true,
		number: true
	}
};


DO.GetReplicateTaskStatusParams_Defaults = {
	project_name:"",
	executor_id:0,
	level:DO.StatusDetailLevel.SUMMARY
};

DO.GetReplicateTaskStatusParams_Types = {
	level:"StatusDetailLevel"
};


DO.StopReplicateTaskParams = {
	project_name:"project_name",
	executor_id:"executor_id",
	reason:"reason",
	timeout:"timeout"
};

DO.StopReplicateTaskParams_Validation = {
	executor_id: {
		required: true,
		number: true
	},
	timeout: {
		required: true,
		number: true
	}
};


DO.StopReplicateTaskParams_Defaults = {
	project_name:"",
	executor_id:0,
	reason:"",
	timeout:0
};

DO.StopReplicateTaskParams_Types = {
};


DO.AbortReplicateTaskParams = {
	project_name:"project_name",
	executor_id:"executor_id",
	reason:"reason"
};

DO.AbortReplicateTaskParams_Validation = {
	executor_id: {
		required: true,
		number: true
	}
};


DO.AbortReplicateTaskParams_Defaults = {
	project_name:"",
	executor_id:0,
	reason:""
};

DO.AbortReplicateTaskParams_Types = {
};


DO.ListReplicateExecutorsParams = {
	project_name:"project_name",
	name:"name",
	owner:"owner",
	options:"options",
	level:"level"
};

DO.ListReplicateExecutorsParams_Validation = {
};


DO.ListReplicateExecutorsParams_Defaults = {
	project_name:"",
	name:"",
	owner:"",
	options:DO.ExecutorRuntimeListOptions.RUNNING,
	level:DO.StatusDetailLevel.SUMMARY
};

DO.ListReplicateExecutorsParams_Types = {
	options:"ExecutorRuntimeListOptions",
	level:"StatusDetailLevel"
};


DO.PutJavaServerSettingsParams = {
};

DO.PutJavaServerSettingsParams_Validation = {
};


DO.PutJavaServerSettingsParams_Defaults = {
};

DO.PutJavaServerSettingsParams_Types = {
};


DO.GetJavaServerSettingsParams = {
};

DO.GetJavaServerSettingsParams_Validation = {
};


DO.GetJavaServerSettingsParams_Defaults = {
};

DO.GetJavaServerSettingsParams_Types = {
};


DO.PutVersionControlSettingsParams = {
	project_name:"project_name"
};

DO.PutVersionControlSettingsParams_Validation = {
};


DO.PutVersionControlSettingsParams_Defaults = {
	project_name:""
};

DO.PutVersionControlSettingsParams_Types = {
};


DO.GetVersionControlSettingsParams = {
	project_name:"project_name"
};

DO.GetVersionControlSettingsParams_Validation = {
};


DO.GetVersionControlSettingsParams_Defaults = {
	project_name:""
};

DO.GetVersionControlSettingsParams_Types = {
};


DO.PutPhysicalPropertiesParams = {
	project_name:"project_name",
	name:"name"
};

DO.PutPhysicalPropertiesParams_Validation = {
};


DO.PutPhysicalPropertiesParams_Defaults = {
	project_name:"",
	name:""
};

DO.PutPhysicalPropertiesParams_Types = {
};


DO.RegisterLicenseParams = {
};

DO.RegisterLicenseParams_Validation = {
};


DO.RegisterLicenseParams_Defaults = {
};

DO.RegisterLicenseParams_Types = {
};


DO.GetLicenseParams = {
};

DO.GetLicenseParams_Validation = {
};


DO.GetLicenseParams_Defaults = {
};

DO.GetLicenseParams_Types = {
};


DO.ValidateLicenseParams = {
};

DO.ValidateLicenseParams_Validation = {
};


DO.ValidateLicenseParams_Defaults = {
};

DO.ValidateLicenseParams_Types = {
};


DO.GetCmdTasksListParams = {
	project_name:"project_name"
};

DO.GetCmdTasksListParams_Validation = {
};


DO.GetCmdTasksListParams_Defaults = {
	project_name:""
};

DO.GetCmdTasksListParams_Types = {
};


DO.GetCmdTaskParams = {
	project_name:"project_name",
	task_name:"task_name"
};

DO.GetCmdTaskParams_Validation = {
};


DO.GetCmdTaskParams_Defaults = {
	project_name:"",
	task_name:""
};

DO.GetCmdTaskParams_Types = {
};


DO.PutCmdTaskParams = {
	project_name:"project_name",
	task_name:"task_name"
};

DO.PutCmdTaskParams_Validation = {
};


DO.PutCmdTaskParams_Defaults = {
	project_name:"",
	task_name:""
};

DO.PutCmdTaskParams_Types = {
};


DO.DeleteCmdTaskParams = {
	project_name:"project_name",
	task_name:"task_name"
};

DO.DeleteCmdTaskParams_Validation = {
};


DO.DeleteCmdTaskParams_Defaults = {
	project_name:"",
	task_name:""
};

DO.DeleteCmdTaskParams_Types = {
};


DO.ExecuteCmdTaskParams = {
	project_name:"project_name",
	executor_dto_name:"executor_dto_name",
	owner:"owner"
};

DO.ExecuteCmdTaskParams_Validation = {
	executor_dto_name: {
		required: true
	},
	owner: {
		required: true
	}
};


DO.ExecuteCmdTaskParams_Defaults = {
	project_name:"",
	executor_dto_name:"",
	owner:""
};

DO.ExecuteCmdTaskParams_Types = {
};


DO.StopCmdTaskParams = {
	project_name:"project_name",
	executor_id:"executor_id",
	reason:"reason",
	timeout:"timeout"
};

DO.StopCmdTaskParams_Validation = {
	executor_id: {
		required: true,
		number: true
	},
	timeout: {
		required: true,
		number: true
	}
};


DO.StopCmdTaskParams_Defaults = {
	project_name:"",
	executor_id:0,
	reason:"",
	timeout:0
};

DO.StopCmdTaskParams_Types = {
};


DO.AbortCmdTaskParams = {
	project_name:"project_name",
	executor_id:"executor_id",
	reason:"reason"
};

DO.AbortCmdTaskParams_Validation = {
	executor_id: {
		required: true,
		number: true
	}
};


DO.AbortCmdTaskParams_Defaults = {
	project_name:"",
	executor_id:0,
	reason:""
};

DO.AbortCmdTaskParams_Types = {
};


DO.GetCmdTaskStatusParams = {
	project_name:"project_name",
	executor_id:"executor_id",
	level:"level"
};

DO.GetCmdTaskStatusParams_Validation = {
	executor_id: {
		required: true,
		number: true
	}
};


DO.GetCmdTaskStatusParams_Defaults = {
	project_name:"",
	executor_id:0,
	level:DO.StatusDetailLevel.SUMMARY
};

DO.GetCmdTaskStatusParams_Types = {
	level:"StatusDetailLevel"
};


DO.ListCmdTaskExecutorsStatusesParams = {
	project_name:"project_name",
	task_name:"task_name",
	owner:"owner",
	options:"options",
	level:"level"
};

DO.ListCmdTaskExecutorsStatusesParams_Validation = {
};


DO.ListCmdTaskExecutorsStatusesParams_Defaults = {
	project_name:"",
	task_name:"",
	owner:"",
	options:DO.ExecutorRuntimeListOptions.RUNNING,
	level:DO.StatusDetailLevel.SUMMARY
};

DO.ListCmdTaskExecutorsStatusesParams_Types = {
	options:"ExecutorRuntimeListOptions",
	level:"StatusDetailLevel"
};


DO.GetRootAclParams = {
};

DO.GetRootAclParams_Validation = {
};


DO.GetRootAclParams_Defaults = {
};

DO.GetRootAclParams_Types = {
};


DO.PutRootAclParams = {
};

DO.PutRootAclParams_Validation = {
};


DO.PutRootAclParams_Defaults = {
};

DO.PutRootAclParams_Types = {
};


DO.DeleteRootAclParams = {
};

DO.DeleteRootAclParams_Validation = {
};


DO.DeleteRootAclParams_Defaults = {
};

DO.DeleteRootAclParams_Types = {
};


DO.GetProjectAclParams = {
	project_name:"project_name",
	based_on_parent:"based_on_parent"
};

DO.GetProjectAclParams_Validation = {
};


DO.GetProjectAclParams_Defaults = {
	project_name:"",
	based_on_parent:false
};

DO.GetProjectAclParams_Types = {
};


DO.PutProjectAclParams = {
	project_name:"project_name"
};

DO.PutProjectAclParams_Validation = {
};


DO.PutProjectAclParams_Defaults = {
	project_name:""
};

DO.PutProjectAclParams_Types = {
};


DO.DeleteProjectAclParams = {
	project_name:"project_name"
};

DO.DeleteProjectAclParams_Validation = {
};


DO.DeleteProjectAclParams_Defaults = {
	project_name:""
};

DO.DeleteProjectAclParams_Types = {
};


DO.GetProjectsAclParams = {
	based_on_parent:"based_on_parent"
};

DO.GetProjectsAclParams_Validation = {
};


DO.GetProjectsAclParams_Defaults = {
	based_on_parent:false
};

DO.GetProjectsAclParams_Types = {
};


DO.PutProjectsAclParams = {
};

DO.PutProjectsAclParams_Validation = {
};


DO.PutProjectsAclParams_Defaults = {
};

DO.PutProjectsAclParams_Types = {
};


DO.DeleteProjectsAclParams = {
};

DO.DeleteProjectsAclParams_Validation = {
};


DO.DeleteProjectsAclParams_Defaults = {
};

DO.DeleteProjectsAclParams_Types = {
};


DO.GetProjectsEffectiveRoleParams = {
};

DO.GetProjectsEffectiveRoleParams_Validation = {
};


DO.GetProjectsEffectiveRoleParams_Defaults = {
};

DO.GetProjectsEffectiveRoleParams_Types = {
};


DO.GetProjectEffectiveRoleParams = {
	project_name:"project_name"
};

DO.GetProjectEffectiveRoleParams_Validation = {
};


DO.GetProjectEffectiveRoleParams_Defaults = {
	project_name:""
};

DO.GetProjectEffectiveRoleParams_Types = {
};


DO.GetRootEffectiveRoleParams = {
};

DO.GetRootEffectiveRoleParams_Validation = {
};


DO.GetRootEffectiveRoleParams_Defaults = {
};

DO.GetRootEffectiveRoleParams_Types = {
};


DO.GetProjectModelAclParams = {
	project_name:"project_name",
	based_on_parent:"based_on_parent"
};

DO.GetProjectModelAclParams_Validation = {
};


DO.GetProjectModelAclParams_Defaults = {
	project_name:"",
	based_on_parent:false
};

DO.GetProjectModelAclParams_Types = {
};


DO.PutProjectModelAclParams = {
	project_name:"project_name"
};

DO.PutProjectModelAclParams_Validation = {
};


DO.PutProjectModelAclParams_Defaults = {
	project_name:""
};

DO.PutProjectModelAclParams_Types = {
};


DO.DeleteProjectModelAclParams = {
	project_name:"project_name"
};

DO.DeleteProjectModelAclParams_Validation = {
};


DO.DeleteProjectModelAclParams_Defaults = {
	project_name:""
};

DO.DeleteProjectModelAclParams_Types = {
};


DO.GetProjectModelEffectiveRoleParams = {
	project_name:"project_name"
};

DO.GetProjectModelEffectiveRoleParams_Validation = {
};


DO.GetProjectModelEffectiveRoleParams_Defaults = {
	project_name:""
};

DO.GetProjectModelEffectiveRoleParams_Types = {
};


DO.GetAuditTrailParams = {
	format:"format",
	start:"start",
	end:"end"
};

DO.GetAuditTrailParams_Validation = {
};


DO.GetAuditTrailParams_Defaults = {
	format:"",
	start:"",
	end:""
};

DO.GetAuditTrailParams_Types = {
};


DO.GetAuditTrailPayloadParams = {
	payload_id:"payload_id",
	hex:"hex"
};

DO.GetAuditTrailPayloadParams_Validation = {
};


DO.GetAuditTrailPayloadParams_Defaults = {
	payload_id:"",
	hex:""
};

DO.GetAuditTrailPayloadParams_Types = {
};


DO.PredefinedCustomInternalParameters = [
];

DO.Objects = {
	AttributeBase:"AttributeBase",
	msg_init_fields:"msg_init_fields",
	UIComponentTypes:"UIComponentTypes",
	UILayoutTypes:"UILayoutTypes",
	KeyValue:"KeyValue",
	MsgValidationFields:"MsgValidationFields",
	ApiAuthTypes:"ApiAuthTypes",
	AttGenDefTypeIds:"AttGenDefTypeIds",
	LogLevel:"LogLevel",
	http_method:"http_method",
	PayLoadFormat:"PayLoadFormat",
	AuthUserRoleType:"AuthUserRoleType",
	AuthenticationMethod:"AuthenticationMethod",
	XsrfHandling:"XsrfHandling",
	DTObjectMetaData:"DTObjectMetaData",
	DTObjectHeader:"DTObjectHeader",
	DTObject:"DTObject",
	DTObjectWithId:"DTObjectWithId",
	ConfigureRtoDto:"ConfigureRtoDto",
	RepositoryDTO:"RepositoryDTO",
	DownloadFileToken:"DownloadFileToken",
	FileChunk:"FileChunk",
	PluginConfigDto:"PluginConfigDto",
	JavaServerConfigurationDto:"JavaServerConfigurationDto",
	MasterUserKeyFile:"MasterUserKeyFile",
	MasterKeyDto:"MasterKeyDto",
	PingParams:"PingParams",
	PingMessage:"PingMessage",
	GetSessionInfoParams:"GetSessionInfoParams",
	SessionInfo:"SessionInfo",
	ServerCapabilities:"ServerCapabilities",
	ApplicationSessionInfo:"ApplicationSessionInfo",
	ApplicationSessionInfoDummy:"ApplicationSessionInfoDummy",
	GenerateDownloadTokenParams:"GenerateDownloadTokenParams",
	GenerateDownloadTokenResp:"GenerateDownloadTokenResp",
	RestDefTypeIds:"RestDefTypeIds",
	AttInfrastructureModules:"AttInfrastructureModules",
	AttInfrastructureLoggers:"AttInfrastructureLoggers",
	LogConfiguration:"LogConfiguration",
	LogFileData:"LogFileData",
	LoggerModelsDefTypeIds:"LoggerModelsDefTypeIds",
	RepositoryItem:"RepositoryItem",
	DtoVersionEntry:"DtoVersionEntry",
	RepositoryExportData:"RepositoryExportData",
	RepositoryExportConfiguration:"RepositoryExportConfiguration",
	ItemConfField:"ItemConfField",
	RepositoryConfigurationField:"RepositoryConfigurationField",
	SQLiteRepositoryDTO:"SQLiteRepositoryDTO",
	SQLRepositoryDTO:"SQLRepositoryDTO",
	ListItemsFlags:"ListItemsFlags",
	TagScopes:"TagScopes",
	TagValueTypes:"TagValueTypes",
	TagDefDTO:"TagDefDTO",
	RepositoryGetObjectParams:"RepositoryGetObjectParams",
	RepositoryPutObjectParams:"RepositoryPutObjectParams",
	RepositoryModifyTagsParams:"RepositoryModifyTagsParams",
	RepositoryRenameObjectParams:"RepositoryRenameObjectParams",
	RepositoryDeleteObjectParams:"RepositoryDeleteObjectParams",
	RepositoryResetObjectParams:"RepositoryResetObjectParams",
	RepositoryListObjectsParams:"RepositoryListObjectsParams",
	DTObjectList:"DTObjectList",
	RepositoryExportParams:"RepositoryExportParams",
	RepositoryImportParams:"RepositoryImportParams",
	RepositoryExportConfigParams:"RepositoryExportConfigParams",
	RepositoryImportConfigParams:"RepositoryImportConfigParams",
	RepositoryGetRepositoryItemParams:"RepositoryGetRepositoryItemParams",
	RepositorySetRepositoryItemParams:"RepositorySetRepositoryItemParams",
	RepositoryPublicDefTypeIds:"RepositoryPublicDefTypeIds",
	LoggerServiceDto:"LoggerServiceDto",
	ServicesLoggerModules:"ServicesLoggerModules",
	ServicesLoggers:"ServicesLoggers",
	LoggerRollOverLogFileParams:"LoggerRollOverLogFileParams",
	LoggerListFilesParams:"LoggerListFilesParams",
	LoggerListFilesResp:"LoggerListFilesResp",
	LoggerGetLogDataParams:"LoggerGetLogDataParams",
	LoggerGetLogDataResp:"LoggerGetLogDataResp",
	LoggerDownloadLogFileParams:"LoggerDownloadLogFileParams",
	LoggerApiRef:"LoggerApiRef",
	LoggerPublicDefTypeIds:"LoggerPublicDefTypeIds",
	SchedulePolicy:"SchedulePolicy",
	RunOnceSchedulePolicy:"RunOnceSchedulePolicy",
	RecurrentSchedulePolicy:"RecurrentSchedulePolicy",
	IntervalTimeUnit:"IntervalTimeUnit",
	IntervalSchedulePolicy:"IntervalSchedulePolicy",
	CronExpressionSchedulePolicy:"CronExpressionSchedulePolicy",
	CronSchedulePolicy:"CronSchedulePolicy",
	ScheduledJobDto:"ScheduledJobDto",
	SchedulerPublicDefTypeIds:"SchedulerPublicDefTypeIds",
	PayloadBase:"PayloadBase",
	AuditTrailRecord:"AuditTrailRecord",
	AuditTrailDto:"AuditTrailDto",
	AuditGetAuditTrailParams:"AuditGetAuditTrailParams",
	AuditGetAuditTrailPayloadParams:"AuditGetAuditTrailPayloadParams",
	AuditGetAuditTrailPayloadResp:"AuditGetAuditTrailPayloadResp",
	AuditTrailPublicDefTypeIds:"AuditTrailPublicDefTypeIds",
	AuditPhysicalOpenMode:"AuditPhysicalOpenMode",
	BatchPolicy:"BatchPolicy",
	FlushPolicy:"FlushPolicy",
	RetentionPolicy:"RetentionPolicy",
	RolloverPolicy:"RolloverPolicy",
	CongestionPolicy:"CongestionPolicy",
	AuditStream:"AuditStream",
	AuditSeverity:"AuditSeverity",
	AuditRecord:"AuditRecord",
	DerivedAuditRecord:"DerivedAuditRecord",
	WiredAuditFileHeader:"WiredAuditFileHeader",
	WiredAuditSeverity:"WiredAuditSeverity",
	WiredAuditRecordBase:"WiredAuditRecordBase",
	WiredAuditRecord:"WiredAuditRecord",
	WiredAuditBatchFlags:"WiredAuditBatchFlags",
	WiredAuditRecordBatch:"WiredAuditRecordBatch",
	WiredAuditBytes:"WiredAuditBytes",
	AuditPublicDefTypeIds:"AuditPublicDefTypeIds",
	NotificationRuntime:"NotificationRuntime",
	NotificationSeverity:"NotificationSeverity",
	NotificationDelivery:"NotificationDelivery",
	EmailNotificationDelivery:"EmailNotificationDelivery",
	EventLogNotificationDelivery:"EventLogNotificationDelivery",
	NotificationRuleDto:"NotificationRuleDto",
	NotificationAlarmRuleDto:"NotificationAlarmRuleDto",
	NotificationState:"NotificationState",
	KeyValueStates:"KeyValueStates",
	NotificationStatesDto:"NotificationStatesDto",
	NotificationGetAlarmedRulesParams:"NotificationGetAlarmedRulesParams",
	NotificationGetAlarmedRulesResp:"NotificationGetAlarmedRulesResp",
	NotificationClearAlarmedRuleParams:"NotificationClearAlarmedRuleParams",
	NotificationGetPreDefinedRulesParams:"NotificationGetPreDefinedRulesParams",
	PreDefinedNotificationRules:"PreDefinedNotificationRules",
	NotificationSendTestMailParams:"NotificationSendTestMailParams",
	NotificationSendTestMailReq:"NotificationSendTestMailReq",
	NotificationPublicDefTypeIds:"NotificationPublicDefTypeIds",
	FlowNodeStatus:"FlowNodeStatus",
	FlowExecutorStatus:"FlowExecutorStatus",
	FlowExecutorDetailedStatus:"FlowExecutorDetailedStatus",
	FlowExecutorResumeContext:"FlowExecutorResumeContext",
	FlowDto:"FlowDto",
	FlowTokenDto:"FlowTokenDto",
	KeyValueFlowToken:"KeyValueFlowToken",
	TokenState:"TokenState",
	FlowType:"FlowType",
	Documentation:"Documentation",
	BaseVisuals:"BaseVisuals",
	BaseElement:"BaseElement",
	Lane:"Lane",
	LaneSet:"LaneSet",
	FlowElement:"FlowElement",
	Port:"Port",
	InPort:"InPort",
	SequenceFlow:"SequenceFlow",
	OutPort:"OutPort",
	ErrorOutPort:"ErrorOutPort",
	VariableType:"VariableType",
	VarDefLevel:"VarDefLevel",
	VarDef:"VarDef",
	FlowNode:"FlowNode",
	StartNode:"StartNode",
	TerminationMode:"TerminationMode",
	ErrorHandlingPolicy:"ErrorHandlingPolicy",
	EndNode:"EndNode",
	GatewayDirection:"GatewayDirection",
	BaseGateway:"BaseGateway",
	ParallelGateway:"ParallelGateway",
	BaseActivity:"BaseActivity",
	ExecutionActivity:"ExecutionActivity",
	KeyValueFlowNode:"KeyValueFlowNode",
	ArrowType:"ArrowType",
	FlowSettings:"FlowSettings",
	FlowInstanceType:"FlowInstanceType",
	FlowObjectNames:"FlowObjectNames",
	WorkflowAuditRecord:"WorkflowAuditRecord",
	WorkflowAuditCategory:"WorkflowAuditCategory",
	WorkflowAuditEvent:"WorkflowAuditEvent",
	WorkflowExecutorDto:"WorkflowExecutorDto",
	ValidationEvent:"ValidationEvent",
	ValidationSummary:"ValidationSummary",
	ValidateFlowParams:"ValidateFlowParams",
	ValidateFlowResp:"ValidateFlowResp",
	WorkflowPublicDefTypeIds:"WorkflowPublicDefTypeIds",
	ExecutionServiceDto:"ExecutionServiceDto",
	ExecutionServiceRuntimeDto:"ExecutionServiceRuntimeDto",
	ExecutorRuntimeDto:"ExecutorRuntimeDto",
	ExecutorRuntimeDtoPP:"ExecutorRuntimeDtoPP",
	ExecutorRuntimeListOptions:"ExecutorRuntimeListOptions",
	ExecutorDto:"ExecutorDto",
	OSSecurityContext:"OSSecurityContext",
	ProcessExecutorDto:"ProcessExecutorDto",
	MethodExecutorDto:"MethodExecutorDto",
	ExecutorOutputDto:"ExecutorOutputDto",
	ProcessExecutorOutput:"ProcessExecutorOutput",
	MethodExecutorOutput:"MethodExecutorOutput",
	ExecutionState:"ExecutionState",
	StatusDetailLevel:"StatusDetailLevel",
	ExecutorStatus:"ExecutorStatus",
	ResumeContext:"ResumeContext",
	ExecutionExecuteParams:"ExecutionExecuteParams",
	ExecutionExecuteResp:"ExecutionExecuteResp",
	ExecutionAttachParams:"ExecutionAttachParams",
	ExecutionGetStatusParams:"ExecutionGetStatusParams",
	ExecutionStopParams:"ExecutionStopParams",
	ExecutionAbortParams:"ExecutionAbortParams",
	ExecutionPauseParams:"ExecutionPauseParams",
	ExecutionResumeParams:"ExecutionResumeParams",
	ExecutionListExecutorsDataParams:"ExecutionListExecutorsDataParams",
	ExecutionListExecutorsDataResp:"ExecutionListExecutorsDataResp",
	ListExecutorsLogsParams:"ListExecutorsLogsParams",
	ListExecutorsLogsResp:"ListExecutorsLogsResp",
	ExecutionGetLogDataParams:"ExecutionGetLogDataParams",
	ExecutionGetLogDataResp:"ExecutionGetLogDataResp",
	ExecutionDownloadLogFileParams:"ExecutionDownloadLogFileParams",
	ExecutorPublicDefTypeIds:"ExecutorPublicDefTypeIds",
	MessageCenterDbConnection:"MessageCenterDbConnection",
	MessageCenterDbConnectionSqlite:"MessageCenterDbConnectionSqlite",
	MessageCenterDbConnectionSqlserver:"MessageCenterDbConnectionSqlserver",
	MessageRetention:"MessageRetention",
	MessageCenterDTO:"MessageCenterDTO",
	MessageCenterRuntime:"MessageCenterRuntime",
	MessageCenterDTOPP:"MessageCenterDTOPP",
	FieldType:"FieldType",
	Comparison:"Comparison",
	FieldCondition:"FieldCondition",
	Direction:"Direction",
	MessageCenterRecord:"MessageCenterRecord",
	MessageCenterGetMessagesParams:"MessageCenterGetMessagesParams",
	MessageCenterGetMessagesRequest:"MessageCenterGetMessagesRequest",
	MessageCenterGetMessagesResult:"MessageCenterGetMessagesResult",
	SeverityCounter:"SeverityCounter",
	MessageCenterGetMessagesCountersParams:"MessageCenterGetMessagesCountersParams",
	MessageCenterGetMessagesCountersResp:"MessageCenterGetMessagesCountersResp",
	MessageCenterDeleteAuditParams:"MessageCenterDeleteAuditParams",
	MessageCenterDeleteAuditRequest:"MessageCenterDeleteAuditRequest",
	MessageCenterDeleteAuditResp:"MessageCenterDeleteAuditResp",
	MsgCenterPublicDefTypeIds:"MsgCenterPublicDefTypeIds",
	AttunityLicenseDto:"AttunityLicenseDto",
	AttunityLicenses:"AttunityLicenses",
	AttunityLicenseInfo:"AttunityLicenseInfo",
	ListAttunityLicenseInfo:"ListAttunityLicenseInfo",
	AttunityLicenseDtoInfo:"AttunityLicenseDtoInfo",
	ListAttunityLicenseDtoInfo:"ListAttunityLicenseDtoInfo",
	GlobalLicenseState:"GlobalLicenseState",
	LicenseValidateLicenseParams:"LicenseValidateLicenseParams",
	LicensesListLicensesInfoParams:"LicensesListLicensesInfoParams",
	LicensesListLicensesParams:"LicensesListLicensesParams",
	LicenseRegisterLicenseParams:"LicenseRegisterLicenseParams",
	LicensesRegisterLicensesParams:"LicensesRegisterLicensesParams",
	LicenseGetLicenseParams:"LicenseGetLicenseParams",
	LicenseDeleteLicenseParams:"LicenseDeleteLicenseParams",
	LicensePublicDefTypeIds:"LicensePublicDefTypeIds",
	AppHostConfigurationDto:"AppHostConfigurationDto",
	MailServerSettings:"MailServerSettings",
	EnvironmentApiRef:"EnvironmentApiRef",
	GetSystemInfoParams:"GetSystemInfoParams",
	GetSystemInfoResp:"GetSystemInfoResp",
	EnvironmentPublicDefTypeIds:"EnvironmentPublicDefTypeIds",
	ApplicationTypes:"ApplicationTypes",
	UserInfoDto:"UserInfoDto",
	UserInfoDtoPP:"UserInfoDtoPP",
	UserInfoGetUserInfoParams:"UserInfoGetUserInfoParams",
	UserInfoPutUserInfoParams:"UserInfoPutUserInfoParams",
	UserInfoDeleteUserInfoParams:"UserInfoDeleteUserInfoParams",
	UserinfoPublicDefTypeIds:"UserinfoPublicDefTypeIds",
	UserRef:"UserRef",
	GroupRef:"GroupRef",
	RoleDef:"RoleDef",
	AuthorizationAclDto:"AuthorizationAclDto",
	RequiredUserRoleTypeOverridesDto:"RequiredUserRoleTypeOverridesDto",
	SuperUserDto:"SuperUserDto",
	RequiredUserRoleTypeOverride:"RequiredUserRoleTypeOverride",
	AuthorizationPutAclParams:"AuthorizationPutAclParams",
	AuthorizationGetAclParams:"AuthorizationGetAclParams",
	AuthorizationGetAclResp:"AuthorizationGetAclResp",
	AuthorizationDeleteAclParams:"AuthorizationDeleteAclParams",
	AuthorizationGetUrlAuthorizationParams:"AuthorizationGetUrlAuthorizationParams",
	AuthorizationGetUrlAuthorizationResp:"AuthorizationGetUrlAuthorizationResp",
	AuthorizationGetUserRoleOverridesParams:"AuthorizationGetUserRoleOverridesParams",
	AuthorizationGetUserRoleOverridesResp:"AuthorizationGetUserRoleOverridesResp",
	AuthorizationGetEffectiveRoleParams:"AuthorizationGetEffectiveRoleParams",
	AuthorizationGetEffectiveRoleReq:"AuthorizationGetEffectiveRoleReq",
	AuthorizationGetEffectiveRoleResp:"AuthorizationGetEffectiveRoleResp",
	AuthorizationPublicDefTypeIds:"AuthorizationPublicDefTypeIds",
	PostgreSQLConfigurationDto:"PostgreSQLConfigurationDto",
	DatabaseConfigDefTypeIds:"DatabaseConfigDefTypeIds",
	HostConfigurationDto:"HostConfigurationDto",
	UserInfoSource:"UserInfoSource",
	UserInfo:"UserInfo",
	PersistentSession:"PersistentSession",
	RuleOperators:"RuleOperators",
	RuleDto:"RuleDto",
	ApiErrorResponse:"ApiErrorResponse",
	DataTreeNodeDto:"DataTreeNodeDto",
	DoBatchParams:"DoBatchParams",
	BatchReqItem:"BatchReqItem",
	KeyValueBatchReqItem:"KeyValueBatchReqItem",
	BatchReq:"BatchReq",
	BatchRespItem:"BatchRespItem",
	KeyValueBatchRespItem:"KeyValueBatchRespItem",
	BatchResp:"BatchResp",
	LogoutParams:"LogoutParams",
	LoginParams:"LoginParams",
	FormLoginParams:"FormLoginParams",
	FormLoginReq:"FormLoginReq",
	IDPRedirectParams:"IDPRedirectParams",
	SAMLLoginParams:"SAMLLoginParams",
	ServiceLoginParams:"ServiceLoginParams",
	ServiceLoginReq:"ServiceLoginReq",
	AttCsharpDefTypeIds:"AttCsharpDefTypeIds",
	db_role:"db_role",
	db_group:"db_group",
	view_support_options:"view_support_options",
	dbprop:"dbprop",
	porp_object:"porp_object",
	ar_props:"ar_props",
	ar_props_wraped:"ar_props_wraped",
	synonym:"synonym",
	column_expression_validation:"column_expression_validation",
	feature_flag:"feature_flag",
	registration_info:"registration_info",
	custom_record_header:"custom_record_header",
	configuration_item:"configuration_item",
	configuration:"configuration",
	odbc:"odbc",
	connect_item_type:"connect_item_type",
	connect_item_level:"connect_item_level",
	connect_enumval:"connect_enumval",
	layered_settings_msg:"layered_settings_msg",
	connect_item:"connect_item",
	browse_type:"browse_type",
	connect_item_override:"connect_item_override",
	group_def:"group_def",
	connect_info:"connect_info",
	cifta_compression_type:"cifta_compression_type",
	cifta_settings:"cifta_settings",
	provider_syntax:"provider_syntax",
	force_index_to_not_nullable:"force_index_to_not_nullable",
	bulk_update_syntax:"bulk_update_syntax",
	char_semantic:"char_semantic",
	bulk_delete_syntax:"bulk_delete_syntax",
	bulk_insert_syntax:"bulk_insert_syntax",
	query_syntax:"query_syntax",
	ar_data_type_options:"ar_data_type_options",
	ar_sub_data_type_options:"ar_sub_data_type_options",
	query_data_type_mapping:"query_data_type_mapping",
	charset_to_converter_mapping:"charset_to_converter_mapping",
	odbc_col_attr:"odbc_col_attr",
	binary_display:"binary_display",
	primary_key_order:"primary_key_order",
	source_column_data_type:"source_column_data_type",
	primary_key_def:"primary_key_def",
	expression_editor_type:"expression_editor_type",
	ee_hidden_type:"ee_hidden_type",
	expression_editor_item:"expression_editor_item",
	expression_editor_group:"expression_editor_group",
	expression_editor_category:"expression_editor_category",
	primary_key_segment:"primary_key_segment",
	primary_key_origin_options:"primary_key_origin_options",
	unload_segments_type:"unload_segments_type",
	unload_ranges:"unload_ranges",
	unload_partition:"unload_partition",
	split_entry_names:"split_entry_names",
	range_split_point:"range_split_point",
	source_unload_segments:"source_unload_segments",
	source_table_settings:"source_table_settings",
	manipulation:"manipulation",
	manipulation_action:"manipulation_action",
	column_manipulation:"column_manipulation",
	column_filter:"column_filter",
	table_manipulation:"table_manipulation",
	manipulation_rule:"manipulation_rule",
	simulated_column_manipulation:"simulated_column_manipulation",
	simulated_table_manipulation:"simulated_table_manipulation",
	global_manipulation_variables:"global_manipulation_variables",
	global_manipulation_action:"global_manipulation_action",
	global_manipulation_sub_action:"global_manipulation_sub_action",
	global_manipulation_where_datatype_group:"global_manipulation_where_datatype_group",
	global_column_manipulation:"global_column_manipulation",
	global_manipulation_rule:"global_manipulation_rule",
	global_manipulation:"global_manipulation",
	tabledef:"tabledef",
	MetaDefExt:"MetaDefExt",
	column_def:"column_def",
	record_identifier:"record_identifier",
	segmentation_info:"segmentation_info",
	source_partitions:"source_partitions",
	partition_info:"partition_info",
	ProtoDefSharedTypeIds:"ProtoDefSharedTypeIds",
	ComposeBaseParams:"ComposeBaseParams",
	EngineBootSettings:"EngineBootSettings",
	BigDataProjectTypes:"BigDataProjectTypes",
	TargetOS:"TargetOS",
	EngineLogLevel:"EngineLogLevel",
	DeliveryType:"DeliveryType",
	SqlRecoverableExceptions:"SqlRecoverableExceptions",
	GeneralSettings:"GeneralSettings",
	MoppingThreadSettings:"MoppingThreadSettings",
	EngineLoggingSettings:"EngineLoggingSettings",
	DatabaseConnectionSettings:"DatabaseConnectionSettings",
	ThreadConnectionSettings:"ThreadConnectionSettings",
	AdvancedSettings:"AdvancedSettings",
	EngineSettings:"EngineSettings",
	SparkSettings:"SparkSettings",
	KeyValueSparkProps:"KeyValueSparkProps",
	ETLType:"ETLType",
	ETLStage:"ETLStage",
	ETLCmdType:"ETLCmdType",
	ETLCommand:"ETLCommand",
	SparkCommandBase:"SparkCommandBase",
	TableWriteMode:"TableWriteMode",
	BucketInfo:"BucketInfo",
	SparkTableInfo:"SparkTableInfo",
	DataSet:"DataSet",
	SQLTransform:"SQLTransform",
	SourceDataSet:"SourceDataSet",
	LoadTablesInfo:"LoadTablesInfo",
	LoadTableInfo:"LoadTableInfo",
	TargetDataSet:"TargetDataSet",
	SparkLoadTransSaveTable:"SparkLoadTransSaveTable",
	SparkLoadTransSaveTables:"SparkLoadTransSaveTables",
	SparkLoadTransCalcTable:"SparkLoadTransCalcTable",
	SparkFlowAnchor:"SparkFlowAnchor",
	SparkDeleteDeltaTableFiles:"SparkDeleteDeltaTableFiles",
	SparkSqlByJdbc:"SparkSqlByJdbc",
	SparkSetValueState:"SparkSetValueState",
	SparkGetValueState:"SparkGetValueState",
	SqlTblDef:"SqlTblDef",
	SqlCteDef:"SqlCteDef",
	TableUsage:"TableUsage",
	SQLIndxInfo:"SQLIndxInfo",
	SQLPartInfo:"SQLPartInfo",
	SQLDistInfo:"SQLDistInfo",
	SQLSortInfo:"SQLSortInfo",
	ETLFlow:"ETLFlow",
	ETLVersion:"ETLVersion",
	ETLCommandsInfoDto:"ETLCommandsInfoDto",
	ETLCommandStatus:"ETLCommandStatus",
	ETLCommandRunInfo:"ETLCommandRunInfo",
	ETLRunInfoDto:"ETLRunInfoDto",
	SparkRunInfo:"SparkRunInfo",
	DatabaseUsage:"DatabaseUsage",
	TemplateDatabaseType:"TemplateDatabaseType",
	LandingType:"LandingType",
	ReplicateTaskType:"ReplicateTaskType",
	ChangeTablesPostProcessing:"ChangeTablesPostProcessing",
	LandingZone:"LandingZone",
	DatalakeStorageType:"DatalakeStorageType",
	SnowflakeVariantType:"SnowflakeVariantType",
	DatabaseDtoPP:"DatabaseDtoPP",
	ArchiveSettings:"ArchiveSettings",
	HiveArchiveSettings:"HiveArchiveSettings",
	SparkArchiveSettings:"SparkArchiveSettings",
	DbBaseSettings:"DbBaseSettings",
	OracleDbSettings:"OracleDbSettings",
	RedshiftDbSettings:"RedshiftDbSettings",
	SnowflakeDbSettings:"SnowflakeDbSettings",
	SqlServerDbSettings:"SqlServerDbSettings",
	TeradataDbSettings:"TeradataDbSettings",
	AzureDWHDbSettings:"AzureDWHDbSettings",
	BigQueryDbSettings:"BigQueryDbSettings",
	HadoopAuthenticationType:"HadoopAuthenticationType",
	KDCServerType:"KDCServerType",
	HadoopAuthenticationSettings:"HadoopAuthenticationSettings",
	HadoopUserConfiguration:"HadoopUserConfiguration",
	HDInsightConfigurationBase:"HDInsightConfigurationBase",
	HDInsightConfiguration:"HDInsightConfiguration",
	HDInsightConfigurationRemoteAgent:"HDInsightConfigurationRemoteAgent",
	SSLConfiguration:"SSLConfiguration",
	KnoxConfiguration:"KnoxConfiguration",
	HadoopKerberosConfiguration:"HadoopKerberosConfiguration",
	DatabricksConfiguration:"DatabricksConfiguration",
	HiveDbSettings:"HiveDbSettings",
	DatabricksDbSettings:"DatabricksDbSettings",
	SparkDbSettings:"SparkDbSettings",
	DataStoreBase:"DataStoreBase",
	DataStoreHive:"DataStoreHive",
	DataStoreDatabricks:"DataStoreDatabricks",
	DataStoreHdfs:"DataStoreHdfs",
	DataStoreGen2:"DataStoreGen2",
	DataStoreS3:"DataStoreS3",
	DataStoreAzureBase:"DataStoreAzureBase",
	DataStoreAzureDataLake:"DataStoreAzureDataLake",
	DataStoreGoogleStorage:"DataStoreGoogleStorage",
	DataStoreGoogleBigQuery:"DataStoreGoogleBigQuery",
	DataStoreType:"DataStoreType",
	DatabaseDto:"DatabaseDto",
	FullConnectionString:"FullConnectionString",
	PhysicalEntity:"PhysicalEntity",
	ACDataType:"ACDataType",
	PhysicalInfo:"PhysicalInfo",
	Column:"Column",
	DwhColumn:"DwhColumn",
	ComposeDataTableRow:"ComposeDataTableRow",
	ComposeDataTable:"ComposeDataTable",
	TableType:"TableType",
	TableData:"TableData",
	ComposeBirDefTypeIds:"ComposeBirDefTypeIds",
	AzurePrimaryIndexType:"AzurePrimaryIndexType",
	RedshiftPrimaryIndexType:"RedshiftPrimaryIndexType",
	Dbms:"Dbms",
	ForeignKeyColumns:"ForeignKeyColumns",
	ForeignKey:"ForeignKey",
	ComposePrimaryKeySegment:"ComposePrimaryKeySegment",
	PrimaryKey:"PrimaryKey",
	SortKeyInfo:"SortKeyInfo",
	Index:"Index",
	DistributionInfo:"DistributionInfo",
	RedshiftDistributionInfo:"RedshiftDistributionInfo",
	TablePartitionInfo:"TablePartitionInfo",
	TableColumns:"TableColumns",
	PKData:"PKData",
	FKData:"FKData",
	KeyValuePkData:"KeyValuePkData",
	KeyValueFkData:"KeyValueFkData",
	KeyValueDistInfo:"KeyValueDistInfo",
	KeyValueTableColumns:"KeyValueTableColumns",
	KeyValueTableData:"KeyValueTableData",
	KeyValueTablePartitions:"KeyValueTablePartitions",
	DBMetaDataDto:"DBMetaDataDto",
	DiscoverTablePattern:"DiscoverTablePattern",
	TableSettings:"TableSettings",
	HiveTableSettings:"HiveTableSettings",
	KeyValueAlias:"KeyValueAlias",
	TableMetaData:"TableMetaData",
	ComposeSharedTypeIds:"ComposeSharedTypeIds",
	RceConnectionInfoItemBrowseType:"RceConnectionInfoItemBrowseType",
	RceConnectionInfoItemType:"RceConnectionInfoItemType",
	ReplicateServerConfigurationDto:"ReplicateServerConfigurationDto",
	ReplicateTimeouts:"ReplicateTimeouts",
	VersionControlType:"VersionControlType",
	VersionControlDto:"VersionControlDto",
	ComposeHostConfigurationDto:"ComposeHostConfigurationDto",
	LicenseType:"LicenseType",
	ClientTemplateVariables:"ClientTemplateVariables",
	TemplateVariablesDto:"TemplateVariablesDto",
	ReferencingTable:"ReferencingTable",
	ComposeLicense:"ComposeLicense",
	Product:"Product",
	DWH_TABLE_TYPE:"DWH_TABLE_TYPE",
	DmTableType:"DmTableType",
	TLOG_OPERATION_TYPE:"TLOG_OPERATION_TYPE",
	TLOG_TABLE_TYPE:"TLOG_TABLE_TYPE",
	POPULATE_OPERATION:"POPULATE_OPERATION",
	RULE_ACTION:"RULE_ACTION",
	CLEANSING_RULE_ACTION:"CLEANSING_RULE_ACTION",
	TASK_TYPE:"TASK_TYPE",
	CSV_TYPE:"CSV_TYPE",
	CSV_MODEL_FILE_TYPE:"CSV_MODEL_FILE_TYPE",
	CSV_MAPPING_FILE_TYPE:"CSV_MAPPING_FILE_TYPE",
	CSV_DATAMART_FILE_TYPE:"CSV_DATAMART_FILE_TYPE",
	CSV_DWH_TASK_FILE_TYPE:"CSV_DWH_TASK_FILE_TYPE",
	OPERATION_TYPE:"OPERATION_TYPE",
	RULE_TYPE:"RULE_TYPE",
	CustomeETLType:"CustomeETLType",
	ETLProcessType:"ETLProcessType",
	CompType:"CompType",
	db_object:"db_object",
	AggregatedFunction:"AggregatedFunction",
	DuplicateEtlType:"DuplicateEtlType",
	MappingType:"MappingType",
	ReferencingEntities:"ReferencingEntities",
	NamingConvention:"NamingConvention",
	DLNamingConvention:"DLNamingConvention",
	ACProjectSettings:"ACProjectSettings",
	DatalakesProjectSettings:"DatalakesProjectSettings",
	DatalakeDeploymentType:"DatalakeDeploymentType",
	DatalakeComputeType:"DatalakeComputeType",
	DeleteType:"DeleteType",
	ProjectType:"ProjectType",
	ProjectEnvironment:"ProjectEnvironment",
	EnvironmentType:"EnvironmentType",
	TableModifierTypes:"TableModifierTypes",
	TableModifiers:"TableModifiers",
	ProjectTableModifiers:"ProjectTableModifiers",
	BaseResp:"BaseResp",
	BaseDDLResp:"BaseDDLResp",
	AzureDistributionInfo:"AzureDistributionInfo",
	CheckProjectErrors:"CheckProjectErrors",
	CompareDwhErrors:"CompareDwhErrors",
	ValidateDMErros:"ValidateDMErros",
	CheckProjectSeverity:"CheckProjectSeverity",
	CheckProjectResolve:"CheckProjectResolve",
	CompareDMError:"CompareDMError",
	CheckProjectResult:"CheckProjectResult",
	CompareDWHResult:"CompareDWHResult",
	CompareDMResult:"CompareDMResult",
	LandingInfo:"LandingInfo",
	DataMartInfoForLineage:"DataMartInfoForLineage",
	DWHLineageInfo:"DWHLineageInfo",
	DataMartLineageInfo:"DataMartLineageInfo",
	DwhIndexType:"DwhIndexType",
	TdwmColumn:"TdwmColumn",
	TdwmTable:"TdwmTable",
	TdwmColumnsDto:"TdwmColumnsDto",
	TdwmTablesDto:"TdwmTablesDto",
	PublicViewsSettings:"PublicViewsSettings",
	ProjectInfo:"ProjectInfo",
	GenerateUpgradeScriptsParams:"GenerateUpgradeScriptsParams",
	GenerateUpgradeScriptsRsp:"GenerateUpgradeScriptsRsp",
	KeyValueScripName:"KeyValueScripName",
	AdjustDlProjectDeploymentForMigrationParams:"AdjustDlProjectDeploymentForMigrationParams",
	CreateDLDataMigrationScriptParams:"CreateDLDataMigrationScriptParams",
	ListProjectsParams:"ListProjectsParams",
	ProjectListRsp:"ProjectListRsp",
	CreateProjectParams:"CreateProjectParams",
	CreateProjectReq:"CreateProjectReq",
	CopyProjectParams:"CopyProjectParams",
	CopyProjectReq:"CopyProjectReq",
	DeleteProjectParams:"DeleteProjectParams",
	CloseProjectParams:"CloseProjectParams",
	GetProjectInfoParams:"GetProjectInfoParams",
	ProjectInfoRsp:"ProjectInfoRsp",
	GetCurrentCallMessagesParams:"GetCurrentCallMessagesParams",
	GetCurrentCallMessagesRsp:"GetCurrentCallMessagesRsp",
	StatusMessage:"StatusMessage",
	MessageType:"MessageType",
	ResetProjectParams:"ResetProjectParams",
	ResetProjectReq:"ResetProjectReq",
	ResetProjectRsp:"ResetProjectRsp",
	GetTransformationUsageParams:"GetTransformationUsageParams",
	GetTransformationUsageResp:"GetTransformationUsageResp",
	TxUsageBase:"TxUsageBase",
	UsageInDerivedAttribute:"UsageInDerivedAttribute",
	UsageInTransformation:"UsageInTransformation",
	UsageInMapping:"UsageInMapping",
	UsageInMappingColumnExpression:"UsageInMappingColumnExpression",
	UsageInMappingColumnLookup:"UsageInMappingColumnLookup",
	UsageInMappingFilter:"UsageInMappingFilter",
	UsageInMappingDataQuality:"UsageInMappingDataQuality",
	UsageInMappingDataCleansing:"UsageInMappingDataCleansing",
	UsageInDataMartBase:"UsageInDataMartBase",
	UsageInDataMartStarSchemaColumn:"UsageInDataMartStarSchemaColumn",
	UsageInDataMartStarSchemaFilter:"UsageInDataMartStarSchemaFilter",
	UsageInDataMartStarSchemaAggregateFilter:"UsageInDataMartStarSchemaAggregateFilter",
	UsageInDataMartDimensionColumn:"UsageInDataMartDimensionColumn",
	UsageInDataMartDimensionFilter:"UsageInDataMartDimensionFilter",
	RenameReusableTransformationParams:"RenameReusableTransformationParams",
	ReusableTransformationsDto:"ReusableTransformationsDto",
	ReusableTransformation:"ReusableTransformation",
	ReusableTransformationParam:"ReusableTransformationParam",
	CreateDataWarehouseParams:"CreateDataWarehouseParams",
	CreateDataWarehouseReq:"CreateDataWarehouseReq",
	CreateDataWarehouseResp:"CreateDataWarehouseResp",
	GenerateDWHETLsParams:"GenerateDWHETLsParams",
	GenerateDWHETLsReq:"GenerateDWHETLsReq",
	GenerateDWHETLsResp:"GenerateDWHETLsResp",
	ETLInfoDto:"ETLInfoDto",
	GetETLsParams:"GetETLsParams",
	GetETLsResp:"GetETLsResp",
	StopETLParams:"StopETLParams",
	PopulateETLSetParams:"PopulateETLSetParams",
	PopulateETLSetReq:"PopulateETLSetReq",
	PIData:"PIData",
	DataMartCohort:"DataMartCohort",
	UpdateETLParams:"UpdateETLParams",
	UpdateETLReq:"UpdateETLReq",
	UpdateETLResp:"UpdateETLResp",
	CopyETLParams:"CopyETLParams",
	CopyETLReq:"CopyETLReq",
	CopyETLReqETLResp:"CopyETLReqETLResp",
	DeleteETLParams:"DeleteETLParams",
	DeleteETLResp:"DeleteETLResp",
	PILogInfo:"PILogInfo",
	PILogData:"PILogData",
	GetExistingPILogsParams:"GetExistingPILogsParams",
	GetExistingPILogsResp:"GetExistingPILogsResp",
	InspectETLParams:"InspectETLParams",
	InspectETLResp:"InspectETLResp",
	InspectETL:"InspectETL",
	UpdateInspectETLParams:"UpdateInspectETLParams",
	UpdateInspectETLReq:"UpdateInspectETLReq",
	UpdateInspectETLResp:"UpdateInspectETLResp",
	InspectETLFlowParams:"InspectETLFlowParams",
	InspectETLFlowResp:"InspectETLFlowResp",
	InspectETLFlow:"InspectETLFlow",
	GetRunnerLogParams:"GetRunnerLogParams",
	GetRunnerLogResp:"GetRunnerLogResp",
	RunnerLog:"RunnerLog",
	ListCustomETLParams:"ListCustomETLParams",
	ListCustomETLReq:"ListCustomETLReq",
	ListCustomETLRsp:"ListCustomETLRsp",
	CustomETLDto:"CustomETLDto",
	CustomETLDtoPP:"CustomETLDtoPP",
	AddCustomETLParams:"AddCustomETLParams",
	AddCustomETLReq:"AddCustomETLReq",
	AddCustomETLRsp:"AddCustomETLRsp",
	DeleteCustomETLParams:"DeleteCustomETLParams",
	DeleteCustomResp:"DeleteCustomResp",
	GetCustomETLTablesParams:"GetCustomETLTablesParams",
	GetCustomETLTablesReq:"GetCustomETLTablesReq",
	CustomETLTableData:"CustomETLTableData",
	GetCustomETLTablesRsp:"GetCustomETLTablesRsp",
	GetCustomETLColumnsParams:"GetCustomETLColumnsParams",
	GetCustomETLColumnsReq:"GetCustomETLColumnsReq",
	GetCustomETLColumnsRsp:"GetCustomETLColumnsRsp",
	GetDWHTablesParams:"GetDWHTablesParams",
	GetDWHTablesRsp:"GetDWHTablesRsp",
	DWHTable:"DWHTable",
	DatawarehouseGetDatabaseInfoParams:"DatawarehouseGetDatabaseInfoParams",
	DatawarehouseGetDatabaseInfoRsp:"DatawarehouseGetDatabaseInfoRsp",
	RecreateViewsParams:"RecreateViewsParams",
	RecreateViewsResp:"RecreateViewsResp",
	DropTablesParams:"DropTablesParams",
	DropTablesReq:"DropTablesReq",
	DropTablesResp:"DropTablesResp",
	CleanTablesParams:"CleanTablesParams",
	PutReplicateServerSettingsParams:"PutReplicateServerSettingsParams",
	DeleteReplicateServerSettingsParams:"DeleteReplicateServerSettingsParams",
	GetReplicateServerSettingsParams:"GetReplicateServerSettingsParams",
	GetReplicateServerSettingsRsp:"GetReplicateServerSettingsRsp",
	GetReplicateServersParams:"GetReplicateServersParams",
	GetReplicateServersRsp:"GetReplicateServersRsp",
	GetReplicateTasksParams:"GetReplicateTasksParams",
	GetReplicateTasksRsp:"GetReplicateTasksRsp",
	TestReplicateConnectionParams:"TestReplicateConnectionParams",
	TestReplicateConnectionRsp:"TestReplicateConnectionRsp",
	ListDatabasesParams:"ListDatabasesParams",
	DatabaseListRsp:"DatabaseListRsp",
	GetDatabaseParams:"GetDatabaseParams",
	GetDatabaseRsp:"GetDatabaseRsp",
	AddDatabaseParams:"AddDatabaseParams",
	AddDatabaseReq:"AddDatabaseReq",
	AddDatabaseRsp:"AddDatabaseRsp",
	AddDwhDatabaseParams:"AddDwhDatabaseParams",
	AddDwhDatabaseReq:"AddDwhDatabaseReq",
	AddDwhDatabaseRsp:"AddDwhDatabaseRsp",
	DeleteDatabaseParams:"DeleteDatabaseParams",
	DeleteDatabaseRsp:"DeleteDatabaseRsp",
	DeleteDwhDatabaseParams:"DeleteDwhDatabaseParams",
	DeleteDwhDatabaseRsp:"DeleteDwhDatabaseRsp",
	PutWorkFlowParams:"PutWorkFlowParams",
	PutWorkFlowReq:"PutWorkFlowReq",
	UpdateDatabaseParams:"UpdateDatabaseParams",
	UpdateDatabaseReq:"UpdateDatabaseReq",
	UpdateDatabaseRsp:"UpdateDatabaseRsp",
	UpdateDwhDatabaseParams:"UpdateDwhDatabaseParams",
	UpdateDwhDatabaseReq:"UpdateDwhDatabaseReq",
	UpdateDwhDatabaseRsp:"UpdateDwhDatabaseRsp",
	Role:"Role",
	DatabaseProvider:"DatabaseProvider",
	ListDatabaseProvidersParams:"ListDatabaseProvidersParams",
	DatabaseProviderListRsp:"DatabaseProviderListRsp",
	AddTablesToModelParams:"AddTablesToModelParams",
	AddTablesToModelReq:"AddTablesToModelReq",
	AddToModelStatus:"AddToModelStatus",
	AddTablesToModelRsp:"AddTablesToModelRsp",
	GetDatabaseTablesParams:"GetDatabaseTablesParams",
	GetDatabaseTablesReq:"GetDatabaseTablesReq",
	GetDatabaseTablesRsp:"GetDatabaseTablesRsp",
	GetDatabaseSchemasParams:"GetDatabaseSchemasParams",
	GetDatabaseSchemasRsp:"GetDatabaseSchemasRsp",
	ClearDBMetaDataParams:"ClearDBMetaDataParams",
	FillStorageMetadataFromDatabaseParams:"FillStorageMetadataFromDatabaseParams",
	GetMaxNameLengthParams:"GetMaxNameLengthParams",
	GetMaxNameLengthRsp:"GetMaxNameLengthRsp",
	TestConnectionParams:"TestConnectionParams",
	TestConnectionRsp:"TestConnectionRsp",
	TestConnectionReq:"TestConnectionReq",
	ConnectionStringTestType:"ConnectionStringTestType",
	TestRemoteConnectionParams:"TestRemoteConnectionParams",
	TestConnectionByIdParams:"TestConnectionByIdParams",
	ListCatalogsParams:"ListCatalogsParams",
	ListCatalogsReq:"ListCatalogsReq",
	ListCatalogsRsp:"ListCatalogsRsp",
	ListSchemasParams:"ListSchemasParams",
	ListSchemasReq:"ListSchemasReq",
	ListSchemasRsp:"ListSchemasRsp",
	ListRegionsParams:"ListRegionsParams",
	ListRegionsReq:"ListRegionsReq",
	ListRegionsRsp:"ListRegionsRsp",
	ListSnowflakeWarehousesParams:"ListSnowflakeWarehousesParams",
	ListSnowflakeWarehousesReq:"ListSnowflakeWarehousesReq",
	ListSnowflakeWarehousesRsp:"ListSnowflakeWarehousesRsp",
	SnowflakeWarehouse:"SnowflakeWarehouse",
	ListTableColumnsParams:"ListTableColumnsParams",
	ListTableColumnsRsp:"ListTableColumnsRsp",
	ListDescribeQueryColumnsParams:"ListDescribeQueryColumnsParams",
	ListDescribeQueryColumnsRsp:"ListDescribeQueryColumnsRsp",
	ListDescribeQueryColumnsReq:"ListDescribeQueryColumnsReq",
	ProjectTaskStatus:"ProjectTaskStatus",
	ProjectStatus:"ProjectStatus",
	CommandTaskStatus:"CommandTaskStatus",
	ProjectEtlStatus:"ProjectEtlStatus",
	DWHProjectEtlStatus:"DWHProjectEtlStatus",
	DmProjectEtlStatus:"DmProjectEtlStatus",
	CanNotPopulateReason:"CanNotPopulateReason",
	CommitVersionControlParams:"CommitVersionControlParams",
	CommitVersionControlReq:"CommitVersionControlReq",
	GetRevisionHistoryVersionControlParams:"GetRevisionHistoryVersionControlParams",
	GetRevisionHistoryVersionControlRsp:"GetRevisionHistoryVersionControlRsp",
	RevisionHistory:"RevisionHistory",
	RevertToRevisionParams:"RevertToRevisionParams",
	RevertToRevisionReq:"RevertToRevisionReq",
	DownloadRevisionToPackageParams:"DownloadRevisionToPackageParams",
	CreateDeploymentPackageParams:"CreateDeploymentPackageParams",
	UploadDeploymentPackageParams:"UploadDeploymentPackageParams",
	UploadDeploymentPackageRsp:"UploadDeploymentPackageRsp",
	DeployDeploymentPackageParams:"DeployDeploymentPackageParams",
	DeployDeploymentPackageReq:"DeployDeploymentPackageReq",
	DeployDeploymentPackageRsp:"DeployDeploymentPackageRsp",
	CreateDiagnosticsPackageParams:"CreateDiagnosticsPackageParams",
	GetProjectStatusParams:"GetProjectStatusParams",
	GetProjectStatusRsp:"GetProjectStatusRsp",
	EntityDto:"EntityDto",
	EntityFull:"EntityFull",
	RedshiftSortType:"RedshiftSortType",
	EntityTableModifierType:"EntityTableModifierType",
	PhysicalPropertiesDto:"PhysicalPropertiesDto",
	HivePhysicalProperties:"HivePhysicalProperties",
	HivePartitionInfo:"HivePartitionInfo",
	RedshiftPhysicalProperties:"RedshiftPhysicalProperties",
	RedshiftDistInfo:"RedshiftDistInfo",
	RedshiftSortInfo:"RedshiftSortInfo",
	AzurePhysicalProperties:"AzurePhysicalProperties",
	AzureDistInfo:"AzureDistInfo",
	PhysicalColumnInfo:"PhysicalColumnInfo",
	DocItem:"DocItem",
	NodesList:"NodesList",
	LeafsList:"LeafsList",
	LeafList:"LeafList",
	NodesLeafList:"NodesLeafList",
	EntityDWHLineageInfoDocumentation:"EntityDWHLineageInfoDocumentation",
	ObjectList:"ObjectList",
	DocDomainAttributeDto:"DocDomainAttributeDto",
	DocTransformationDto:"DocTransformationDto",
	DocumentationModel:"DocumentationModel",
	TableColumnExtended:"TableColumnExtended",
	HistoryType:"HistoryType",
	FactType:"FactType",
	TableColumnDto:"TableColumnDto",
	TableColumnDtoPP:"TableColumnDtoPP",
	DomainAttributeDto:"DomainAttributeDto",
	AddEntityParams:"AddEntityParams",
	AddEntityResp:"AddEntityResp",
	UpdateEntityParams:"UpdateEntityParams",
	UpdateEntityResp:"UpdateEntityResp",
	DeleteEntityParams:"DeleteEntityParams",
	DeleteDomainAttributesParams:"DeleteDomainAttributesParams",
	DeleteDomainAttributesReq:"DeleteDomainAttributesReq",
	DeleteEntitiesParams:"DeleteEntitiesParams",
	DeleteEntitiesReq:"DeleteEntitiesReq",
	AddTableColumnParams:"AddTableColumnParams",
	AddTableColumnResp:"AddTableColumnResp",
	AddTableRelationParams:"AddTableRelationParams",
	AddTableRelationReq:"AddTableRelationReq",
	AddTableRelationResp:"AddTableRelationResp",
	ReplaceColumn:"ReplaceColumn",
	UpdateTableColumnParams:"UpdateTableColumnParams",
	UpdateTableColumnResp:"UpdateTableColumnResp",
	UpdateTableColumnsParams:"UpdateTableColumnsParams",
	UpdateTableColumnsReq:"UpdateTableColumnsReq",
	UpdateTableColumnsResp:"UpdateTableColumnsResp",
	DuplicateTableColumnToHubAndSatParams:"DuplicateTableColumnToHubAndSatParams",
	DuplicateTableColumnToHubAndSatReq:"DuplicateTableColumnToHubAndSatReq",
	DuplicateTableColumnToHubAndSatResp:"DuplicateTableColumnToHubAndSatResp",
	CopyEntityParams:"CopyEntityParams",
	CopyEntityReq:"CopyEntityReq",
	CopyEntityResp:"CopyEntityResp",
	DeleteTableColumnsParams:"DeleteTableColumnsParams",
	DeleteTableColumnsReq:"DeleteTableColumnsReq",
	DeleteTableColumnsResp:"DeleteTableColumnsResp",
	InvalidRoleForDelete:"InvalidRoleForDelete",
	AddDomainAttributeParams:"AddDomainAttributeParams",
	AddDomainAttributeResp:"AddDomainAttributeResp",
	UpdateDomainAttributeParams:"UpdateDomainAttributeParams",
	UpdateDomainAttributeResp:"UpdateDomainAttributeResp",
	GetModelAttributesReferencesParams:"GetModelAttributesReferencesParams",
	GetModelAttributesReferencesResp:"GetModelAttributesReferencesResp",
	AddDateTimeModelParams:"AddDateTimeModelParams",
	AddDateTimeModelResp:"AddDateTimeModelResp",
	GetDWHLineageForEntityParams:"GetDWHLineageForEntityParams",
	GetDWHLineageForEntityResp:"GetDWHLineageForEntityResp",
	GetDWHLineageForAttributeParams:"GetDWHLineageForAttributeParams",
	GetDWHLineageForAttributeResp:"GetDWHLineageForAttributeResp",
	GetDMLineageForEntityParams:"GetDMLineageForEntityParams",
	GetDMLineageForEntityResp:"GetDMLineageForEntityResp",
	GetDMLineageForAttributeParams:"GetDMLineageForAttributeParams",
	GetDMLineageForAttributeReq:"GetDMLineageForAttributeReq",
	GetDMLineageForAttributeResp:"GetDMLineageForAttributeResp",
	GetPhysicalDMTablesParams:"GetPhysicalDMTablesParams",
	GetPhysicalDMTablesRsp:"GetPhysicalDMTablesRsp",
	PhysicalDMTable:"PhysicalDMTable",
	GetSelectPhysicalDMTableStmtParams:"GetSelectPhysicalDMTableStmtParams",
	GetSelectPhysicalDMTableStmtRsp:"GetSelectPhysicalDMTableStmtRsp",
	GetPhysicalEntitiesParams:"GetPhysicalEntitiesParams",
	GetPhysicalEntitiesRsp:"GetPhysicalEntitiesRsp",
	GetPhysicalEntityMetaDataParams:"GetPhysicalEntityMetaDataParams",
	GetPhysicalEntityMetaDataRsp:"GetPhysicalEntityMetaDataRsp",
	GetDmPhysicalEntityMetaDataParams:"GetDmPhysicalEntityMetaDataParams",
	GetDmPhysicalEntityMetaDataReq:"GetDmPhysicalEntityMetaDataReq",
	GetDmPhysicalEntityMetaDataRsp:"GetDmPhysicalEntityMetaDataRsp",
	PhysicalEntitySelectFilters:"PhysicalEntitySelectFilters",
	GetDmPhysicalPropertiesParams:"GetDmPhysicalPropertiesParams",
	GetDmPhysicalPropertiesReq:"GetDmPhysicalPropertiesReq",
	GetDmPhysicalPropertiesRsp:"GetDmPhysicalPropertiesRsp",
	GetPhysicalEntitySelectStatementParams:"GetPhysicalEntitySelectStatementParams",
	GetPhysicalEntitySelectStatementRsp:"GetPhysicalEntitySelectStatementRsp",
	GetDLViewsEntitySelectStatementParams:"GetDLViewsEntitySelectStatementParams",
	KeyValueDLViewSelectStatement:"KeyValueDLViewSelectStatement",
	GetDLViewsEntitySelectStatementRsp:"GetDLViewsEntitySelectStatementRsp",
	GenerateLandingScriptParams:"GenerateLandingScriptParams",
	GetEntitiesParams:"GetEntitiesParams",
	GetEntitiesReq:"GetEntitiesReq",
	GetEntitiesRsp:"GetEntitiesRsp",
	SetBackdatingOptionsParams:"SetBackdatingOptionsParams",
	ImportEntitiesFromProjectParams:"ImportEntitiesFromProjectParams",
	ImportEntitiesFromProjectReq:"ImportEntitiesFromProjectReq",
	GetEntityMappingsParams:"GetEntityMappingsParams",
	GetEntityMappingsReq:"GetEntityMappingsReq",
	GetEntityMappingsRsp:"GetEntityMappingsRsp",
	EntityMappingInfo:"EntityMappingInfo",
	MappingInfo:"MappingInfo",
	GetModelTreeNodesParams:"GetModelTreeNodesParams",
	GetModelTreeNodesRsp:"GetModelTreeNodesRsp",
	KeyValueDomainAttribute:"KeyValueDomainAttribute",
	GetDomainAttributesParams:"GetDomainAttributesParams",
	GetDomainAttributesReq:"GetDomainAttributesReq",
	GetDomainAttributesRsp:"GetDomainAttributesRsp",
	GetTableColumnsParams:"GetTableColumnsParams",
	GetTableColumnsRsp:"GetTableColumnsRsp",
	GetErwinTablesParams:"GetErwinTablesParams",
	GetErwinTablesReq:"GetErwinTablesReq",
	GetErwinTablesRsp:"GetErwinTablesRsp",
	ImportFromErwinParams:"ImportFromErwinParams",
	ImportFromErwinReq:"ImportFromErwinReq",
	ErwinModelType:"ErwinModelType",
	CheckModelParams:"CheckModelParams",
	GetCheckModelRsp:"GetCheckModelRsp",
	CheckETLParams:"CheckETLParams",
	GetCheckETLRsp:"GetCheckETLRsp",
	GetMappingsParams:"GetMappingsParams",
	GetMappingsReq:"GetMappingsReq",
	GetMappingsRsp:"GetMappingsRsp",
	EntityMapping:"EntityMapping",
	EtlItemAction:"EtlItemAction",
	RuleBase:"RuleBase",
	DataQualityRule:"DataQualityRule",
	CleansingRule:"CleansingRule",
	MappingDto:"MappingDto",
	MappingDtoPP:"MappingDtoPP",
	MappingNullBehaviour:"MappingNullBehaviour",
	FieldMappingType:"FieldMappingType",
	EtlMappingType:"EtlMappingType",
	LookupExpressionMode:"LookupExpressionMode",
	LookupJoinField:"LookupJoinField",
	LookupField:"LookupField",
	MappingField:"MappingField",
	GetMappingFieldsParams:"GetMappingFieldsParams",
	GetMappingFieldsRsp:"GetMappingFieldsRsp",
	StagingColumn:"StagingColumn",
	GetStagingColumnsParams:"GetStagingColumnsParams",
	GetStagingColumnsRsp:"GetStagingColumnsRsp",
	AddMappingParams:"AddMappingParams",
	AddMappingReq:"AddMappingReq",
	AddMappingResp:"AddMappingResp",
	DeleteMappingParams:"DeleteMappingParams",
	DeleteMappingResp:"DeleteMappingResp",
	UpdateMappingParams:"UpdateMappingParams",
	UpdateMappingReq:"UpdateMappingReq",
	UpdateMappingResp:"UpdateMappingResp",
	DataMartInfoDto:"DataMartInfoDto",
	DefaultDatamartConnection:"DefaultDatamartConnection",
	FactDimStatus:"FactDimStatus",
	FactDimColumn:"FactDimColumn",
	GenerateDMAEtlsParams:"GenerateDMAEtlsParams",
	PrepareAllDataMartsParams:"PrepareAllDataMartsParams",
	PrepareAllDataMartsReq:"PrepareAllDataMartsReq",
	PrepareDM:"PrepareDM",
	PrepareAllDataMartsResp:"PrepareAllDataMartsResp",
	ListDataMartsParams:"ListDataMartsParams",
	ListDataMartsRsp:"ListDataMartsRsp",
	GetDMAForDisplayParams:"GetDMAForDisplayParams",
	GetDMAForDisplayReq:"GetDMAForDisplayReq",
	GetAggregatedFactColumnsParams:"GetAggregatedFactColumnsParams",
	GetAggregatedFactColumnsReq:"GetAggregatedFactColumnsReq",
	GetAggregatedFactColumnsResp:"GetAggregatedFactColumnsResp",
	GetDimStarSchemasParams:"GetDimStarSchemasParams",
	GetDimStarSchemasRsp:"GetDimStarSchemasRsp",
	LinkStarSchemaInfo:"LinkStarSchemaInfo",
	AddDimesnionToStarSchemasParams:"AddDimesnionToStarSchemasParams",
	AddDimesnionToStarSchemasReq:"AddDimesnionToStarSchemasReq",
	GetDMATreeNodesParams:"GetDMATreeNodesParams",
	GetDMATreeNodesRsp:"GetDMATreeNodesRsp",
	TreeNodeLevel:"TreeNodeLevel",
	TreeNodeCategory:"TreeNodeCategory",
	TreeNode:"TreeNode",
	StarSchemaType:"StarSchemaType",
	CreateStarSchemaParams:"CreateStarSchemaParams",
	CreateStarSchemaReq:"CreateStarSchemaReq",
	CreateStarSchemaResp:"CreateStarSchemaResp",
	CreateDimensionParams:"CreateDimensionParams",
	CreateDimensionReq:"CreateDimensionReq",
	CreateDimensionResp:"CreateDimensionResp",
	CopyDimensionsParams:"CopyDimensionsParams",
	CopyDimensionsReq:"CopyDimensionsReq",
	DeleteStarSchemaParams:"DeleteStarSchemaParams",
	DeleteStarSchemaReq:"DeleteStarSchemaReq",
	DeleteDimensionParams:"DeleteDimensionParams",
	DeleteDimensionReq:"DeleteDimensionReq",
	CreateDataMartParams:"CreateDataMartParams",
	CreateDataMartReq:"CreateDataMartReq",
	CreateDataMartResp:"CreateDataMartResp",
	DeleteDataMartParams:"DeleteDataMartParams",
	UpdateDataMartParams:"UpdateDataMartParams",
	UpdateDataMartReq:"UpdateDataMartReq",
	UpdateDataMartRsp:"UpdateDataMartRsp",
	CreatePhysicalDMAParams:"CreatePhysicalDMAParams",
	CreatePhysicalDMAResp:"CreatePhysicalDMAResp",
	DropDataMartTablesParams:"DropDataMartTablesParams",
	CleanDataMartTablesParams:"CleanDataMartTablesParams",
	FactDimInfo:"FactDimInfo",
	FactDimDto:"FactDimDto",
	Expression:"Expression",
	AliasParams:"AliasParams",
	FactDimDtoPP:"FactDimDtoPP",
	KeyValueTreeNode:"KeyValueTreeNode",
	GetDimFactsForEditParams:"GetDimFactsForEditParams",
	GetDimFactsForEditRsp:"GetDimFactsForEditRsp",
	EditDataMartParams:"EditDataMartParams",
	EditDataMartReq:"EditDataMartReq",
	GetTransactionFactTreeParams:"GetTransactionFactTreeParams",
	GetTransactionFactTreeRsp:"GetTransactionFactTreeRsp",
	GetDMAColumnsParams:"GetDMAColumnsParams",
	GetDMAColumnsRsp:"GetDMAColumnsRsp",
	StarSchemaColumnsInfo:"StarSchemaColumnsInfo",
	DMATableInfo:"DMATableInfo",
	CheckDataMartParams:"CheckDataMartParams",
	GetCheckDataMartRsp:"GetCheckDataMartRsp",
	ComposeLoggerModules:"ComposeLoggerModules",
	ComposeLoggers:"ComposeLoggers",
	InspectTableParams:"InspectTableParams",
	InspectQueryParams:"InspectQueryParams",
	InspectLookupParams:"InspectLookupParams",
	InspectLookupReq:"InspectLookupReq",
	InspectPopulateDWHParams:"InspectPopulateDWHParams",
	GetMappingErrorRowsDataParams:"GetMappingErrorRowsDataParams",
	InspectPopulateDMParams:"InspectPopulateDMParams",
	AdjustDWHParams:"AdjustDWHParams",
	AdjustDWHResp:"AdjustDWHResp",
	CompareDWHParams:"CompareDWHParams",
	CompareDWHResp:"CompareDWHResp",
	AdjustDMParams:"AdjustDMParams",
	AdjustDMResp:"AdjustDMResp",
	CompareDMParams:"CompareDMParams",
	CompareDMResp:"CompareDMResp",
	ETLCommandsStatus:"ETLCommandsStatus",
	ETLStatus:"ETLStatus",
	ReloadDMParams:"ReloadDMParams",
	ReloadDMResp:"ReloadDMResp",
	GetProjectMonitorDataParams:"GetProjectMonitorDataParams",
	GetProjectMonitorDataResp:"GetProjectMonitorDataResp",
	TaskMonitorData:"TaskMonitorData",
	GetProjectTaskMonitorDataParams:"GetProjectTaskMonitorDataParams",
	GetProjectTaskMonitorDataResp:"GetProjectTaskMonitorDataResp",
	FactDimDenormalizedTablesParams:"FactDimDenormalizedTablesParams",
	FactDimDenormalizedTablesResp:"FactDimDenormalizedTablesResp",
	InspectRelatedKeyParams:"InspectRelatedKeyParams",
	InspectRelatedKeyReq:"InspectRelatedKeyReq",
	InspectRelatedKeyResp:"InspectRelatedKeyResp",
	AddEntityTableMappingParams:"AddEntityTableMappingParams",
	AddEntityTableMappingReq:"AddEntityTableMappingReq",
	EntityTableMapping:"EntityTableMapping",
	AttributeColumnMappingFlags:"AttributeColumnMappingFlags",
	AttributeColumnMappingDto:"AttributeColumnMappingDto",
	EntityGlobalMappingDto:"EntityGlobalMappingDto",
	DDLType:"DDLType",
	ReplicateDDLColumn:"ReplicateDDLColumn",
	KeyValueColumnDetails:"KeyValueColumnDetails",
	ReplicateDDLDetails:"ReplicateDDLDetails",
	ReplicateDDLHistoryResult:"ReplicateDDLHistoryResult",
	KeyValueSchemaEvolutionContext:"KeyValueSchemaEvolutionContext",
	SchemaEvolutionContextDicDto:"SchemaEvolutionContextDicDto",
	SchemaEvolutionAction:"SchemaEvolutionAction",
	AutomaticSchemaEvolutionScanParams:"AutomaticSchemaEvolutionScanParams",
	AutomaticSchemaEvolutionScanReq:"AutomaticSchemaEvolutionScanReq",
	DDLChangeResults:"DDLChangeResults",
	KeyValueSchemaEvolutionChangesList:"KeyValueSchemaEvolutionChangesList",
	AutomaticSchemaEvolutionScanResp:"AutomaticSchemaEvolutionScanResp",
	AutomaticSchemaEvolutionApplyParams:"AutomaticSchemaEvolutionApplyParams",
	AutomaticSchemaEvolutionApplyResp:"AutomaticSchemaEvolutionApplyResp",
	AutomaticSchemaEvolutionApplyReq:"AutomaticSchemaEvolutionApplyReq",
	DeleteEntityTableMappingParams:"DeleteEntityTableMappingParams",
	DeleteEntityTableMappingReq:"DeleteEntityTableMappingReq",
	GetComposeTaskInfoParams:"GetComposeTaskInfoParams",
	GetComposeTaskInfoResp:"GetComposeTaskInfoResp",
	GetEntityTableMappingParams:"GetEntityTableMappingParams",
	GetEntityTableMappingResp:"GetEntityTableMappingResp",
	GetUnMappedEntitiesParams:"GetUnMappedEntitiesParams",
	GetUnMappedEntitiesResp:"GetUnMappedEntitiesResp",
	SetEntitiesToMapParams:"SetEntitiesToMapParams",
	SetEntitiesToMapReq:"SetEntitiesToMapReq",
	GetGlobalEntityAttributesParams:"GetGlobalEntityAttributesParams",
	GetGlobalEntityAttributesResp:"GetGlobalEntityAttributesResp",
	ErwinEntity:"ErwinEntity",
	GetAttributeColumnMappingParams:"GetAttributeColumnMappingParams",
	GetAttributeColumnMappingResp:"GetAttributeColumnMappingResp",
	AddAttributeColumnMappingParams:"AddAttributeColumnMappingParams",
	AddAttributeColumnMappingReq:"AddAttributeColumnMappingReq",
	DeleteAttributeColumnMappingParams:"DeleteAttributeColumnMappingParams",
	DeleteAttributeColumnMappingReq:"DeleteAttributeColumnMappingReq",
	EtlCommandExecutionData:"EtlCommandExecutionData",
	ReplicateTaskExecutorDto:"ReplicateTaskExecutorDto",
	CommandTaskExecutorDto:"CommandTaskExecutorDto",
	ComposeEventTypes:"ComposeEventTypes",
	ComposeEventId:"ComposeEventId",
	ComposeTaskNotificationVariables:"ComposeTaskNotificationVariables",
	ComposeWorkflowNotificationVariables:"ComposeWorkflowNotificationVariables",
	ComposeAuditRecord:"ComposeAuditRecord",
	ComposeAuditErrorType:"ComposeAuditErrorType",
	GetExpressionEditorParametersParams:"GetExpressionEditorParametersParams",
	GetExpressionEditorParametersReq:"GetExpressionEditorParametersReq",
	GetExpressionEditorParametersResp:"GetExpressionEditorParametersResp",
	DescribeExpressionParams:"DescribeExpressionParams",
	DescribeExpressionReq:"DescribeExpressionReq",
	DescribeExpressionResp:"DescribeExpressionResp",
	expression_parameters:"expression_parameters",
	TestExpressionParams:"TestExpressionParams",
	TestExpressionResp:"TestExpressionResp",
	TestExpressionReq:"TestExpressionReq",
	DdlGetScriptDataParams:"DdlGetScriptDataParams",
	ScriptFileData:"ScriptFileData",
	GetDdlScriptDataResp:"GetDdlScriptDataResp",
	ScriptListFilesParams:"ScriptListFilesParams",
	ScriptListFilesResp:"ScriptListFilesResp",
	DdlDownloadScriptFileParams:"DdlDownloadScriptFileParams",
	EvaluateExpressionParams:"EvaluateExpressionParams",
	EvaluateExpressionReq:"EvaluateExpressionReq",
	ImportProjectRepositoryParams:"ImportProjectRepositoryParams",
	ExportRepositoryWithoutEnvSpecificsParams:"ExportRepositoryWithoutEnvSpecificsParams",
	GetProfileTableParams:"GetProfileTableParams",
	GetProfileTableReq:"GetProfileTableReq",
	GetProfileTableRsp:"GetProfileTableRsp",
	DataProfiler:"DataProfiler",
	GetInspectProfilingTableParams:"GetInspectProfilingTableParams",
	GetInspectProfilingTableReq:"GetInspectProfilingTableReq",
	DataProfilingColumnType:"DataProfilingColumnType",
	EnvironmentVariablesFileType:"EnvironmentVariablesFileType",
	GenerateWatermarkScriptsParams:"GenerateWatermarkScriptsParams",
	GenerateWatermarkScriptsRsp:"GenerateWatermarkScriptsRsp",
	ResetWatermarkParams:"ResetWatermarkParams",
	DeleteEnvironmentVariableParams:"DeleteEnvironmentVariableParams",
	ApplyEnvironmentVariablesParams:"ApplyEnvironmentVariablesParams",
	SetEnvironmentVariablesParams:"SetEnvironmentVariablesParams",
	SetEnvironmentVariablesReq:"SetEnvironmentVariablesReq",
	GetEnvironmentVariablesFileParams:"GetEnvironmentVariablesFileParams",
	SetEnvironmentVariablesFileParams:"SetEnvironmentVariablesFileParams",
	ExportModelToCsvParams:"ExportModelToCsvParams",
	ExportMappingToCsvParams:"ExportMappingToCsvParams",
	ExportDataMartToCsvParams:"ExportDataMartToCsvParams",
	ExportTaskToCsvParams:"ExportTaskToCsvParams",
	ImportModelCsvParams:"ImportModelCsvParams",
	ImportMappingsCsvParams:"ImportMappingsCsvParams",
	ImportDataMartsCsvParams:"ImportDataMartsCsvParams",
	ImportTaskCsvParams:"ImportTaskCsvParams",
	UploadCsvZipForComparisonParams:"UploadCsvZipForComparisonParams",
	UploadCsvZipForComparisonRsp:"UploadCsvZipForComparisonRsp",
	DownloadCsvZipComparisonResultsParams:"DownloadCsvZipComparisonResultsParams",
	ApplyCsvParams:"ApplyCsvParams",
	GenerateDocumentationParams:"GenerateDocumentationParams",
	GenerateDocumentationOption:"GenerateDocumentationOption",
	ErrorMartMappingInfo:"ErrorMartMappingInfo",
	EtlTaskMissingRefsImpactedEntities:"EtlTaskMissingRefsImpactedEntities",
	EtlTaskMissingRefs:"EtlTaskMissingRefs",
	EntityStatus:"EntityStatus",
	EntityState:"EntityState",
	EtlTaskExecutorStatusDto:"EtlTaskExecutorStatusDto",
	RelatedKeys:"RelatedKeys",
	ReplicateTaskExecutorStatusDto:"ReplicateTaskExecutorStatusDto",
	ReplicateTaskFullLoadCounters:"ReplicateTaskFullLoadCounters",
	CommandTaskExecutorStatusDto:"CommandTaskExecutorStatusDto",
	ReplicateTaskState:"ReplicateTaskState",
	ReplicateTaskStopReason:"ReplicateTaskStopReason",
	CommandTaskInfoDto:"CommandTaskInfoDto",
	ComposeApi:"ComposeApi",
	Load_Flag:"Load_Flag",
	ComposeDefTypeIds:"ComposeDefTypeIds",
	ValidationAttributeMessages:"ValidationAttributeMessages",
	EncryptAttributeMessages:"EncryptAttributeMessages",
	RestMethodAttributeMessages:"RestMethodAttributeMessages",
	RollOverLogFileParams:"RollOverLogFileParams",
	PutLoggingConfigurationParams:"PutLoggingConfigurationParams",
	GetLoggingConfigurationParams:"GetLoggingConfigurationParams",
	GetServerLogFileListParams:"GetServerLogFileListParams",
	GetServerLogDataParams:"GetServerLogDataParams",
	DownloadServerLogParams:"DownloadServerLogParams",
	ServerExecutionListLogsParams:"ServerExecutionListLogsParams",
	ServerExecutionGetLogDataParams:"ServerExecutionGetLogDataParams",
	ServerExecutionDownloadLogFileParams:"ServerExecutionDownloadLogFileParams",
	GetEngineLogFileListParams:"GetEngineLogFileListParams",
	GetEngineLogDataParams:"GetEngineLogDataParams",
	DownloadEngineLogParams:"DownloadEngineLogParams",
	GetTaskLogFileListParams:"GetTaskLogFileListParams",
	GetTaskLogDataParams:"GetTaskLogDataParams",
	DownloadTaskLogParams:"DownloadTaskLogParams",
	PutHostConfigurationParams:"PutHostConfigurationParams",
	GetHostConfigurationParams:"GetHostConfigurationParams",
	PutEtlScheduleJobParams:"PutEtlScheduleJobParams",
	GetEtlScheduleJobParams:"GetEtlScheduleJobParams",
	DeleteEtlScheduleJobParams:"DeleteEtlScheduleJobParams",
	PutMailServerSettingsParams:"PutMailServerSettingsParams",
	GetMailServerSettingsParams:"GetMailServerSettingsParams",
	DeleteMailServerSettingsParams:"DeleteMailServerSettingsParams",
	SendTestMailParams:"SendTestMailParams",
	PutNotificationRuleParams:"PutNotificationRuleParams",
	GetNotificationRuleParams:"GetNotificationRuleParams",
	DeleteNotificationRuleParams:"DeleteNotificationRuleParams",
	GetNotificationRulesListParams:"GetNotificationRulesListParams",
	PutProjectSettingsParams:"PutProjectSettingsParams",
	GetProjectSettingsParams:"GetProjectSettingsParams",
	ExportProjectRepositoryParams:"ExportProjectRepositoryParams",
	ExportProjectRepositoryConfigParams:"ExportProjectRepositoryConfigParams",
	ImportProjectRepositoryConfigParams:"ImportProjectRepositoryConfigParams",
	GetReusableTransformationsParams:"GetReusableTransformationsParams",
	PutReusableTransformationsParams:"PutReusableTransformationsParams",
	GetWorkFlowListParams:"GetWorkFlowListParams",
	GetWorkFlowParams:"GetWorkFlowParams",
	DeleteWorkFlowParams:"DeleteWorkFlowParams",
	ExecuteWorkFlowParams:"ExecuteWorkFlowParams",
	PauseExecutorParams:"PauseExecutorParams",
	ResumeExecutorParams:"ResumeExecutorParams",
	ValidateWorkFlowParams:"ValidateWorkFlowParams",
	GetWorkflowStatusParams:"GetWorkflowStatusParams",
	ListWorkflowExecutorsParams:"ListWorkflowExecutorsParams",
	ListETLExecutorsParams:"ListETLExecutorsParams",
	StopWorkFlowParams:"StopWorkFlowParams",
	AbortWorkFlowParams:"AbortWorkFlowParams",
	ExecuteReplicateTaskParams:"ExecuteReplicateTaskParams",
	GetReplicateTaskStatusParams:"GetReplicateTaskStatusParams",
	StopReplicateTaskParams:"StopReplicateTaskParams",
	AbortReplicateTaskParams:"AbortReplicateTaskParams",
	ListReplicateExecutorsParams:"ListReplicateExecutorsParams",
	PutJavaServerSettingsParams:"PutJavaServerSettingsParams",
	GetJavaServerSettingsParams:"GetJavaServerSettingsParams",
	PutVersionControlSettingsParams:"PutVersionControlSettingsParams",
	GetVersionControlSettingsParams:"GetVersionControlSettingsParams",
	PutPhysicalPropertiesParams:"PutPhysicalPropertiesParams",
	RegisterLicenseParams:"RegisterLicenseParams",
	GetLicenseParams:"GetLicenseParams",
	ValidateLicenseParams:"ValidateLicenseParams",
	GetCmdTasksListParams:"GetCmdTasksListParams",
	GetCmdTaskParams:"GetCmdTaskParams",
	PutCmdTaskParams:"PutCmdTaskParams",
	DeleteCmdTaskParams:"DeleteCmdTaskParams",
	ExecuteCmdTaskParams:"ExecuteCmdTaskParams",
	StopCmdTaskParams:"StopCmdTaskParams",
	AbortCmdTaskParams:"AbortCmdTaskParams",
	GetCmdTaskStatusParams:"GetCmdTaskStatusParams",
	ListCmdTaskExecutorsStatusesParams:"ListCmdTaskExecutorsStatusesParams",
	GetRootAclParams:"GetRootAclParams",
	PutRootAclParams:"PutRootAclParams",
	DeleteRootAclParams:"DeleteRootAclParams",
	GetProjectAclParams:"GetProjectAclParams",
	PutProjectAclParams:"PutProjectAclParams",
	DeleteProjectAclParams:"DeleteProjectAclParams",
	GetProjectsAclParams:"GetProjectsAclParams",
	PutProjectsAclParams:"PutProjectsAclParams",
	DeleteProjectsAclParams:"DeleteProjectsAclParams",
	GetProjectsEffectiveRoleParams:"GetProjectsEffectiveRoleParams",
	GetProjectEffectiveRoleParams:"GetProjectEffectiveRoleParams",
	GetRootEffectiveRoleParams:"GetRootEffectiveRoleParams",
	GetProjectModelAclParams:"GetProjectModelAclParams",
	PutProjectModelAclParams:"PutProjectModelAclParams",
	DeleteProjectModelAclParams:"DeleteProjectModelAclParams",
	GetProjectModelEffectiveRoleParams:"GetProjectModelEffectiveRoleParams",
	GetAuditTrailParams:"GetAuditTrailParams",
	GetAuditTrailPayloadParams:"GetAuditTrailPayloadParams"
};

DO.sessionToken = function () {
	this.SessionToken = "";
};

DO.RESPONSE_STATUS = {
	STATUS_FAILED:"Failed",
	STATUS_SUCCESS:"Success"
};

