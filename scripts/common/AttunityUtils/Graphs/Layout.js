!function(global){"use strict";function getMovingLine(sourceX,sourceY,targetX,targetY){var points=[];return points.push({x:targetX,y:targetY}),points.push({x:sourceX,y:sourceY}),d3.svg.line().x(function(d){return d.x}).y(function(d){return d.y}).interpolate("basis")(points)}function getArrowWithHeadPath(sourceX,sourceY,targetX,targetY){var points=[];points.push({x:targetX,y:targetY}),points.push({x:sourceX,y:sourceY});var baseWidthMarker=5,baseLengthMarker=10,deg90=Math.PI/2,dx=targetX-sourceX,dy=targetY-sourceY,theta=Math.atan2(dy,dx),dtxs=targetX-2*Math.cos(theta),dtys=targetY-2*Math.sin(theta),d90Theta=deg90-theta,markerPath=" M "+dtxs+", "+dtys+" l"+(baseWidthMarker*Math.cos(d90Theta)-baseLengthMarker*Math.cos(theta))+", "+(-baseWidthMarker*Math.sin(d90Theta)-baseLengthMarker*Math.sin(theta))+" L"+(dtxs-baseWidthMarker*Math.cos(d90Theta)-baseLengthMarker*Math.cos(theta))+", "+(dtys+baseWidthMarker*Math.sin(d90Theta)-baseLengthMarker*Math.sin(theta))+"z";return d3.svg.line().x(function(d){return d.x}).y(function(d){return d.y}).interpolate("basis")(points)+markerPath}global.AttuGraph.layouts=global.AttuGraph.layouts||{},global.AttuGraph.layouts.dagreLayout=function(params){var options={nodeSep:params.nodeSep,edgeSep:params.edgeSep,rankSep:params.rankSep,rankDir:params.rankDir,multigraph:!0};return this.graphObj=null,this.run=function(nodes_d,edges_d){this.graphObj||(this.graphObj=new dagreD3.dagre.graphlib.Graph,this.graphObj.setGraph(options),this.graphObj.setDefaultEdgeLabel(function(){return{}}));for(var i=0;i<nodes_d.length;i++){var node=nodes_d[i];this.graphObj.hasNode(node.id)||this.graphObj.setNode(node.id,node)}for(var i=0;i<edges_d.length;i++){var edge=edges_d[i];this.graphObj.hasEdge(edge.source.id,edge.target.id)||this.graphObj.setEdge(edge.source.id,edge.target.id)}dagreD3.dagre.layout(this.graphObj)},this.getEdgePath=function(edge){var pointTarget=AttuGraph.Utils.point(edge.target),pointSource=AttuGraph.Utils.point(edge.source);return"LR"==params.rankDir?(pointSource.x=pointSource.x+edge.source.bbox.width,pointSource.y=pointSource.y+edge.source.bbox.height/2,pointTarget.y=pointTarget.y+edge.target.bbox.height/2):"RL"==params.rankDir?(pointSource.y=pointSource.y+edge.source.bbox.height/2,pointTarget.x=pointTarget.x+edge.target.bbox.width,pointTarget.y=pointTarget.y+edge.target.bbox.height/2):"TB"==params.rankDir?(pointSource.x=pointSource.x+edge.source.bbox.width/2,pointSource.y=pointSource.y+edge.source.bbox.height,pointTarget.x=pointTarget.x+edge.target.bbox.width/2):"BT"==params.rankDir&&(pointSource.x=pointSource.x+edge.source.bbox.width/2,pointTarget.x=pointTarget.x+edge.target.bbox.width/2,pointTarget.y=pointTarget.y+edge.target.bbox.height),getArrowWithHeadPath(pointSource.x,pointSource.y,pointTarget.x,pointTarget.y)},this},global.AttuGraph.layouts.starSchema=function(params){var options={linkMinLength:params.linkMinLength||100,r:params.r||100,marginTop:50,marginLeft:50,angleOffsetFromCenter:0};return this.run=function(nodes_d,edges_d){if(0!=nodes_d.length||0!=edges_d.length){null==params.r&&(edges_d.length>1?options.r=edges_d.length*options.linkMinLength/(2*Math.PI):(1==edges_d.length||1==nodes_d.length)&&(options.r=options.linkMinLength/2));var midCircle,r=options.r;if(midCircle=0==edges_d.length?nodes_d[0]:edges_d[0].source,midCircle.x=options.marginLeft+r,midCircle.y=options.marginTop+r,nodes_d.length>=1)for(var angle=360/(nodes_d.length-1),k=0,i=0;i<nodes_d.length;i++)nodes_d[i]!=midCircle&&(nodes_d[i].x=midCircle.x+r*Math.cos((angle*k+params.angleOffsetFromCenter)*Math.PI/180),nodes_d[i].y=midCircle.y+r*Math.sin((angle*k+params.angleOffsetFromCenter)*Math.PI/180),k++)}},this.getEdgePath=function(edge){var pointTarget=AttuGraph.Utils.point(edge.target),pointSource=AttuGraph.Utils.point(edge.source);return pointSource.x=pointSource.x+edge.source.bbox.width/2,pointSource.y=pointSource.y+edge.source.bbox.height/2,pointTarget.x=pointTarget.x+edge.target.bbox.width/2,pointTarget.y=pointTarget.y+edge.target.bbox.height/2,getMovingLine(pointSource.x,pointSource.y,pointTarget.x,pointTarget.y)},this},global.AttuGraph.layouts.treeLayout=function(){return this.run=function(){},this}}(this);